{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4eba\u751f\u200b\u5982\u200b\u9006\u65c5\u200b, \u200b\u6211\u200b\u4ea6\u200b\u662f\u200b\u884c\u4eba","text":"<p>Statistics</p> <p>Pages\uff1a87  Words\uff1a31631  </p> <p>Find me on</p> <ul> <li>: zicx.top</li> <li>: blog.zicx.top</li> <li>: start.zicx.top</li> <li>: cxzhou35[at]zju.edu.cn</li> </ul> ~~ Welcome to my notebook, take it easy ~~"},{"location":"diss/","title":"\u6b22\u8fce\u200b\u6765\u5230\u200b\u8ba8\u8bba\u533a\u200b!","text":"<p>Introduction</p> <p>\u200b\u4e00\u76f4\u200b\u627e\u200b\u4e0d\u5230\u200b\u6bd4\u8f83\u200b\u597d\u7528\u200b\u7684\u200b\u8de8\u5e73\u53f0\u200b\u7b14\u8bb0\u200b\u8f6f\u4ef6\u200b\uff0c\u200b\u5728\u200b\u5927\u5bb6\u200b\u7684\u200b\u63a8\u8350\u200b\u4e0b\u200b\u9009\u62e9\u200b\u7528\u200b Mkdocs \u200b\u6765\u200b\u642d\u5efa\u200b\u5728\u7ebf\u200b\u7b14\u8bb0\u672c\u200b\u3002\u200b\u5e0c\u671b\u200b\u80fd\u200b\u548c\u200b\u66f4\u200b\u591a\u200b\u4eba\u200b\u4e00\u8d77\u200b\u5206\u4eab\u200b\u77e5\u8bc6\u200b\uff01\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7559\u4e0b\u200b\u4f60\u200b\u7684\u200b\u8db3\u8ff9\u200b \ud83d\udc63\ud83d\udc63</p> <p>Friends</p> <p> Isshiki\u200b\u4fee\u200b's Notebook \u200b\u8d85\u5f3a\u200b\u4e00\u8272\u200b\u4fee\u200b\u563f\u563f\u200b </p> <p> \u200b\u54b8\u9c7c\u200b\u6684\u200b\u7684\u200b\u4ee3\u7801\u200b\u7a7a\u95f4\u200b \u200b\u5df2\u7ecf\u200b\u5728\u200b\u6253\u5de5\u200b\u4e50\u200b\u7684\u200b\u5149\u5934\u200b\u5b66\u957f\u200b </p> <p> Oneko Zone \u200b\u53ef\u7231\u200b\u732b\u732b\u200b\u634f\u200b </p> <p> Jiepeng's notebook \u200b\u5f88\u200b\u5389\u5bb3\u200b\u7684\u200b\u5de5\u9ad8\u200b\u5b66\u5f1f\u200b </p> <p>\u200b\u6b22\u8fce\u200b\u53cb\u94fe\u200b\uff01</p>"},{"location":"update/","title":"\u8fd1\u671f\u200b\u66f4\u65b0","text":"<p>\u200b\u6700\u8fd1\u200b\u66f4\u65b0\u200b\u7684\u200b\u5185\u5bb9\u200b</p> <ul> <li> <p>\u200b\u5728\u200b\u5b66\u4e60\u200bMIT\u200b\u7684\u200b\u4e00\u95e8\u200b\u8bfe\u7a0b\u200b\uff1aIntroduction to Flow Matching and Diffusion Models\uff0c notes</p> </li> <li> <p>\u200b\u53d7\u200b\u8bfe\u9898\u7ec4\u200b\u5e08\u5144\u200b\u7684\u200b\u542f\u53d1\u200b\uff0c\u200b\u5e0c\u671b\u200b\u7763\u4fc3\u200b\u81ea\u5df1\u200b\u65e5\u5e38\u200b\u6574\u7406\u200b\u79ef\u7d2f\u200b\u4e00\u4e9b\u200b\u5b66\u4e60\u200b\u7ecf\u9a8c\u200b\u548c\u200b\u79d1\u7814\u200b\u7ecf\u9a8c\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u81ea\u5df1\u200b\u56de\u987e\u200b\u53cd\u601d\u200b\uff0c\u200b\u4e0d\u5b9a\u671f\u200b\u7684\u200b\u4f1a\u200b\u66f4\u65b0\u200b</p> <p>\u200b\u5e08\u5144\u200b\u5206\u4eab\u200b\u7684\u200b\u79d1\u7814\u200b\u7ecf\u9a8c\u200b\u5f88\u200b\u6709\u200b\u4ef7\u503c\u200b\uff0c\u200b\u63a8\u8350\u200b\u5927\u5bb6\u200b\u770b\u4e00\u770b\u200b  pengsida/learning_research</p> </li> <li> <p>\u200b\u5907\u5fd8\u5f55\u200b\u6700\u8fd1\u200b\u66f4\u65b0\u200b\u4e86\u200b:</p> <ul> <li> Conda</li> <li> PyTorch</li> </ul> </li> <li> <p>\u200b\u8bfe\u7a0b\u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u4f1a\u200b\u6162\u6162\u200b\u4ece\u200b\u672c\u5730\u200b\u8fc1\u79fb\u200b\u8fc7\u6765\u200b\uff0c\u200b\u968f\u7f18\u200b\u66f4\u65b0\u200b~</p> </li> </ul> <p>\u200b\u8fd1\u671f\u200b\u505a\u200b\u7684\u200b\u4e00\u4e9b\u200b\u4e8b\u60c5\u200b</p> <ul> <li>\u200b\u5b66\u4e60\u200bLua\u200b\u8bed\u8a00\u200b\u548c\u200bNeovim\u200b\u7684\u200b\u63d2\u4ef6\u200b\u5f00\u53d1\u200b</li> <li>\u200b\u5b66\u4e60\u200b Taichi\uff0c\u200b\u771f\u7684\u200b\u4e0d\u60f3\u200b\u5199\u200bCUDA\u200b\u4e86\u200b :(</li> <li>\u200b\u63d0\u9ad8\u200b\u81ea\u5df1\u200b\u7684\u200b\u82f1\u8bed\u200b\u80fd\u529b\u200b\uff0c\u200b\u91cd\u70b9\u200b\u662f\u200b\u63d0\u9ad8\u200b\u542c\u8bf4\u200b\u80fd\u529b\u200b\u5982\u679c\u200b\u6709\u200b\u597d\u200b\u7684\u200b\u5efa\u8bae\u200b\u548c\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u6211\u200b\u7559\u8a00\u200b\uff0c\u200b\u8054\u7cfb\u65b9\u5f0f\u200b\u5728\u200b\u7f51\u7ad9\u200b\u4e3b\u9875\u200b\u7684\u200b\u53f3\u4e0b\u89d2\u200b\u3002</li> </ul>"},{"location":"_assets/files/template/","title":"Template","text":"\u6570\u636e\u5e93\u7cfb\u7edf\u200b Cheating Sheet by HobbitQia 3.1 MB / 2 P / 2023-06-20 <p> \u200b\u4e0b\u8f7d\u200b</p>"},{"location":"course/","title":"\u8bfe\u7a0b\u200b\u7b14\u8bb0","text":"<p>Info</p> <p>\u200b\u8fd9\u91cc\u200b\u662f\u200b\u8bfe\u7a0b\u200b\u7b14\u8bb0\u200b\uff0c\u200b\u4e3b\u8981\u200b\u6db5\u76d6\u200b\u4e86\u200b\u8ba1\u7b97\u673a\u200b\uff0c\u200b\u5149\u7535\u200b\uff0c\u200b\u6570\u5b66\u200b\u7684\u200b\u4e00\u4e9b\u200b\u8bfe\u7a0b\u200b\u4ee5\u53ca\u200b\u540d\u6821\u200b\u7684\u200b\u516c\u5f00\u8bfe\u200b\u3002</p>"},{"location":"course/cs/","title":"Computer Science","text":"<p>Abstract</p> <p>\u200b\u8ba1\u7b97\u673a\u76f8\u5173\u200b\u8bfe\u7a0b\u200b\u7684\u200b\u7b14\u8bb0\u200b</p> <p></p> <p> Sometimes it's the very people who no one imagines anything of who do the things no one can imagine. </p> <p> \u2014\u2014 Alan Turing </p> <p></p>"},{"location":"course/cs/cs106L/","title":"CS106L: Standard C++ Programming","text":"<p>Abstract</p> <ul> <li> Website: Latest version</li> <li> Video: (2019 Fall)</li> <li> Github: Zicx's repo (2022 Winter)</li> </ul>"},{"location":"course/cs/cs106L/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Lec01: \u200b\u8bfe\u7a0b\u200b\u4ecb\u7ecd\u200b</li> <li>Lec02: \u200b\u7c7b\u578b\u200b\u548c\u200b\u7ed3\u6784\u200b</li> </ul> <p>\u200b\u5728\u200b\u5b66\u4e60\u200b\u8fd9\u95e8\u200b\u8bfe\u200b\u7684\u200b\u65f6\u5019\u200b\u7531\u4e8e\u200b\u8d44\u6599\u200b\u90fd\u200b\u662f\u200b\u82f1\u6587\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7528\u200b\u82f1\u6587\u200b\u8bb0\u200b\u7684\u200b\u7b14\u8bb0\u200b\uff0c\u200b\u5728\u200b\u7f51\u7ad9\u200b\u4e0a\u200b\u6392\u7248\u200b\u4f1a\u200b\u663e\u5f97\u200b\u5f88\u200b\u7a00\u758f\u200b\uff0c\u200b\u4e4b\u540e\u200b\u4f1a\u200b\u66f4\u65b0\u200b\u6210\u200b\u4e2d\u6587\u200b\u7b14\u8bb0\u200b\u7684\u200b\uff0c\u200b\u6709\u4e9b\u200b\u4e0d\u4f1a\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u5730\u65b9\u200b\u4f1a\u200b\u4fdd\u7559\u200b\u539f\u59cb\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u6709\u200b\u7ffb\u8bd1\u200b\u9519\u8bef\u200b\u6216\u200b\u4e0d\u59a5\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8bc4\u8bba\u200b\u533a\u200b\u544a\u8bc9\u200b\u6211\u200b\u54e6\u200b :)</p>"},{"location":"course/cs/cs106L/lec01_intro/","title":"\u8bfe\u7a0b\u200b\u4ecb\u7ecd","text":"<p> \u200b\u7ea6\u200b 288 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs106L/lec01_intro/#cs106l","title":"\u5173\u4e8e\u200b CS106L","text":"<ul> <li>\u200b\u91cd\u70b9\u200b\u5728\u4e8e\u200b\u4ee3\u7801\u200b: \u200b\u600e\u6837\u200b\u8ba9\u200b\u4ee3\u7801\u200b\u53d8\u5f97\u200b\u66f4\u597d\u200b\uff0c\u200b\u4f18\u96c5\u200b\u7684\u200b\u4ee3\u7801\u200b\u5e94\u8be5\u200b\u662f\u200b\u600e\u4e48\u6837\u200b\u7684\u200b</li> <li>\u200b\u7406\u89e3\u200b C++ \u200b\u662f\u200b\u600e\u4e48\u200b\u4ea7\u751f\u200b\u548c\u200b\u53d1\u5c55\u200b\u7684\u200b</li> <li>\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b STL</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#c","title":"C++ \u200b\u7684\u200b\u5386\u53f2","text":""},{"location":"course/cs/cs106L/lec01_intro/#_2","title":"\u6c47\u7f16\u8bed\u8a00","text":""},{"location":"course/cs/cs106L/lec01_intro/#_3","title":"\u4f18\u52bf","text":"<ul> <li>\u200b\u7b80\u5355\u200b\u7684\u200b\u6307\u4ee4\u96c6\u200b</li> <li>\u200b\u8fd0\u884c\u200b\u901f\u5ea6\u200b\u5feb\u200b(\u200b\u5982\u679c\u200b\u4ee3\u7801\u200b\u5199\u200b\u5f97\u200b\u597d\u200b)</li> <li>\u200b\u53ef\u4ee5\u200b\u5b8c\u5168\u200b\u63a7\u5236\u200b\u4f60\u200b\u7684\u200b\u7a0b\u5e8f\u200b</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#_4","title":"\u4e0d\u8db3","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u5199\u200b\u7684\u200b\u5f88\u200b\u5197\u957f\u200b(\u200b\u5373\u4f7f\u200b\u662f\u200b\u6267\u884c\u200b\u7b80\u5355\u200b\u7684\u200b\u4efb\u52a1\u200b)</li> <li>\u200b\u4ee3\u7801\u200b\u5f88\u96be\u200b\u7406\u89e3\u200b</li> <li>\u200b\u901a\u7528\u6027\u200b\u5f88\u5dee\u200b(\u200b\u5f88\u96be\u200b\u8de8\u5e73\u53f0\u200b\u5de5\u4f5c\u200b)</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#c_1","title":"C \u200b\u8bed\u8a00\u200b\u7684\u200b\u51fa\u73b0","text":""},{"location":"course/cs/cs106L/lec01_intro/#_5","title":"\u4f18\u52bf","text":"<ul> <li>\u200b\u66f4\u200b\u5feb\u200b</li> <li>\u200b\u66f4\u200b\u7b80\u5355\u200b</li> <li>\u200b\u8de8\u5e73\u53f0\u200b</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#_6","title":"\u4e0d\u8db3","text":"<ul> <li>\u200b\u6ca1\u6709\u200b\u5bf9\u8c61\u200b\u548c\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u5f88\u96be\u200b\u5199\u51fa\u200b \"\u200b\u901a\u7528\u200b\u4ee3\u7801\u200b\"</li> <li>\u200b\u7f16\u5199\u200b\u5927\u578b\u9879\u76ee\u200b\u5f88\u200b\u5403\u529b\u200b</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#c_2","title":"C++ \u200b\u7684\u200b\u8bbe\u8ba1\u200b\u7406\u5ff5","text":"<p>C++ \u200b\u6838\u5fc3\u200b\u6307\u5357\u200b</p> <ul> <li>\u200b\u53ea\u200b\u6dfb\u52a0\u200b\u7528\u4e8e\u200b\u89e3\u51b3\u200b\u5b9e\u9645\u200b\u95ee\u9898\u200b\u7684\u200b\u7279\u6027\u200b</li> <li>\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u76f4\u63a5\u200b\u8868\u8fbe\u200b\u60f3\u6cd5\u200b\u548c\u200b\u610f\u56fe\u200b</li> <li>\u200b\u533a\u5757\u200b\u5316\u200b(Compartmentalization) \u200b\u662f\u200b\u5173\u952e\u200b</li> <li>\u200b\u4e0d\u8981\u200b\u6d6a\u8d39\u65f6\u95f4\u200b\u6216\u200b\u7a7a\u95f4\u200b</li> <li>\u200b\u5c3d\u53ef\u80fd\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u4fdd\u8bc1\u200b\u5b89\u5168\u200b</li> </ul>"},{"location":"course/cs/cs106L/lec01_intro/#stl","title":"\u5173\u4e8e\u200b STL","text":"<ul> <li>\u200b\u529f\u80fd\u6027\u200b\u9f50\u5168\u200b, \u200b\u5305\u62ec\u200b\u5e38\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\u548c\u200b\u4e00\u4e9b\u200b\u7b97\u6cd5\u200b</li> <li>\u200b\u5185\u7f6e\u200b\u591a\u200b\u79cd\u7c7b\u200b, \u200b\u6bd4\u5982\u200b maps, sets, vectors</li> <li>\u200b\u901a\u8fc7\u200b namespace <code>std::</code> \u200b\u6765\u200b\u4f7f\u7528\u200b STL \u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u529f\u80fd\u5f3a\u5927\u200b\u5e76\u4e14\u200b\u4e00\u76f4\u200b\u5728\u200b\u66f4\u65b0\u200b\u7ef4\u62a4\u200b</li> </ul>"},{"location":"course/cs/cs106L/lec02_types_and_structs/","title":"\u7c7b\u578b\u200b\u548c\u200b\u7ed3\u6784","text":"<p> \u200b\u7ea6\u200b 495 \u200b\u4e2a\u200b\u5b57\u200b  62 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#c","title":"C++ \u200b\u57fa\u7840\u200b\u7c7b\u578b","text":"<pre><code>int val = 5; //32 bits\nchar ch = 'F'; //8 bits (usually)\nfloat decimalVal1 = 5.0; //32 bits (usually)\ndouble decimalVal2 = 5.0; //64 bits (usually)\nbool bVal = true; //1 bit\n</code></pre> <p>\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u578b\u200b: <pre><code>#include &lt;string&gt; // need `string` library\nstd::string str = \"Sarah\"; // double quotes means string\n\n// index into a string and get a character\nchar character = str[1]; // 'a'\n</code></pre></p>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#_2","title":"\u52a8\u6001\u200b\u7c7b\u578b\u200b\u548c\u200b\u9759\u6001\u200b\u7c7b\u578b","text":"<p>C++ \u200b\u662f\u200b\u4e00\u79cd\u200b\u9759\u6001\u200b\u7c7b\u578b\u200b\u8bed\u8a00\u200b</p> <ul> <li>\u200b\u9759\u6001\u200b\u7c7b\u578b\u200b: \u200b\u5177\u6709\u200b\u547d\u540d\u200b(\u200b\u53d8\u91cf\u200b\uff0c\u200b\u51fd\u6570\u200b\u7b49\u200b)\u200b\u7684\u200b\u5185\u5bb9\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e4b\u524d\u200b\u90fd\u200b\u5177\u6709\u200b\u660e\u786e\u200b\u7c7b\u578b\u200b (C++)</li> <li>\u200b\u52a8\u6001\u200b\u7c7b\u578b\u200b: \u200b\u5177\u6709\u200b\u547d\u540d\u200b(\u200b\u53d8\u91cf\u200b\uff0c\u200b\u51fd\u6570\u200b\u7b49\u200b)\u200b\u7684\u200b\u5185\u5bb9\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u6839\u636e\u200b\u5f53\u524d\u200b\u503c\u200b\u88ab\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b (Python)</li> <li>\u200b\u8fd0\u884c\u200b\u65f6\u200b: \u200b\u4ece\u200b\u7a0b\u5e8f\u200b\u5f00\u59cb\u8fd0\u884c\u200b\u5230\u200b\u7ec8\u6b62\u200b\u7684\u200b\u65f6\u671f\u200b (\u200b\u5982\u679c\u200b\u662f\u200b\u9700\u8981\u200b\u7f16\u8bd1\u200b\u7684\u200b\u8bed\u8a00\u200b, \u200b\u5219\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u4e4b\u540e\u200b)</li> </ul> <pre><code># CRASH during runtime, can\u2019t divide a string\ndef div_3(x):\n    return x / 3\n\ndiv_3(\"hello\")\n</code></pre> <pre><code>// Compile error: this code will never run\nint div_3(int x){\n    return x / 3;\n}\ndiv_3(\"hello\");\n</code></pre> <p>\u200b\u9759\u6001\u200b\u7c7b\u578b\u200b\u6709\u52a9\u4e8e\u200b\u6211\u4eec\u200b\u5728\u200b\u4ee3\u7801\u8fd0\u884c\u200b\u4e4b\u524d\u200b\u53d1\u73b0\u200b\u548c\u200b\u89e3\u51b3\u200b\u9519\u8bef\u200b\u3002</p>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#_3","title":"\u91cd\u8f7d","text":"<p>\u200b\u5b9a\u4e49\u200b\u4e24\u4e2a\u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u540d\u79f0\u200b\u4f46\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5185\u5bb9\u200b(\u200b\u8fd0\u7b97\u7b26\u200b, \u200b\u51fd\u6570\u200b\u7b49\u200b), \u200b\u4e4b\u540e\u200b\u7684\u200b\u8bfe\u7a0b\u200b\u4f1a\u200b\u91cd\u70b9\u200b\u8bb2\u89e3\u200b</p> <pre><code>int half(int x) {\n    std::cout &lt;&lt; \u201c1\u201d &lt;&lt; endl;\n    return x / 2;\n}\n\ndouble half(double x) {\n    cout &lt;&lt; \u201c2\u201d &lt;&lt; endl;\n    return x / 2;\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#struct","title":"Struct","text":"<p><code>struct</code>: \u200b\u4e00\u79cd\u200b\u7531\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u53ef\u7528\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u5141\u8bb8\u200b\u5b58\u50a8\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u9879\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u5c06\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u7684\u200b\u65b9\u5f0f\u200b</p> <pre><code>struct Student {\n    string name; // these are called fields\n    string state; // separate these by semicolons\n    int age;\n};\n\nStudent s; // don't have to add `struct` key word\ns.name = \"Sarah\";\ns.state = \"CA\";\ns.age = 21; // use . to access fields\n\n// is the same as ...\nStudent s = {\"Sarah\", \"CA\", 21};\n\n// structured binding -- c++17 feature\nauto [name, state, age] = s;\n</code></pre>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#pair","title":"Pair","text":"<p><code>std::pair</code>: STL \u200b\u5185\u7f6e\u200b\u7684\u200b\u4e00\u79cd\u200b <code>struct</code>\uff0c\u200b\u7531\u200b\u4e24\u4e2a\u200b fields \u200b\u7ec4\u6210\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b</p> <pre><code>// The fields in std::pairs are named `first` and `second`\n// initialize\nstd::pair&lt;int, string&gt; numSuffix{1, \"st\"};\nstd::cout &lt;&lt; numSuffix.first &lt;&lt; numSuffix.second &lt;&lt; std::endl;\n\n// is same as ...\nstd::pair&lt;int, string&gt; numSuffix = std::make_pair(1, \"st\");\n\n// also same as ...\nstd::pair&lt;int, string&gt; numSuffix = {1, \"st\"};\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u6307\u5b9a\u200b <code>pair</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b <code>std::make_pair(field1, field2)</code></p> <pre><code>std::string suffix;\nint num;\nstd::tie(num, suffix) = std::make_pair(1, \"st\");\nstd::cout &lt;&lt; num &lt;&lt; \" \" &lt;&lt; suffix &lt;&lt; std::endl;\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b <code>std::tie(arg1, arg2)</code> \u200b\u6765\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b <code>pair</code>\uff0c\u200b\u5728\u200b c++17 \u200b\u4e2d\u200b\uff0c\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7279\u6027\u200b\u53eb\u200b\u7ed3\u6784\u5316\u200b\u7ed1\u5b9a\u200b(Structured Bindings)\uff0c\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u7b80\u5316\u200b\u4ee3\u7801\u200b</p> <pre><code>// more efficient way in c++17\nauto [a, b] = std::make_pair(3.4, 5);\n</code></pre>"},{"location":"course/cs/cs106L/lec02_types_and_structs/#auto","title":"Auto","text":"<p><code>auto</code>: C++ \u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u505a\u200b\u7c7b\u578b\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\uff0c\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b</p> <ul> <li>\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u65f6\u200b\u6839\u636e\u200b\u521d\u59cb\u5316\u200b\u8868\u8fbe\u5f0f\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u58f0\u660e\u200b\u51fd\u6570\u200b\u65f6\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5360\u4f4d\u200b\u7b26\u200b</li> </ul> <p>\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u5e94\u8be5\u200b\u4f7f\u7528\u200b auto?</p> <ul> <li>\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u5728\u610f\u200b\u662f\u200b\u4ec0\u4e48\u200b\u7c7b\u578b\u200b (iterators)</li> <li>\u200b\u5b83\u200b\u7684\u200b\u7c7b\u578b\u200b\u5728\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u5f88\u200b\u660e\u786e\u200b (templates)</li> <li>\u200b\u4f60\u200b\u4e0d\u200b\u77e5\u9053\u200b\u5177\u4f53\u200b\u662f\u200b\u4ec0\u4e48\u200b\u7c7b\u578b\u200b (lambdas)</li> <li>\u200b\u4e0d\u8981\u200b\u5c06\u200b\u5b83\u200b\u7528\u4e8e\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u8ba9\u200b\u4eba\u200b\u5f88\u200b\u8ff7\u60d1\u200b\uff0c\u200b\u50cf\u200b\u4e0b\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e00\u6837\u200b     <pre><code>auto spliceString(const string&amp; s);\n</code></pre></li> </ul> <p>\u200b\u4f7f\u7528\u200b auto \u200b\u5e76\u200b\u4e0d\u200b\u610f\u5473\u7740\u200b\u53d8\u91cf\u200b\u6ca1\u6709\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b\u7531\u200b\u7f16\u8bd1\u5668\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u7684\u200b</p>"},{"location":"course/cs/cs106L/lec03_streams/","title":"\u6d41\u548c\u6d41\u200b\u5bf9\u8c61","text":"<p> \u200b\u7ea6\u200b 636 \u200b\u4e2a\u200b\u5b57\u200b  64 \u200b\u884c\u200b\u4ee3\u7801\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 3 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs106L/lec03_streams/#_2","title":"\u6d41","text":"<p>Convert between string-represented data and the real thing.</p> <p></p> <p><code>stream</code>: an abstraction for input/output. Streams convert between data and the string representation of data.</p>"},{"location":"course/cs/cs106L/lec03_streams/#_3","title":"\u6807\u51c6\u200b\u8f93\u5165\u200b/\u200b\u8f93\u51fa\u200b\u6d41","text":"<ul> <li><code>cin</code>: Standard input stream(buffered)</li> <li><code>cout</code>: Standard output stream(buffered)</li> <li><code>cerr</code>: Standard error stream(unbuffered)</li> <li><code>clog</code>: Standard error stream(buffered)</li> </ul>"},{"location":"course/cs/cs106L/lec03_streams/#_4","title":"\u8f93\u51fa\u200b\u6d41","text":"<p><code>std::out</code> is an output stream. It has type <code>std::ostream</code>.</p> <ul> <li>Can only send data using the <code>&lt;&lt;</code> operator.</li> <li>Converts data of any type into string and sends it to the stream.</li> <li>std::cout is the output stream that goes to the console.</li> </ul> <p>Example</p> <pre><code>std::cout &lt;&lt; 5 &lt;&lt; std::endl;\n// converts int value 5 to string \"5\"\n// send \"5\" to the console output stream\n</code></pre>"},{"location":"course/cs/cs106L/lec03_streams/#_5","title":"\u8f93\u5165\u200b\u6d41","text":"<p><code>std::cin</code> is an input stream. It has type <code>std::istream</code>.</p> <ul> <li>Can only send data using the <code>&gt;&gt;</code> operator.</li> <li>Receives a string from the stream and converts it to data.</li> <li>std::cin is the input stream that gets input from the console.</li> <li>The result of <code>cin &gt;&gt;</code> expression is <code>bool</code>, we can use if (cin &gt;&gt; ...) to check input.</li> </ul> <p>Example</p> <pre><code>int x;\nstring str;\nstd::cin &gt;&gt; x &gt;&gt; str;\n//reads exactly one int then one string from console\n</code></pre> <p>\u200b\u5173\u4e8e\u200b std::in</p> <ul> <li>Each <code>&gt;&gt;</code> only reads until the next whitespace(tab, space, newline).</li> <li>Everything after the \ufb01rst whitespace gets saved(saved in buffer) and used the next time <code>std::cin &gt;&gt;</code> is called.</li> <li>Once an error is detected, the input stream's fail bit is set, and it will no longer accept input.</li> <li>Types matter<ul> <li>Stream stops reading at any whitespace or any invalid character for the type.</li> </ul> </li> </ul> <p>Question</p> <p>Why &gt;&gt; with cin is a nightmare?</p> <ul> <li>cin reads the entire line into the buffer but extracts whitespace-separated tokens.</li> <li>Trash in the buffer will make cin not prompt the user for input at the right time.</li> <li>When cin fails, all future cin calls fail too.</li> </ul> <p>Think of a std::istream as a sequence of characters.</p> <p>Example</p> <pre><code>int age; double hourlyWage;\ncout &lt;&lt; \"Please enter your age: \";\ncin &gt;&gt; age;\ncout &lt;&lt; \"Please enter your hourly wage: \";\ncin &gt;&gt; hourlyWage;\n//what happens if first input is 2.17?\n\ncout &lt;&lt; \"\\nage: \" &lt;&lt; age &lt;&lt; endl;\ncout &lt;&lt; \"hourlyWage : \" &lt;&lt; hourlyWage &lt;&lt; endl;\n// age: 2\n// hourlyWage: 0.17\n</code></pre> <p>When we first input 2.17, the <code>2</code> is read and put into variable <code>age</code>, but the std::istream is still reading(not meet whitespace), and save <code>.17</code> in buffer, when the second <code>std::cin &gt;&gt;</code> called, write <code>.17</code> into variable <code>hourlyWage</code>.</p>"},{"location":"course/cs/cs106L/lec03_streams/#_6","title":"\u72b6\u6001\u200b\u4f4d","text":"<p>We can use state bits to check if the stream has errors.</p> <ul> <li><code>Good bit</code>: ready for read/write</li> <li><code>Fail bit</code>: previous operation failed, all future operations frozen<ul> <li>type mismatch</li> <li>file can't be opened</li> <li>seekg failed</li> </ul> </li> <li><code>EOF bit</code>: previous operation reached the end of buffer content</li> <li><code>Bad bit</code>: external error, likely irrecoverable</li> </ul> <p>Example</p> <pre><code>std::istringstream iss(str);\ncout &lt;&lt; iss.good() &lt;&lt; endl;\ncout &lt;&lt; iss.fail() &lt;&lt; endl;\ncout &lt;&lt; iss.eof() &lt;&lt; endl;\ncout &lt;&lt; iss.bad() &lt;&lt; endl;\n</code></pre>"},{"location":"course/cs/cs106L/lec03_streams/#stdgetline","title":"std::getline()","text":"<ul> <li>Defined in header\u00a0<code>&lt;string&gt;</code></li> <li>Used to read a string or a line from an input stream.</li> <li>Signature: <code>istream&amp; getline(istream&amp; is, string&amp; str, char delim);</code><ul> <li>is: Stream to read from</li> <li>str: Place where input from stream is stored</li> <li>delim: When to stop reading (<code>\\n</code> as default)</li> </ul> </li> <li>How it works<ul> <li>Clears contents in str</li> <li>Extracts chars from is and stores them in str until:<ul> <li>End of \ufb01le buffer of is, sets EOF bit (can be checked using <code>is.eof()</code>)</li> <li>Next char in is is delim(default is \\n), extracts but does not store delim</li> <li>str max size is reached, sets FAIL bit (can be checked using <code>is.fail()</code>)</li> </ul> </li> </ul> </li> </ul> <p>Hint</p> <p>Notice getline(istream&amp; stream, string&amp; line) takes in both parameters by reference!</p> <p>How to use std::getline()</p> <p>Example</p> <pre><code>string line;\nstd::getline(cin, line); // now line has changed\nstd::cout &lt;&lt; line &lt;&lt; std::endl;\n</code></pre> <p>Compare <code>&gt;&gt;</code> with <code>geline</code></p> <ul> <li><code>&gt;&gt;</code> reads up to the next whitespace character and does not go past that whitespace character.</li> <li><code>getline</code> reads up to the next delimiter (by default, '\\n'), and does go past that delimiter.</li> </ul>"},{"location":"course/cs/cs106L/lec03_streams/#_7","title":"\u6587\u4ef6\u200b\u6d41","text":""},{"location":"course/cs/cs106L/lec03_streams/#_8","title":"\u8f93\u51fa\u200b\u6587\u4ef6\u200b\u6d41","text":"<ul> <li>Defined in header <code>&lt;fstream&gt;</code></li> <li>Have type <code>std::ofstream</code></li> <li>Can only send data using the <code>&lt;&lt;</code> operator.</li> <li>Converts data of any type into a string and sends it to the \ufb01le stream.</li> <li>Must initialize your own ofstream object linked to your \ufb01le.</li> </ul> <p>Example</p> <pre><code>std::ofstream out_file(\"out.txt\");\n// out_file is now an ofstream that outputs to out.txt\nout_file &lt;&lt; 5 &lt;&lt; std::endl; // out.txt now contains 5\n</code></pre>"},{"location":"course/cs/cs106L/lec03_streams/#_9","title":"\u8f93\u5165\u200b\u6587\u4ef6\u200b\u6d41","text":"<ul> <li>Defined in header <code>&lt;fstream&gt;</code></li> <li>Have type <code>std::ifstream</code>.</li> <li>Only receives strings using the <code>&gt;&gt;</code> operator.</li> <li>Receives strings from a \ufb01le and converts it to data of any type.</li> <li>Must initialize your own ifstream object linked to your \ufb01le.</li> </ul> <p>Example</p> <pre><code>std::ifstream in_file(\"out.txt\");\n// in_file is now an ifstream that reads from out.txt string str;\n\nstring str;\nin_file &gt;&gt; str; // first word in out.txt goes into str\n</code></pre>"},{"location":"course/cs/cs106L/lec03_streams/#_10","title":"\u6587\u4ef6\u200b\u6a21\u5f0f","text":"<ul> <li><code>ios::app</code>: append</li> <li><code>ios::ate</code>: at end</li> <li><code>ios::in</code>: open file for reading</li> <li><code>ios::out</code>: open file for writing</li> <li><code>ios::trunc</code>: truncate, if the file exists, empty the file contents when open the file</li> <li>multi mode<ul> <li>we can use <code>|</code> to combine two modes, like ios::out | ios::ate</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec03_streams/#_11","title":"\u5b57\u7b26\u4e32\u200b\u6d41","text":"<ul> <li>\u200b\u8f93\u5165\u200b\u6d41\u200b: <code>std::istringstream</code><ul> <li>Give any data type to the istringstream, it\u2019ll store it as a string. (data type -&gt; string)</li> </ul> </li> <li>\u200b\u8f93\u51fa\u200b\u6d41\u200b: <code>std::ostringstream</code><ul> <li>Make an ostringstream out of a string, read from it word/type by word/type. (string -&gt; data type)</li> </ul> </li> </ul> <p>Example</p> <pre><code>// ostringstream\nstd::ostringstream oss(\"Hello world\");\ncout &lt;&lt; oss.str() &lt;&lt; endl;\n// Hello world\noss &lt;&lt; \"Game over\";\ncout &lt;&lt; oss.str() &lt;&lt; endl;\n// Game overld\n\n// Q: why?\n// A: The buffer doesn't refresh.\n\n// istringstream\nStudent reverseJudgementCall(string judgement) {\n// input: \u201cSarah age 21, rocks\u201d\nstd::istringstream converter(judgement);\nstring fluff;\nint age;\nbool lovesCpp;\nstring name;\nconverter &gt;&gt; name; // Sarah\nconverter.ignore() // pass over a character -&gt; age\nconverter &gt;&gt; age; // 21\nconverter &gt;&gt; fluff; // ,\nstring cool;\nconverter &gt;&gt; cool; // rocks\nif (cool == \"rocks\")\n    return Student{name, age, \"bliss\"};\nelse\n    return Student{name, age, \"misery\"};\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/","title":"Initialization and References","text":"<p> \u200b\u7ea6\u200b 365 \u200b\u4e2a\u200b\u5b57\u200b  87 \u200b\u884c\u200b\u4ee3\u7801\u200b  2 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#initialization","title":"Initialization","text":"<p><code>Initialization</code>: How we provide initial values to variables.</p>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#uniform-initialization","title":"Uniform initialization","text":"<p>Initialization while we declare a variable.</p> <p><code>Uniform initialization</code>: Curly bracket initialization. Available for all types, immediate initialization on declaration!</p> <ul> <li>Use uniform initialization to initialize every \ufb01eld of non-primitive typed variables.</li> </ul> <p>Example</p> <pre><code>Student s{\"Sarah\", \"CA\", 21}; // struct\n\nstd::pair&lt;int, string&gt; numSuffix{1, \"st\"}; // pair\n\nstd::vector&lt;int&gt; vec{1, 3, 5}; // vector\n\nint x{5}; // int\nstring str{\"Name\"}; //string\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#structured-binding","title":"Structured binding","text":"<p>Initialize dierctly from the contens of a struct.</p> <p>Example</p> <pre><code>// pair\nauto p = std::make_pair(\"str\", 5);\nauto [a, b] = p;\n\n// struct\nStudent s{\"Sarah\", 20, \"TA\"};\nauto [name, age, staff] = s;\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#references","title":"References","text":"<p><code>References</code>: An alias(another name) for a named variable.</p> <ul> <li>We can only create references to variables.</li> <li>The cpp compiler does not allocate separate memory space for references.</li> <li>References must have initialization.</li> </ul> <p>Example</p> <pre><code>void change_x(int&amp; x){\n    x = 0; // changes to x will persist\n}\n\nvoid keep_x(int x){\n    x = 0;\n}\n\nchange_x(a); // a becomes a reference to x\nkeep_x(b); // b becomes a copy of x\ncout &lt;&lt; a &lt;&lt; endl; // 0\ncout &lt;&lt; b &lt;&lt; endl; // 100\n\nstd::vector&lt;int&gt; original{1, 2};\nstd::vector&lt;int&gt; copy = original;\nstd::vector&lt;int&gt;&amp; ref = original;\n// `=` automatically makes a copy, must use `&amp;` to avoid this\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#l-values-and-r-values","title":"L-values and R-values","text":""},{"location":"course/cs/cs106L/lec04_init_and_ref/#l-values","title":"L-values","text":"<ul> <li>L-values can appear on the left or right of an <code>=</code></li> <li>L-values have names</li> <li>L-values are not temporary</li> <li>L-values live until the end of the scope</li> </ul>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#r-values","title":"R-values","text":"<ul> <li>R-values can only appear on the right of an <code>=</code></li> <li>R-values don't have names</li> <li>R-values are temporary</li> <li>R-values live until the end of the line</li> </ul>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#const","title":"Const","text":"<p><code>const</code>: keyword indicating a variable, function or parameter can't be modi\ufb01ed.</p> <p>Example</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\nstd::vector&lt;int&gt;&amp; ref = vec; // a regular reference\nconst std::vector&lt;int&gt;&amp; c_ref = vec; // a const reference\n\nvec.push_back(3); // OK\nc_vec.push_back(3); // BAD - const\nref.push_back(3); // OK\nc_ref.push_back(3); // BAD - const\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#const-references","title":"Const References","text":"<p>Can't declare non-const reference to const variable.</p> <p>Example</p> <pre><code>const std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\n\nstd::vector&lt;int&gt;&amp; bad_ref = c_vec; // BAD\nconst std::vector&lt;int&gt;&amp; good_ref = c_vec; // Fixed\n</code></pre> <p>When do we use references/const references?</p> <ul> <li>If we\u2019re working with a variable that takes up little space in memory (e.g. int, double), we don\u2019t need to use a reference and can just copy the variable.</li> <li>If we need to alias the variable to modify it(e.g. in a function), we can use references.</li> <li>If we don\u2019t need to modify the variable, but it\u2019s a big variable (e.g. std::vector), we can use const references.</li> </ul> <p>We can return references as well, but note that the parameter must be a non-const reference to return.</p> <p>Example</p> <pre><code>int&amp; front(std::vector&lt;int&gt; &amp; vec){\n    return vec[0];\n}\n\nint main(void){\n    std::vector&lt;int&gt; nums{1, 2, 3};\n    front(nums) = 4; // vec = {4, 2, 3}\n    return 0;\n}\n</code></pre> <p>R-values can be bound to const reference.</p> <p>Example</p> <pre><code>int foo(const int &amp;a){\n    return a + 3;\n}\n\nint main(void){\n    foo(1 + 2); // `1+2` is a r-value, but can be passed in\n                // as const reference.\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#const-pointers","title":"Const pointers","text":"<p>Const pointer means this pointer is unchangeable, but what the pointer points to is changeable.</p> <p>Example</p> <pre><code>using iterator = std::string*;\nusing const_iterator = const std::string*;\n\n// string * const, const ptr to non-const obj\nconst iterator it_c = str.begin();\n// ok! it_c is a const pointer to non-const object\n*it_c = \"hi\" ;\n//not ok! can\u2019t change where a const pointer points\nit_c++;\n\n// const string*, a non-const ptr to const obj\nconst_iterator c_it = str.begin();\n// totally ok! the pointer itself is non-const\nc_it++;\n// not ok! can\u2019t change underlying const object\n*c_it = \"hi\";\n// allowed! can always read a const object, just can't change\ncout &lt;&lt; *c_it &lt;&lt; endl;\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#const-functions","title":"Const functions","text":"<p><code>const-interface:</code> All member functions marked const in a class de\ufb01nition. Objects of type const ClassName may only use the const-interface.</p> <p>Warning</p> <p>Can't call a non-const function in a const function.</p> <p>Every member function of a class that doesn't change its member variables should be marked const.</p> <p>Example</p> <pre><code>class Str {\n    public:\n        size_t size() const;\n        bool empty() const;\n        const std::string&amp; at(size_t index) const;\n    ...\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec04_init_and_ref/#parameter-passing-rules","title":"Parameter passing rules","text":"<p>Basic parameter passing rules</p> <p>Advanced parameter passing rules</p>"},{"location":"course/cs/cs106L/lec05_containers/","title":"\u5bb9\u5668","text":"<p> \u200b\u7ea6\u200b 461 \u200b\u4e2a\u200b\u5b57\u200b  41 \u200b\u884c\u200b\u4ee3\u7801\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p> <p>\u200b\u5bb9\u5668\u200b: An object that allows us to collect other objects together and interact with them in some way.</p> <ul> <li>Organization: Related data can be packaged together.</li> <li>Standardization: Common features are expected and implemented.</li> <li>Abstraction: Complex ideas made easier to utilize by clients.</li> </ul>"},{"location":"course/cs/cs106L/lec05_containers/#stl","title":"STL \u200b\u4e2d\u200b\u7684\u200b\u5bb9\u5668","text":"<ul> <li>\u200b\u5e38\u89c1\u200b\u7684\u200b: vector, stack, queue, set, map</li> <li>\u200b\u4e0d\u200b\u5e38\u89c1\u200b\u7684\u200b:<ul> <li><code>array</code> : An array is the primitive form of a vector, fixed size in a strict sequence.</li> <li><code>deque</code> : A deque is a double ended queue.</li> <li>list: A list is a doubly linked list, can loop through in either direction.</li> </ul> </li> </ul> <p>\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bb9\u5668\u200b</p> <ul> <li>Sequence:<ul> <li>Containers that can be accessed sequentially.</li> <li>Provides access to sequences of elements.</li> <li>Anything with an inherent order goes here.</li> <li>vectors, deques, lists ...</li> </ul> </li> <li>Associative<ul> <li>Containers that don\u2019t necessarily have a sequential order.</li> <li>More easily searched, like maps and sets.</li> <li>maps, sets, unordered maps/sets ...</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec05_containers/#vector","title":"Vector","text":"<p>At a high level, a vector is an ordered collection of elements of the any same type that can grow and shrink in size.</p> <p>We keep track of a few member variables</p> <ul> <li><code>size</code>: number of elements in the vector</li> <li><code>capacity</code>: space allocated for elements</li> </ul> <pre><code>// initialization of vector\nstd::vector&lt;int&gt; vec1{3, 5}; // {3, 5}\nstd::vector&lt;int&gt; vec2(3, 5); // {5, 5, 5}\n\n// add element\nvec1.push_back(4); // {3, 5, 4}\n\n// get element\nint a = vec1.at(0); // a = 3\nint b = vec1[1]; // b = 5\n</code></pre>"},{"location":"course/cs/cs106L/lec05_containers/#deque","title":"Deque","text":"<p>A deque is a double ended queue, can do everything a vector can do, unlike vector, it is possible and fast to <code>push_front</code> and <code>pop_front</code>.</p> <pre><code>std::deque&lt;int&gt; dq;\n\n// add element\ndq.push_front(2); // {2}\ndq.push_front(4); // {4, 2}\ndq.push_back(3); // {4, 2, 3}\n\n// delete element\n\ndq.pop_front() // {2, 3}\ndq.pop_back() // {2}\n</code></pre> <p>Quote</p> <p>Which to use?</p> <p><code>vector</code> is the type of sequence that should be used by default, <code>deque</code> is the data structure of choice when most insertions and deletions take place at the beginning or at the end of the sequence.</p> <p><p>\u2014\u2014 C++ ISO Standard</p></p> <p>Choosing sequence containers</p> <p></p>"},{"location":"course/cs/cs106L/lec05_containers/#map","title":"Map","text":"<p>Maps are implemented with key-value pairs with unique keys, <code>std::pair&lt;const key, value&gt;</code></p> <p>Based on ordering property of keys, keys need to be comparable using <code>&lt;</code> operator.</p> <ul> <li>Ordered maps/sets require a comparison operator to be de\ufb01ned, keys in sorted order.</li> <li>Unordered maps/sets require a hash function to be de\ufb01ned, keys are unordered.</li> </ul> <p>Example</p> <pre><code>std::map&lt;int, string&gt; mymap;\nstring str = mymap.at(key); // throw error if the key  not exists.\nstr = mymap[key]; // will not throw error if the key not exists.\n</code></pre>"},{"location":"course/cs/cs106L/lec05_containers/#multimap","title":"Multimap","text":"<p>Multimap is an associative container that contains a sorted list of key-value pairs, while permitting multiple entries with the same key.</p> <p>Example</p> <pre><code>std::multimap&lt;int, int&gt; myMMap;\nmyMMap.insert({std::make_pair(3, 3)});\nmyMMap.insert({3, 12});\n\ncout &lt;&lt; myMMap.count(3) &lt;&lt; endl; // 2\n</code></pre>"},{"location":"course/cs/cs106L/lec05_containers/#set","title":"Set","text":"<p>Sets contains a sorted set of unique objects of type\u00a0<code>Key</code>.</p> <p>Example</p> <pre><code>std::set&lt;string&gt; myset;\n\n// add element\nmyset.insert(\"game\"); // {\"game\"}\nmyset.insert(\"milk\"); // {\"game\", \"milk\"}\n\n// check if contains element\nbool game_exist = myset.count(\"game\"); // true\nbool hello_exist = myset.count(\"hello\"); // false\n\n// remove element\nmyset.earse(\"milk\"); // {\"game\"}\n</code></pre>"},{"location":"course/cs/cs106L/lec05_containers/#container-adaptors","title":"Container Adaptors","text":"<p>Container adaptors are \"wrappers\" to existing containers</p> <p><code>Wrappers</code> modify the interface to sequence containers and change what the client is allowed to do/how they can interact with the container.</p> <ul> <li>Commonly used data structures made easy for the client to use.</li> <li>Can use different backing containers based on use type.</li> <li>Container adaptors wrap existing containers to permit new/restrict access to the interface for the clients.</li> </ul>"},{"location":"course/cs/cs106L/lec05_containers/#stack","title":"Stack","text":"<p>Stack just limits the functionality of a vector/deque to only allow <code>push_back</code> and <code>pop_back</code>.</p>"},{"location":"course/cs/cs106L/lec05_containers/#queue","title":"Queue","text":"<p>Queue just limits the functionality of a deque to only allow <code>push_back</code>  and <code>pop_front</code>.</p>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/","title":"TOC","text":"<ul> <li>[[#Iterators|Iterators]]<ul> <li>[[#Iterators#What is iterator|What is iterator]]</li> <li>[[#Iterators#Types of iterator|Types of iterator]]</li> <li>[[#Iterators#Ranges|Ranges]]</li> <li>[[#Iterators#Range based for loop|Range based for loop]]</li> </ul> </li> <li>[[#Pointers|Pointers]]<ul> <li>[[#Pointers#What is pointer|What is pointer]]</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#iterators","title":"Iterators","text":""},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#what-is-iterator","title":"What is iterator","text":"<p>Iterator is a abstraction for a tool that accesses the next or previous element or random access.</p> <p>How do we access elements in a container in order? Containers all implement something called an iterator to do this. - Iterators let you access all data in containers programmatically. - Iterators allow iteration over any container, whether it is ordered or not. - An iterator has a certain order, it \"knows\" what element will come next. - Each container has its own iterator, which can have different behavior. - All iterators implement a few shared operations:     - Initializing -&gt; <code>iter = s.begin();</code> begin() and end() return iterators.     - Incrementing -&gt; <code>iter++;</code>     - Dereferencing -&gt; <code>a = \\*iter;</code>     - Comparing -&gt; <code>iter != s.end();</code>     - Copying -&gt; <code>new_iter = iter;</code></p> <p>Similarities - Can be created from existing iterator. - Can be advanced using <code>++</code> - Can be compared with <code>==</code> and <code>!=</code></p> <pre><code>```cpp\nstd::set&lt;int&gt; myset{1, 2, 3, 4};\n\n// define a iterator like this: \n// container_class_name::iterator\u00a0iterator_name;\nstd::set&lt;int&gt;::iterator iter = myset.begin();\ncout &lt;&lt; *iter &lt;&lt; endl; // 1\n\n++iter;\ncout &lt;&lt; *iter &lt;&lt; endl; // 2\n\nif (iter == myset.end()){\n    return;\n}\n\n// find returns an iterator\nstd::vector&lt;int&gt; vec{3, 1, 4, 8, 5, 9, 2, 6, 7, 0};\nconst int elem2find = 5;\n\nauto find_it = std::find(vec.begin(), vec.end(), elem2find);\ncout &lt;&lt; *find_it &lt;&lt; endl; // 5\n\n// map iterator\nstd::map&lt;int, int&gt; mmap;\nfor(auto iter = mmap.begin(); iter != mmap.end(); ++iter){\n    cout &lt;&lt; (*iter).first &lt;&lt; \" \" &lt;&lt; (*iter).second &lt;&lt; endl;\n    // is the same as ...\n    cout &lt;&lt; iter-&gt;first &lt;&lt; \" \" &lt;&lt; iter-&gt;second &lt;&lt; endl;\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#types-of-iterator","title":"Types of iterator","text":"<ul> <li><code>Input and output iterators</code>: They can perform sequential single-pass input or output operations.</li> <li><code>Forward iterators</code>: They have all the functionality of input iterators and if they are not constant iterators also have the functionality of output iterators.</li> <li><code>Bidrectional iterators</code>: They are like forward iterators but can also be iterated through backwards.</li> <li><code>Random-access iterators</code>: They implement all the functionality of bidirectional iterators, and also have the ability to access ranges non-sequentially.</li> </ul> <ul> <li>Forward iterators are the minimum level of functionality for standard containers.<ul> <li>Input iterators can appear on the RHS (right hand side) of an <code>=</code> operator, like <code>auto elem = *it;</code></li> <li>Output iterators can appear on the LHS (left hand side) of an <code>=</code> operator, like <code>*elem = value;</code></li> </ul> </li> <li>Bidirectional iterators can go forward as well as backward.<ul> <li><code>++it;</code></li> <li><code>--it;</code></li> </ul> </li> <li>Random-access iterators allow you to directly access values without visiting all elements sequentially.<ul> <li><code>it += 5;</code> </li> </ul> </li> </ul> <p>Collected by xyx: </p> <pre><code>```cpp\nfor (auto iter = set.begin(); iter != set.end(); ++iter){\n    do something;\n}\n\n// dereference the iterator to get element\nconst auto&amp; elem = *iter;\n</code></pre>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#ranges","title":"Ranges","text":"<p>We can iterate through different ranges.</p> <p></p>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#range-based-for-loop","title":"Range based for loop","text":"<p>A range based <code>for</code> loop is a shorthand for iterator code. All that is required is that the class contains the member functions <code>begin()</code> and <code>end()</code> and that its **return value type supports the operators <code>++,</code> <code>*</code> and <code>!=</code> **</p> <pre><code>```cpp\n// for(type variable : container)\nstd::map&lt;string, int&gt; mmap;\nfor(auto thing : mmap){\n    dosomething(thing.first, thing.second)\n}\n\n// the implementation\nfor (it = mmap.begin(); it != mmap.end(); ++it){\n    thing = *it;\n    dosomething(thing.first, thing.second)\n}\n\n// for structure container (cpp17 extension)\nfor(auto [key, value] : mmap){\n    dosomething(key, value);\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#pointers","title":"Pointers","text":""},{"location":"course/cs/cs106L/lec06_iterators_and_pointers/#what-is-pointer","title":"What is pointer","text":"<p>Variables created in code take up space on the computer. They live in memory at speci\ufb01c addresses. Pointers reference those memory addresses and not the object themselves.</p> <p>Pointer can access memory addresses with &amp; and the data at an address/pointer using *.</p> <pre><code>```cpp\nint val = 18;\nint* ptr = &amp;val;\n\n// dereference\ncout &lt;&lt; *ptr &lt;&lt; endl; // 18\n\n// dereference of member variables\nstruct Student{\n    int id;\n    string name;\n};\n\nStudent s1{12, \"Alice\"};\nStudent* ptr = &amp;s1;\ncout &lt;&lt; ptr-&gt;id &lt;&lt; endl; // 12\n\nstd::pair&lt;int, string&gt; game{2, \"Death Loop\"};\nstd::pair&lt;int, string&gt;* pgame = &amp;game;\ncout &lt;&lt; pgame-&gt;first &lt;&lt; endl; // 2\ncout &lt;&lt; pgame-&gt;second &lt;&lt; endl; // Death Loop\n</code></pre>"},{"location":"course/cs/cs106L/lec07_classes/","title":"TOC","text":"<ul> <li>[[#Classes|Classes]]<ul> <li>[[#Classes#Namespaces|Namespaces]]</li> <li>[[#Classes#This keyword|This keyword]]</li> <li>[[#Classes#Constructors|Constructors]]</li> <li>[[#Classes#Array|Array]]</li> <li>[[#Classes#Destructors|Destructors]]</li> <li>[[#Classes#Static member|Static member]]</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec07_classes/#classes","title":"Classes","text":"<p><code>Class</code>: A programmerde\ufb01ned custom type. An abstraction of an object or data type. - An Object is an instance of a Class. - When a class is de\ufb01ned, no memory is allocated but when it is instantiated (i.e. an object is created) memory is allocated. - Classes provide their users with a public interface and separate this from a private implementation.</p> <pre><code>```cpp\nclass Student {\n    public:\n        std::string getName();\n        void setName(std::string name);\n        int getAge();\n        void setAge(int age);\n\n    private:\n        std::string name;\n        std::string state;\n        int age;\n};\n</code></pre> <p>Public section: - Users of the specific object can directly access anything here. - De\ufb01nes interface for interacting with the private member variables.</p> <p>Private section: - Usually contains all member variables. - Users can't access or modify anything in the private section.</p>"},{"location":"course/cs/cs106L/lec07_classes/#namespaces","title":"Namespaces","text":"<ul> <li>Put code into logical groups, to avoid name clashes.</li> <li>Each class has its own namespace.</li> <li>Syntax for calling/using something in a namespace:    <code>namespace_name::name</code></li> <li>Function de\ufb01nitions with namespaces.<ul> <li>Inside the {...} the private member variables for <code>namespace_name</code> will be in scope.</li> <li><code>std::string Student::getName() {...}</code>, we can use  private member variables  in this function.</li> </ul> </li> </ul> <p>### This keyword</p> <p><code>this</code> is the pointer which points out the object that calls the member function. <code>this-&gt;element_name</code> means \"the item in this specific object with name <code>element_name</code>. Use this for avoiding naming con\ufb02icts. </p> <pre><code>```cpp\nvoid Student::setName(std::string name){\n    this-&gt;name = name;\n} \n</code></pre>"},{"location":"course/cs/cs106L/lec07_classes/#constructors","title":"Constructors","text":"<ul> <li>The constructor is called every time a new instance is created</li> <li>De\ufb01ne how the member variables of an object is initialized.</li> <li>Use initializer lists for speedier construction.</li> </ul> <pre><code>```cpp\n// construction using initializer lists\n// no parameters\nStudent::Student() : name{\"\"}, age{0}, state{\"\"} {}\n\n// with parameters\nStudent::Student(string name, int age, string state) : name{name}, age{age}, state{state} {}\n</code></pre>"},{"location":"course/cs/cs106L/lec07_classes/#array","title":"Array","text":"<ul> <li>Arrays are a primitive type. They are the building blocks of all containers</li> <li>Think of array as lists of objects of \ufb01xed size that you can index into.</li> </ul> <pre><code>int *intarray;\n\n// initialize an array\nint* *intarray = new int[10];\n\n// index into an array\nint elem = intarray[0];\n</code></pre>"},{"location":"course/cs/cs106L/lec07_classes/#destructors","title":"Destructors","text":"<ul> <li>Deleteing (almost) always happens in the destructor of a class.</li> <li>The destructor is de\ufb01ned using <code>class_name::~class_name()</code></li> <li>the destructor is called when the object goes out of scope.</li> </ul>"},{"location":"course/cs/cs106L/lec07_classes/#static-member","title":"Static member","text":"<p><code>Static member</code> meas this member is belong to the class instead of the specific object.</p> <p>static variable must have definition.</p> <pre><code>```cpp\nclass Game {\n public:\n  Game(/* args */);\n  ~Game(/* args */);\n  void setID(int id) { Game::id = id; }\n  int getID() { return id; }\n\n private:\n  /* data */\n  static int id;\n};\n</code></pre> <p>In this code, <code>id</code> is a variable member belong to the class <code>Game</code>, if we call <code>obj.setID(val)</code>, the variable <code>Game:\uff1aid</code> wouble be changed.</p> <pre><code>```cpp\nint main(void) {\n  Game game1;\n  game1.setID(2);\n  cout &lt;&lt; \"game1 id: \";\n  cout &lt;&lt; game1.getID() &lt;&lt; endl; // 2\n\n  Game game2;\n  cout &lt;&lt; \"game2 id: \";\n  cout &lt;&lt; game2.getID() &lt;&lt; endl; // 2\n  return 0;\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec08_templates/","title":"TOC","text":"<ul> <li>[[#Template|Template]]<ul> <li>[[#Template#Function Template|Function Template]]</li> <li>[[#Template#Class Template|Class Template]]</li> <li>[[#Template#Generic Programming|Generic Programming]]</li> <li>[[#Template#Template Metaprogramming|Template Metaprogramming]]</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec08_templates/#template","title":"Template","text":""},{"location":"course/cs/cs106L/lec08_templates/#function-template","title":"Function Template","text":"<p><code>Function Template</code>: A function template defines a family of functions. The simple idea is to pass data type as a parameter so that we don\u2019t need to write the same code for different data types.</p> <pre><code>```cpp\n// we need `typename` or `class` keyword \ntemplate &lt;typename T&gt;\n// default parameter types\ntemplate &lt;typename T=int&gt;\nT myMax(T x, T y) {\n  return (x &gt; y) ? x : y;\n}\n\n// function call\nint int_max = myMax&lt;int&gt;(2, 7); // int_max = 7\ndouble double_max = MyMax&lt;double&gt;(2.4, 5.1); // double_max = 5.1\n\n// template arguments deduction\nmyMax(1, 2); // infers that T is of type `int`\nmyMax(1.2, 3.9); // infers that T is of type `double`\nmyMax('a', 'i'); // infers that T is of type `char`\n</code></pre> <p>Explicit instantiation - specify the type T - <code>cout &lt;&lt; myMax&lt;int&gt;(2, 3) &lt;&lt; endl;</code></p> <p>Implicit instantiation - leave the type for the compiler to deduce - <code>cout &lt;&lt; myMax(2, 3) &lt;&lt; endl</code></p> <pre><code>**template functions are not compiled until used!**\nFor each instantiation with different parameters, the compiler generates a new specific version of your template at compile time.\nTemplate code is instantiated at compile time.\n</code></pre>"},{"location":"course/cs/cs106L/lec08_templates/#class-template","title":"Class Template","text":"<p><code>Class Template</code>: A class that is parametrized over some number of types. A class that is comprised of member variables of a general type/types. Use generic typenames as placeholders.</p> <pre><code>```cpp\ntemplate&lt;typename F, typename S&gt;\n// we can specify a default value for template arguments\n// etc. template&lt;typename F, typename S=int&gt;\nclass MyPair {\n    public:\n        First getFirst();\n        Second getSecond();\n        void setFirst(First f);\n        void setSecond(Second f);\n\n    private:\n        First first;\n        Second second;\n};\n\n// must announce every member function is templated\ntemplate&lt;typename F, typename S&gt;\nFirst MyPair::getFirst(){\n    return first;\n}\n\n// nested dependent type \ntemplate&lt;typename F, typename S&gt;\ntypename MyPair&lt;F, S&gt;::iterator MyPair&lt;F, S&gt;::begin() {...}\n// here iterator is a `dependent type` in namespace Mypair&lt;F, S&gt;::\n// we must add `typename` prior\n</code></pre> <p>Templated code implementation should never be in a .cpp file: your compiler has to see them at the same time as it sees the code that calls them.</p>"},{"location":"course/cs/cs106L/lec08_templates/#generic-programming","title":"Generic Programming","text":"<p>Generic Programming\u00a0is a programming paradigm for developing\u00a0efficient,\u00a0reusable\u00a0software libraries. Generics is the idea to allow type (Integer, String, \u2026 etc) to be a parameter to methods, classes and interfaces. Generics can be implemented in C++ using\u00a0Templates.</p> <p>The advantages of Generic Programming are - Code Reusability - Avoid Function Overloading - Once written it can be used for multiple times and cases.</p>"},{"location":"course/cs/cs106L/lec08_templates/#template-metaprogramming","title":"Template Metaprogramming","text":"<p>Normally, code runs during runtime. But with <code>template metaprogramming(TMP)</code>, code runs once during compile time. Something runs once during compiling and can be used as many times as you like during runtime.</p> <pre><code>```cpp\ntemplate &lt;unsigned n&gt;\nstruct Factorial {\n    enum {value = n * Factorial&lt;n-1&gt;::value};\n};\n\ntemplate&lt;&gt; // template class `specialization`\nstruct Factorial&lt;0&gt; {\n    enum {value = 1};\n};\n\ncout &lt;&lt; Factorial&lt;10&gt;::value &lt;&lt; endl; // print 3628800\n</code></pre> <p><code>struct</code> is similar to <code>class</code> in that it can contain both member variables and member functions.</p> <p>the difference of struct and class - When using class, the members of a class are all private by default, while when using struct, the members of a struct are all public by default. - class can be used as a template keyword, while struct cannot. - class inheritance is private inheritance by default, while struct inheritance is public inheritance by default</p>"},{"location":"course/cs/cs106L/lec09_funcs_and_lambdas/","title":"TOC","text":"<ul> <li>[[#Predicate Functions|Predicate Functions]]</li> <li>[[#Lambdas|Lambdas]]</li> <li>[[#Functors|Functors]]</li> </ul>"},{"location":"course/cs/cs106L/lec09_funcs_and_lambdas/#predicate-functions","title":"Predicate Functions","text":"<p>Any function that returns a boolean value is a <code>predicate.</code> A predicate can have any amount of parameters.</p> <pre><code>```cpp\nbool isVowel(char c){\n    std::string vowel = \"aeiou\";\n    return vowel.find(c) != std::string::npos;\n}\n\n// to use predicate\ntemplate &lt;typename InputIt, typename UniPred&gt;\nint count_occurrences(InputIt begin, InputIt end, UniPred pred){\n    int count = 0;\n    for (auto iter = begin; iter != end; ++iter){\n        if(pred(*iter)) count++;\n    }\n    return count;\n}\n\nstd::string str = \"xadia\";\ncount_occurrences(str.begin(), str.end(), isVowel);\n</code></pre> <p>Here <code>UniPred</code> is called a <code>function pointer</code>. - Function pointers can be treated just like other pointers. - They can be passed around like variables as parameters or in template functions. - They can be called like functions.</p>"},{"location":"course/cs/cs106L/lec09_funcs_and_lambdas/#lambdas","title":"Lambdas","text":"<p><code>Lambdas</code> are inline, anonymous functions that can know about variables declared in their same scope. </p> <pre><code>```cpp\n// complete format of lambda expression\n[ capture list ] ( params ) mutable(optional) constexpr(optional)(c++17) exception attribute -&gt; return_type { function body } \n\nint limit = 5;\nauto isMoreThan = [limit] (int n) {return n &gt; limit;};\nisMoreThan(6); // true\n\n// specify the return type `int` \nauto add = [](int a, int b) -&gt; int { return a + b; };\n\n// assignment is forbidden\nauto funa = [] { cout &lt;&lt; \"A\" &lt;&lt; endl; };\nauto funb = [] { cout &lt;&lt; \"B\" &lt;&lt; endl; };\n\nfuna = funb;   // error\nauto func = funa;   // ok, copy is permitted\n</code></pre> <p>Lambdas can capture any outside variable by using <code>[]</code>, both by reference and by value.</p> <p></p> <ul> <li>Use a lambda when you need a short function or to access local variables in your function.</li> <li>If you need more logic or overloading, use function pointers.</li> </ul> <p>Whenever a lambda expression is defined, the compiler will automatically generate an anonymous class, we call it <code>closure class</code>, this class overloads <code>()</code> operator of course.</p> <pre><code>```cpp\nclass Closure\n{\npublic:\n    // ...\n    ReturnType operator(params) const { body };\n};\n</code></pre>"},{"location":"course/cs/cs106L/lec09_funcs_and_lambdas/#functors","title":"Functors","text":"<p>A <code>functor</code> is any class that provides an implementation of operator(). They can create closures of \"customized\" functions.</p> <pre><code>**Actually, this name never appears in the standard c++, we usually call it `function object`.**\n</code></pre> <p><code>Closure</code>: a single instantiation of a functor object.</p> <p>The STL  standard function object: <pre><code>std::function&lt;return_type(param_types)&gt; func;\n</code></pre></p>"},{"location":"course/cs/cs106L/lec10_operator_overloading/","title":"TOC","text":"<ul> <li>[[#Operators|Operators]]<ul> <li>[[#Operators#Operators can't be overloaded|Operators can't be overloaded]]</li> <li>[[#Operators#The way of overloading operators|The way of overloading operators]]</li> <li>[[#Operators#Rules and Philosophy|Rules and Philosophy]]</li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec10_operator_overloading/#operators","title":"Operators","text":"<ul> <li>Just like declaring functions in a class, we can declare operator functionality.</li> <li>When we use the operator with our new object, it performs a custom function or operation.</li> <li>Just like in function overloading, if we give it the same name, it will override the operator\u2019s behavior.</li> </ul>"},{"location":"course/cs/cs106L/lec10_operator_overloading/#operators-cant-be-overloaded","title":"Operators can't be overloaded","text":"<ul> <li>Scope Resolution: <code>::</code></li> <li>Ternary: <code>?</code></li> <li>Member Access: <code>.</code></li> <li>Pointer-to-member access: <code>.*</code></li> <li>Object size, type, and casting: <code>sizeof()</code>\u3001<code>typeid()</code>\u3001<code>cast()</code></li> </ul>"},{"location":"course/cs/cs106L/lec10_operator_overloading/#the-way-of-overloading-operators","title":"The way of overloading operators","text":"<ul> <li>Member functions<ul> <li>With member function overloading, we have access to this-&gt; and its private variables.</li> </ul> </li> <li>Non-member functions (this way is preferred by the STL)<ul> <li>It allows the LHS to be a non-class type.</li> <li>It allows us to overload operators with classes we don\u2019t own.</li> </ul> </li> <li>The <code>friend</code> keyword allows non-member functions or classes to access private information in another class.</li> </ul> <pre><code>```cpp\n// first way\nclass Student{\n    public:\n        /* ... */\n        // member function\n        // this function would pass `this` as parameter\n        friend bool operator &lt; (const Student&amp; rhs){\n            age &lt; rhs.age;\n        };\n\n    private:\n    /* ... */\n    int age;\n};\n\n// second way\nclass Student{\n    public:\n        /* ... */\n        // non-member function\n        friend bool operator &lt; (const Student&amp; lhs, const Student&amp; rhs);\n\n    private:\n    /* ... */\n    int age;\n};\n\n// non-member function(global)\nbool operator &lt; (const Student&amp; lhs, const Student&amp; rhs) {\n    return lhs.age &lt; rhs.age;\n};\n</code></pre> <p>Non-member function(global function) of operator overloading(global overloading)</p> <pre><code>```cpp\nstruct Time {\n  int hours;\n  int minutes;\n  int seconds;\n};\n\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Time&amp; time) {\n  out &lt;&lt; time.hours &lt;&lt; \":\" &lt;&lt; time.minutes &lt;&lt; \":\" &lt;&lt; time.seconds;\n  return out;\n}\n\nTime t1{12, 20, 56};\ncout &lt;&lt; t1; // 12:20:56\n</code></pre> <p>The implementation of <code>&lt;&lt;</code> operator in STL <code>basic_ostream</code>.</p> <pre><code>```cpp\ntemplate&lt;typename _Traits&gt;\n  inline basic_ostream&lt;char, _Traits&gt;&amp;\n  operator&lt;&lt;(basic_ostream&lt;char, _Traits&gt;&amp; __out, const char* __s)\n  {\n    if (!__s)\n_out.setstate(ios_base::badbit);\n    else\n_ostream_insert(__out, __s,\n     static_cast&lt;streamsize&gt;(_Traits::length(__s)));\n    return __out;\n  }\n</code></pre> <pre><code>**Be careful with non-member overloading.**\nCertain operators, like `new` and `delete,` don\u2019t require a specific type.\n</code></pre>"},{"location":"course/cs/cs106L/lec10_operator_overloading/#rules-and-philosophy","title":"Rules and Philosophy","text":"<ul> <li>Meaning should be obvious when you see it.</li> <li>Functionality should be reasonably similar to corresponding arithmetic operations</li> <li>When the meaning isn't obvious, give it a normal name instead.</li> </ul>"},{"location":"course/cs/cs106L/lec11_special_member_functions/","title":"TOC","text":"<ul> <li>[[#Special member functions|Special member functions]]<ul> <li>[[#Special member functions#Copy and copy assignment|Copy and copy assignment]]</li> <li>[[#Special member functions#Default and delete|Default and delete]]</li> <li>[[#Special member functions#Move and move assignment|Move and move assignment]]<ul> <li>[[#Move and move assignment#r-value reference|r-value reference]]</li> <li>[[#Move and move assignment#move assignment|move assignment]]</li> <li>[[#Move and move assignment#std::move|std::move]]</li> </ul> </li> </ul> </li> </ul>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#special-member-functions","title":"Special member functions","text":"<p>There are six special member functions, These functions are generated only when they're called: - Default constructor: Takes no parameters and creates a new object. - Destructor: Called when an object goes out of scope. - Copy constructor: Creates a new object as a member-wise copy of another. - Copy assignment operator: Assigns an already existing object to another. - Move constructor - Move assignment operator</p> <p></p> <p>We don't have to write out any of these. They all have default versions that are generated automatically.</p>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#copy-and-copy-assignment","title":"Copy and copy assignment","text":"<p>By default, the copy constructor will create copies of each member variable. This is member-wise copying. Many times, we will want to create a copy that does more than just copies the member variables.</p> <p><code>Deep copy</code>: An object that is a complete, independent copy of the original.</p> <pre><code>// copy constructor\nType::Type(const Type&amp; other)\n\n// copy assignment\nType::operator=(const Type&amp; other)\n</code></pre>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#default-and-delete","title":"Default and delete","text":"<p><code>default</code> and <code>delete</code> are key words  in c++.</p> <p>Declaring any user-de\ufb01ned constructor will make the default disappear. If we need to use the default special member function we need add <code>=default</code>. <code>=default</code>  is only used for special member functions of the class that have no default parameters. Can be defined either inside the class body (inline) or outside the class body (out-of-line).</p> <pre><code>```cpp\nclass Student {\n public:\n  // member function\n  Student(int age);\n  Student() = default; // defulated default constructor.\n  ~Student();\n\n private:\n  int age;\n};\n\nStudent::Student(int age) : age(age) {}\nStudent::~Student() {}\n\nStudent s0; // error if there is no defaulted function\nStudent s1(19);\nStudent s2(29);\n</code></pre> <p>Setting a special member function to <code>=delete</code> removes its functionality. Thus we can selectively allow functionality of special member functions.  <code>=delete</code> can not be used at <code>destructor</code>.</p> <pre><code>```cpp\nclass Student {\n public:\n  // member function\n  Student(int age);\n  Student() = default; // defulated default constructor.\n  ~Student();\n\n  Student(const Student&amp; rhs) = delete; // delete the copy constructor\n  Student&amp; operator=(Student&amp; other) = delete; // delete the copy assignment\n\n  // ~Student() = delete; // error, destructor can't be deleted\n\n private:\n  int age;\n};\n\nStudent::Student(int age) : age(age) {}\nStudent::~Student() {}\n\nStudent s1(19);\nStudent s2(s1); // error, copy constructor has been deleted\n\nStudent s3;\ns3 = s2; // error, copy assignment has been deleted\n</code></pre>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#move-and-move-assignment","title":"Move and move assignment","text":"<p>Move constructors and move assignment operators will perform \"memberwise moves\". De\ufb01ning a move assignment operator prevents generation of a move copy constructor, and vice versa.</p> <p>Move constructors and operators are only generated if: - No copy operations are declared. - No move operations are declared. - No destructor is declared.</p> <p>If we want to explicitly support move operations, we can set the operators to <code>default</code>:</p> <p></p> <p>When the item on the right of the <code>=</code> is an r-value we should use move assignment. r-values are always about to die, so we can steal their resources.</p>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#r-value-reference","title":"r-value reference","text":"<p>Different with l-value reference, we use <code>&amp;&amp;</code> to present r-value reference.</p>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#move-assignment","title":"move assignment","text":"<pre><code>```cpp\nvector&lt;T&gt;&amp; operator=(vector&lt;T&gt;&amp;&amp; other)\n{\n    if (&amp;other == this) return *this;\n    _size = other._size;\n    _capacity = other._capacity;\n\n    //we can steal the array\n    delete[] _elems;\n    _elems = other._elems;\n    return *this;\n}\n</code></pre>"},{"location":"course/cs/cs106L/lec11_special_member_functions/#stdmove","title":"std::move","text":"<p><code>std::move</code> function mainly converts a l-value into a r-value reference. Use <code>std::move</code> to force the use of other types' move assignments and constructors.</p> <pre><code>```cpp\nvector&lt;T&gt;&amp; operator=(vector&lt;T&gt;&amp;&amp; other)\n{\n    if (&amp;other == this) return *this;\n    _size = std::move(other._size);\n    _capacity = std::move(other._capacity);\n\n    //we can steal the array\n    delete[] _elems;\n    _elems = std::move(other._elems);\n    return *this;\n}\n\nvector&lt;string&gt; vec1 = {\"hello\", \"world\"}; // vec1 = {\"hello\", \"world\"}\nvector&lt;string&gt; vec2 = std::move(vec1); // vec2 = {\"hello\", \"world\"}\n                                  // vec1 = {}\n\nvec1.push_back(\"game\"); // vec1 = {\"game\"}\n\n// `vec1` is a l-value, we use `std::move` to convert it\n// also break the variable `vec1`\n</code></pre> <p>After a variable is moved via <code>std::move</code>, it should never be used until it is reassigned to a new variable.</p> <pre><code>**Don't use `std::move` outside of class definitions, never use it in application code.**\n</code></pre>"},{"location":"course/cs/cs106L/lec12_type_safety/","title":"TOC","text":"<ul> <li>[[#Type safety|Type safety]]</li> </ul>"},{"location":"course/cs/cs106L/lec12_type_safety/#type-safety","title":"Type safety","text":"<p><code>Type Safety</code>: The extent to which a language prevents typing errors and guarantees the behavior of programs.</p> <p><code>Unde\ufb01ned Behavior(UB)</code>: Function could crash, could give us garbage, could accidentally give us some actual value.</p> <p><code>std::optional&lt;T&gt;</code>: A template class which will either contain a value of type T or contain nothing (expressed as <code>nullopt</code>). <code>std::optional</code> is a tool that could make this happen: you can return either a value or nothing.</p> <pre><code>```cpp\nint main(){\n    std::optional&lt;int&gt; num1 = {}; // num1 does not have a value\n    // std::optional num1 = {2};     // type deduction\n    num1 = std::optional&lt;int&gt;{1}; // now it does!\n    num1 = std::nullopt; // now it doesn't anymore\n\n    return 0;\n}\n</code></pre> <p><code>std::optional</code> interface  - .value()      - returns the contained value or throws <code>bad_optional_access</code> error - .valueor(valueType val)     - returns the contained value or default value(parameter val) - .hasvalue()     - returns true if contained value exists, false otherwise</p> <p><code>std::optional</code> \"monadic\" interface(C++23)  - .andthen(function f)      - returns the result of calling f(value) if contained value exists, otherwise nullopt (f must return optional) - .orelse(function f)     - returns value if it exists, otherwise returns result of calling f - .transform(function f)     - returns the result of calling f(value) if contained value exists, otherwise nullopt (f must return optional)"},{"location":"course/cs/cs106L/lec13_special_topics/","title":"TOC","text":"<ul> <li>[[#RALL|RALL]]</li> <li>[[#Smart Pointers|Smart Pointers]]</li> </ul>"},{"location":"course/cs/cs106L/lec13_special_topics/#raii","title":"RAII","text":"<p><code>Code path</code>: A single run-through of the code that the computer would see.</p> <p></p> <p>When a function has an error, it can crash the program. - This is known as \"throwing an exception\". However, we can write code to handle these to let us continue. - This is \"catching an exception\".</p> <p>There are (at least) 23 code paths in the code before - (1) copy constructor of Person parameter may throw - (5) constructor of temp string may throw - (6) call to favoritefood, favoritedrink, \ufb01rst (2), last(2), may throw - (10) operators may be user-overloaded, thus may throw - (1) copy constructor of string for return value may throw</p> <p>There are many resources that need to be returned after use.</p> <p></p> <p><code>RAII</code>: Resource Acquisition is Initialization In RAII - All resources used by a class should be acquired in the constructor - All resources used by a class should be released in the destructor - Avoid calling <code>new</code> and <code>delete</code> explicitly</p>"},{"location":"course/cs/cs106L/lec13_special_topics/#smart-pointers","title":"Smart Pointers","text":"<p>There are three types of <code>smart (RAII-safe) pointers</code>: - std::uniqueptr     - Uniquely owns its resource, can't be copied     - When a <code>unique_ptr</code> goes out of scope, it frees the memory associated with it - std::sharedptr     - Can make copies, destructed when underlying memory goes out of scope - std::weak_ptr     - Models temporary ownership: when an object only needs to be accessed if it exists (convert to shared_ptr to access)</p> <pre><code>```cpp\nstd::unique_ptr&lt;T&gt; up{new T};\nstd::unique_ptr&lt;T&gt; up = std::make_unique&lt;T&gt;();\n\nstd::shared_ptr&lt;T&gt; sp{new T};\nstd::shared_ptr&lt;T&gt; sp = std::make_shared&lt;T&gt;();\n\nstd::weak_ptr&lt;T&gt; wp = sp; // can only be copy/move constructed(or empty)\n</code></pre>"},{"location":"course/cs/cs231n/","title":"CS231n: Deep Learning for Computer Vision","text":"<p>Abstract</p> <ul> <li> Website: Latest version</li> <li> Video:<ul> <li>(2017 Spring)</li> <li>(2017 Spring)</li> </ul> </li> <li> Github repo:<ul> <li>Zicx's repo(2022 Spring)</li> <li>Course repo</li> </ul> </li> </ul>"},{"location":"course/cs/cs231n/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Lec01: \u200b\u8bfe\u7a0b\u200b\u4ecb\u7ecd\u200b</li> <li>Lec02: \u200b\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b</li> </ul> <p>\u200b\u5728\u200b\u5b66\u4e60\u200b\u8fd9\u95e8\u200b\u8bfe\u200b\u7684\u200b\u65f6\u5019\u200b\u7531\u4e8e\u200b\u8d44\u6599\u200b\u90fd\u200b\u662f\u200b\u82f1\u6587\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7528\u200b\u82f1\u6587\u200b\u8bb0\u200b\u7684\u200b\u7b14\u8bb0\u200b\uff0c\u200b\u5728\u200b\u7f51\u7ad9\u200b\u4e0a\u200b\u6392\u7248\u200b\u4f1a\u200b\u663e\u5f97\u200b\u5f88\u200b\u7a00\u758f\u200b\uff0c\u200b\u4e4b\u540e\u200b\u4f1a\u200b\u66f4\u65b0\u200b\u6210\u200b\u4e2d\u6587\u200b\u7b14\u8bb0\u200b\u7684\u200b\uff0c\u200b\u6709\u4e9b\u200b\u4e0d\u4f1a\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u5730\u65b9\u200b\u4f1a\u200b\u4fdd\u7559\u200b\u539f\u59cb\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u6709\u200b\u7ffb\u8bd1\u200b\u9519\u8bef\u200b\u6216\u200b\u4e0d\u59a5\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8bc4\u8bba\u200b\u533a\u200b\u544a\u8bc9\u200b\u6211\u200b\u54e6\u200b :)</p>"},{"location":"course/cs/cs231n/lec01_introduction_overview/","title":"\u8bfe\u7a0b\u200b\u4ecb\u7ecd","text":"<p> \u200b\u7ea6\u200b 160 \u200b\u4e2a\u200b\u5b57\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs231n/lec01_introduction_overview/#_2","title":"\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u7684\u200b\u5386\u53f2","text":"<p>\u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u9636\u6bb5\u200b</p> <ul> <li>\u200b\u89c6\u89c9\u200b\u8868\u5f81\u200b\uff081970s\uff09</li> <li>\u200b\u901a\u8fc7\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b\u8fdb\u884c\u200b\u8bc6\u522b\u200b\uff081980s\uff09</li> <li>\u200b\u8ba4\u77e5\u200b\u548c\u200b\u795e\u7ecf\u79d1\u5b66\u200b\u9010\u6b65\u200b\u53d1\u5c55\u200b\uff0c\u200b\u89c6\u89c9\u200b\u6280\u672f\u200b\u5f00\u59cb\u200b\u5e94\u7528\u200b\uff08\u200b\u4eba\u8138\u8bc6\u522b\u200b\uff0c\u200b\u7269\u4f53\u200b\u68c0\u6d4b\u200b...\uff09\uff081995\uff09</li> <li>\u200b\u4eba\u7c7b\u200b\u5f00\u59cb\u200b\u66f4\u200b\u6df1\u5165\u200b\u5730\u200b\u8bad\u7ec3\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff0c\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u6280\u672f\u200b\u9010\u6e10\u200b\u6210\u719f\u200b\uff082000s)</li> <li>CNN(LeCun)\uff0cImageNet\uff0cAlexNet...</li> <li>\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u7684\u200b\u5404\u4e2a\u200b\u5e94\u7528\u9886\u57df\u200b\uff082012\u200b\u81f3\u4eca\u200b\uff09</li> </ul>"},{"location":"course/cs/cs231n/lec01_introduction_overview/#_3","title":"\u8bfe\u7a0b\u200b\u603b\u89c8","text":"Syllabus"},{"location":"course/cs/cs231n/lec01_introduction_overview/#_4","title":"\u9884\u4fee\u200b\u8981\u6c42","text":"<ul> <li>\u200b\u7cbe\u901a\u200b Python \u200b\u548c\u200b NumPy</li> <li>\u200b\u5fae\u79ef\u5206\u200b\uff0c\u200b\u7ebf\u6027\u4ee3\u6570\u200b\uff0c\u200b\u6982\u7387\u8bba\u200b\u7b49\u200b\u6570\u5b66\u77e5\u8bc6\u200b</li> <li>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u57fa\u7840\u200b</li> </ul>"},{"location":"course/cs/cs231n/lec02_image_classification/","title":"\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u548c\u200b\u7ebf\u6027\u200b\u5206\u7c7b\u5668","text":"<p> \u200b\u7ea6\u200b 1744 \u200b\u4e2a\u200b\u5b57\u200b  6 \u200b\u884c\u200b\u4ee3\u7801\u200b  5 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 6 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#_2","title":"\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u4efb\u52a1","text":"<p>\u200b\u5728\u200b\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u5e38\u200b\u4f1a\u200b\u8bad\u7ec3\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u56fe\u7247\u200b\u548c\u200b\u7c7b\u522b\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u96c6\u4e2d\u200b\u9884\u6d4b\u200b\u672a\u200b\u51fa\u73b0\u200b\u8fc7\u200b\u7684\u200b\u56fe\u7247\u200b\u7684\u200b\u7c7b\u522b\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#_3","title":"\u56fe\u50cf\u200b\u5206\u7c7b\u5668","text":"<pre><code>def classify_image(image):\n    # Some magic here?\n    return class_label\n</code></pre> <p>\u200b\u6ca1\u6709\u200b\u663e\u5f0f\u200b\u7684\u200b\u7b97\u6cd5\u200b\u53ef\u4ee5\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#_4","title":"\u6570\u636e\u200b\u9a71\u52a8\u200b\u7684\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u6536\u96c6\u200b\u4e00\u7cfb\u5217\u200b\u5177\u6709\u200b\u56fe\u7247\u200b\u548c\u200b\u7c7b\u522b\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7684\u200b\u7b97\u6cd5\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u5206\u7c7b\u5668\u200b</li> <li>\u200b\u5728\u200b\u65b0\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u56fe\u7247\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8bad\u7ec3\u200b\u597d\u200b\u7684\u200b\u5206\u7c7b\u5668\u200b\u9884\u6d4b\u200b\u7c7b\u522b\u200b</li> </ul>"},{"location":"course/cs/cs231n/lec02_image_classification/#_5","title":"\u6700\u8fd1\u200b\u90bb","text":"<p>\u200b\u8ddd\u79bb\u200b\u7684\u200b\u5ea6\u91cf\u200b\u65b9\u5f0f\u200b\uff1a</p> <p>L1 (Manhattan) \u200b\u8ddd\u79bb\u200b</p> \\[ d_1(I_1, I_2) = \\sum_p | I_1^p - I_2^p | \\]"},{"location":"course/cs/cs231n/lec02_image_classification/#_6","title":"\u7b97\u6cd5","text":"<pre><code>For each test image\n  Find closest train image\n  Predict label of nearest image\n</code></pre> \u200b\u6700\u8fd1\u200b\u90bb\u200b\u793a\u610f\u56fe"},{"location":"course/cs/cs231n/lec02_image_classification/#k-","title":"K-\u200b\u6700\u8fd1\u200b\u90bb","text":"<p>\u200b\u6311\u9009\u200b\u6700\u200b\u76f8\u8fd1\u200b\u7684\u200bK\u200b\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u8fdb\u884c\u200b\u6295\u7968\u200b\u51b3\u7b56\u200b\uff0c\u200b\u4ece\u800c\u200b\u9884\u6d4b\u200b\u65b0\u200b\u7684\u200b\u7c7b\u522b\u200b</p> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u8ddd\u79bb\u200b\u7684\u200b\u5ea6\u91cf\u200b\u65b9\u5f0f\u200b\uff1a</p> <p>L2 (Euclidean) \u200b\u8ddd\u79bb\u200b</p> \\[ d_2(I_1, I_2) = \\sqrt{\\sum_p (I_1^p - I_2^p)^2} \\] <p> </p> K\u200b\u6700\u8fd1\u200b\u90bb\u200b\u793a\u610f\u56fe\u200b <p>Note</p> <p>\u200b\u6839\u636e\u200b\u4e0a\u9762\u200b\u7684\u200b\u56fe\u7247\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u4e0d\u540c\u200b\u7684\u200bK\u200b\u503c\u200b\u7684\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\u4e2d\u200b\uff0c\u200b\u51b3\u7b56\u200b\u8fb9\u754c\u200b\u7684\u200b\u5e73\u6ed1\u200b\u7a0b\u5ea6\u200b\u6709\u200b\u5f88\u5927\u200b\u7684\u200b\u4e0d\u540c\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#_7","title":"\u8d85\u200b\u53c2\u6570","text":"<ul> <li>\u200b\u6700\u4f73\u200b\u7684\u200b\u53c2\u6570\u200b K\u200b\u5e94\u8be5\u200b\u662f\u200b\u4ec0\u4e48\u200b</li> <li>\u200b\u6700\u4f73\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u65b9\u5f0f\u200b(L1, L2...)\u200b\u5e94\u8be5\u200b\u662f\u200b\u4ec0\u4e48\u200b</li> </ul> <p>K-\u200b\u6700\u8fd1\u200b\u90bb\u200b\u7b97\u6cd5\u200b\u57fa\u672c\u200b\u4e0d\u200b\u7528\u4e8e\u200b\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b</p> <ul> <li>\u200b\u8ddd\u79bb\u200b\u96be\u4ee5\u63cf\u8ff0\u200b\uff0c\u200b\u50cf\u7d20\u200b\u8868\u793a\u200b\u7684\u200b\u4fe1\u606f\u91cf\u200b\u592a\u200b\u5c11\u200b</li> <li>\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u590d\u6742\u200b</li> </ul>"},{"location":"course/cs/cs231n/lec02_image_classification/#_8","title":"\u7ebf\u6027\u200b\u5206\u7c7b\u5668","text":""},{"location":"course/cs/cs231n/lec02_image_classification/#_9","title":"\u6a21\u578b","text":"\\[ f(x, W) = Wx + b \\] <ul> <li>\\(x\\) \u200b\u7684\u200b\u5927\u5c0f\u200b\u662f\u200b \\(3072 \\times 1\\)\uff0c\u200b\u5c06\u200b\u8f93\u5165\u200b\u7684\u200b\u56fe\u7247\u200b(\\(32 \\times 32 \\times 3\\)) \u200b\u5c55\u5e73\u200b\u4e3a\u200b\u5411\u91cf\u200b</li> <li>\\(W\\) \u200b\u7684\u200b\u5927\u5c0f\u200b\u662f\u200b \\(10 \\times 3072\\)\uff0c\u200b\u4ee3\u8868\u200b\u6743\u91cd\u200b\u6216\u200b\u53c2\u6570\u200b\uff0c\u200b\u5176\u4e2d\u200b \\(10\\) \u200b\u662f\u200b\u7c7b\u522b\u200b\u603b\u6570\u200b</li> <li>\\(f\\) \u200b\u7684\u200b\u5927\u5c0f\u200b\u662f\u200b \\(10 \\times 1\\)\uff0c\u200b\u4ee3\u8868\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u6700\u540e\u200b\u7684\u200b\u5f97\u5206\u200b</li> <li>\\(b\\) \u200b\u662f\u200b\u504f\u5dee\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8c03\u6574\u200b\u5206\u7c7b\u5668\u200b\u7684\u200b\u53c2\u6570\u200b</li> </ul> <p>\u200b\u4e0b\u56fe\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8ba1\u7b97\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <p></p>"},{"location":"course/cs/cs231n/lec02_image_classification/#_10","title":"\u51e0\u4f55\u200b\u89d2\u5ea6\u200b\u7406\u89e3","text":"<p>Note</p> <p>\u200b\u5728\u200b\u4e0a\u200b\u56fe\u200b\u7684\u200b\u5e73\u9762\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u5f20\u200b\u56fe\u50cf\u200b\uff08\u200b\u9ad8\u7ef4\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff09\u200b\u90fd\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5750\u6807\u200b\u70b9\u200b\uff0c\u200b\u5206\u7c7b\u5668\u200b\u8bad\u7ec3\u200b\u51fa\u6765\u200b\u7684\u200b\u6743\u503c\u200b\u5f62\u6210\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u5206\u754c\u7ebf\u200b\uff0c\u200b\u6cbf\u7740\u200b\u5206\u754c\u7ebf\u200b\u7bad\u5934\u200b\u6240\u793a\u200b\u65b9\u5411\u200b\u7684\u200b\u56fe\u50cf\u200b\u5f97\u5206\u200b\u9010\u6e10\u200b\u63d0\u9ad8\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u76f8\u53cd\u200b\u65b9\u5411\u200b\u7684\u200b\u56fe\u50cf\u200b\u5f97\u5206\u200b\u9010\u6e10\u200b\u964d\u4f4e\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\u9519\u8bef\u200b\uff0c\u200b\u8fd9\u200b\u5f20\u56fe\u200b\u4e5f\u200b\u8bf4\u660e\u200b\u4e86\u200b\u7ebf\u6027\u200b\u5206\u7c7b\u200b\u6a21\u578b\u200b\u5177\u6709\u200b\u5c40\u9650\u6027\u200b\uff0c\u200b\u5728\u200b\u63cf\u8ff0\u200b\u4fe1\u606f\u200b\u7684\u200b\u80fd\u529b\u200b\u4e0a\u200b\u5b58\u5728\u200b\u5f88\u5927\u200b\u7684\u200b\u4e0d\u8db3\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#svm","title":"\u591a\u200b\u7c7b\u522b\u200b SVM","text":"<p>\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b(Support Vector Machine, SVM)\u200b\u662f\u200b\u4e00\u7c7b\u200b\u6309\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u65b9\u5f0f\u200b\u5bf9\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u7684\u200b\u7ebf\u6027\u200b\u5206\u7c7b\u5668\u200b</p> <p>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u8bc4\u4f30\u200b\u5f53\u524d\u200b\u5206\u7c7b\u5668\u200b\u7684\u200b\u8868\u73b0\u200b\u5982\u4f55\u200b\uff0c\u200b\u91cf\u5316\u200b\u5f53\u524d\u200b\u7684\u200b\u504f\u5dee\u200b\u5230\u5e95\u200b\u6709\u200b\u591a\u5c11\u200b\uff0c\u200b\u4ece\u800c\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u6311\u9009\u200b\u66f4\u4f18\u200b\u7684\u200b\u6743\u91cd\u200b\u53c2\u6570\u200b</p> <p>SVM \u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53eb\u505a\u200b\u5408\u9875\u200b\u635f\u5931\u200b(Hinge Loss)</p> \\[ \\begin{aligned} L_i &amp; =\\sum_{j \\neq y_i} \\begin{cases}0 &amp; \\text { if } s_{y_i} \\geq s_j+1 \\\\ s_j-s_{y_i}+1 &amp; \\text { otherwise }\\end{cases} \\\\ &amp; =\\sum_{j \\neq y_i} \\max \\left(0, s_j-s_{y_i}+1\\right) \\\\ L &amp;= \\frac{1}{N} \\sum_{i=1}^N L_i \\end{aligned} \\] <p>\u200b\u4e0a\u5f0f\u200b\u4e2d\u200b\u7684\u200b \\(s_{y_{i}}\\) \u200b\u4ee3\u8868\u200b\u7684\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\u7c7b\u522b\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5206\u6570\u200b\uff0c\\(s_j\\) \u200b\u4ee3\u8868\u200b\u7684\u200b\u662f\u200b\u5176\u4ed6\u200b\u7c7b\u522b\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5206\u6570\u200b</p> <p>Tip</p> <p>\u200b\u4e8b\u5b9e\u4e0a\u200b \\(s_j - s_{y_i} +1\\) \u200b\u4e2d\u200b\u7684\u200b \\(1\\) \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8d85\u200b\u53c2\u6570\u200b\uff0c\u200b\u6211\u4eec\u200b\u5173\u5fc3\u200b\u7684\u200b\u662f\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u5f97\u5206\u200b\u7684\u200b\u76f8\u5bf9\u200b\u5dee\u503c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u4e2a\u200b \\(1\\) \u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u6765\u200b\u8c03\u6574\u200b\uff0c\u200b\u7531\u4e8e\u200b SVM Loss \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e00\u822c\u200b\u6211\u4eec\u200b\u5c31\u200b\u7528\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b</p> <p>\u200b\u4e00\u4e2a\u200b\u8ba1\u7b97\u200b SVM Loss \u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <p>\u200b\u5047\u8bbe\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u6709\u200b\u4e09\u4e2a\u200b\u7c7b\u522b\u200b\\((cat/car/frog)\\)\u200b\u548c\u200b\u4e09\u5f20\u200b\u56fe\u7247\u200b\\((img_1/img_2/img_3)\\)\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u5f97\u5206\u200b\u5982\u4e0b\u200b\uff1a</p> \\(img_1(cat)\\) \\(img_2(car)\\) \\(img_3(frog)\\) \\(cat\\) 3.2 1.3 2.2 \\(car\\) 5.1 4.9 2.5 \\(frog\\) -1.7 2.0 -3.1 <p>\u200b\u73b0\u5728\u200b\u8ba1\u7b97\u200b \\(img_1\\) \u200b\u7684\u200b\u635f\u5931\u200b\u503c\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u662f\u200b \\(cat\\)\uff0c\u200b\u5bf9\u5e94\u200b \\(y_i\\)</p> \\[ \\begin{aligned} L_1 &amp;= max(0, 5.1-3.2+1) + max(0, -1.7-3.2+1) \\\\ &amp;= max(0, 2.9) + max(0, -3.9) \\\\ &amp;= 2.9 \\end{aligned} \\] <p>\u200b\u540c\u7406\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b \\(img_2\\) \u200b\u548c\u200b \\(img_3\\) \u200b\u7684\u200b\u635f\u5931\u200b\u503c\u200b\u5206\u522b\u200b\u4e3a\u200b \\(L_2 =0, L_3 = 12.9\\)</p> <p>\u200b\u6700\u540e\u200b\u7684\u200b\u603b\u200b\u635f\u5931\u200b\u503c\u200b</p> \\[ L = \\frac{2.9+0+12.9}{3} = 5.27 \\]"},{"location":"course/cs/cs231n/lec02_image_classification/#softmax","title":"Softmax \u200b\u5206\u7c7b\u5668","text":"<p>\u200b\u5c06\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b\u539f\u59cb\u200b\u5f97\u5206\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6982\u7387\u200b</p> \\[ \\begin{aligned} &amp; s = f\\left(x_i ; W\\right) \\\\ &amp; P\\left(Y=k \\mid X=x_i\\right) = \\frac{e^{s_k}}{\\sum_j e^{s_j}} \\end{aligned} \\] <p>\u200b\u6700\u540e\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\u76f8\u52a0\u200b\u8981\u200b\u7b49\u4e8e\u200b 1</p> <p>Softmax \u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53eb\u505a\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b(Cross Entropy Loss)</p> \\[ \\begin{aligned} L_i &amp;= -\\log \\left(\\frac{e^{s_{y_i}}}{\\sum_j e^{s_j}}\\right) \\\\ L &amp;= \\frac{1}{N} \\sum_{i=1}^N L_i \\end{aligned} \\] <p>\u200b\u8fd9\u91cc\u200b\u5bf9\u6570\u200b\u662f\u200b\u81ea\u7136\u5bf9\u6570\u200b\\((e)\\)\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4ee5\u200b \\(2\\) \u200b\u6216\u200b \\(10\\) \u200b\u4e3a\u5e95\u200b\u7684\u200b\u5bf9\u6570\u200b</p> <p>\u200b\u4e00\u4e2a\u200b\u8ba1\u7b97\u200b Softmax Loss \u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <p>\u200b\u8fd8\u662f\u200b\u548c\u200b\u4e4b\u524d\u200b\u4e00\u6837\u200b\uff0c\u200b\u5047\u8bbe\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u6709\u200b\u4e09\u4e2a\u200b\u7c7b\u522b\u200b\u548c\u200b\u4e09\u5f20\u200b\u56fe\u7247\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u5f97\u5206\u200b\u5982\u4e0b\u200b\uff1a</p> \\(img_1(cat)\\) \\(img_2(car)\\) \\(img_3(frog)\\) \\(cat\\) 3.2 1.3 2.2 \\(car\\) 5.1 4.9 2.5 \\(frog\\) -1.7 2.0 -3.1 <p>\u200b\u4ee5\u200b \\(img_1\\) \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u5148\u5bf9\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5f97\u5206\u200b\u53d6\u200b \\(e\\) \u200b\u7684\u200b\u6307\u6570\u200b\uff0c\u200b\u5f97\u5230\u200b \\([24.5, 164.0, 0.18]\\)</p> <p>\u200b\u518d\u200b\u6839\u636e\u200b softmax \u200b\u7b97\u5b50\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b\u6982\u7387\u200b \\([0.13, 0.87, 0.00]\\)</p> <p>\u200b\u73b0\u5728\u200b\u8ba1\u7b97\u200b \\(img_1\\) \u200b\u7684\u200b\u635f\u5931\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u662f\u200b \\(cat\\)\uff0c\u200b\u5bf9\u5e94\u200b \\(y_i\\)</p> \\[ \\begin{aligned} L_1 &amp;= -log P(Y=y_i | X = x_i) \\\\ &amp;= -log(0.13) \\\\ &amp;= 2.04 \\end{aligned} \\] <p>\u200b\u540c\u7406\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b \\(img_2\\) \u200b\u548c\u200b \\(img_3\\) \u200b\u7684\u200b\u635f\u5931\u200b\u503c\u200b\u5e76\u200b\u53d6\u200b\u5e73\u5747\u503c\u200b\u5f97\u5230\u200b\u6700\u540e\u200b\u7684\u200b\u635f\u5931\u200b\u503c\u200b</p>"},{"location":"course/cs/cs231n/lec02_image_classification/#svm-softmax","title":"\u5bf9\u6bd4\u200b SVM \u200b\u548c\u200b Softmax","text":"<p>\u200b\u4e0b\u9762\u200b\u8fd9\u200b\u5f20\u56fe\u200b\u6709\u52a9\u4e8e\u200b\u6211\u4eec\u200b\u8ba4\u8bc6\u200b SVM \u200b\u548c\u200b Softmax \u200b\u5206\u7c7b\u5668\u200b\u4e4b\u95f4\u200b\u7684\u200b\u533a\u522b\u200b</p> <p></p> <p>Note</p> <p>\u200b\u5728\u200b\u4e0a\u200b\u56fe\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u522b\u200b\u8ba1\u7b97\u200b\u4e86\u200b\u540c\u4e00\u4e2a\u200b\u5206\u6570\u200b\u5411\u91cf\u200b(score vector) \\(f\\) \u200b\u7684\u200b SVM Loss \u200b\u548c\u200b Softmax Loss \u200b\u4e0d\u540c\u4e4b\u5904\u200b\u5728\u4e8e\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5206\u7c7b\u5668\u200b\u5bf9\u4e8e\u200b \\(f\\) \u200b\u4e2d\u200b\u7684\u200b\u5206\u6570\u200b\u7684\u200b\u89e3\u91ca\u200b</p> <ul> <li>SVM \u200b\u5206\u7c7b\u5668\u200b\u5c06\u200b\u5206\u6570\u200b\u89e3\u91ca\u200b\u4e3a\u200b\u7c7b\u522b\u200b\u5f97\u5206\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5b83\u200b\u9f13\u52b1\u200b\u6b63\u786e\u200b\u7c7b\u522b\u200b\u6700\u540e\u200b\u7684\u200b\u5f97\u5206\u200b\u9ad8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u8ba1\u7b97\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\u662f\u200b \\(max(0, s_j - s_{y_i} + 1)\\)\uff0c\u200b\u5f53\u200b \\(s_{y_i}\\) \u200b\u76f8\u5bf9\u200b\u8f83\u5927\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u503c\u200b\u4e00\u76f4\u200b\u662f\u200b0\uff0c\u200b\u6240\u4ee5\u200b\u5bf9\u4e8e\u200b\u635f\u5931\u200b\u503c\u200b\u7684\u200b\u8d21\u732e\u200b\u5f88\u5c11\u200b     SVM \u200b\u5206\u7c7b\u5668\u200b\u66f4\u200b\u5bb9\u6613\u200b\u6ee1\u8db3\u200b\u4e00\u4e9b\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u7a0b\u5ea6\u200b\u4e0a\u200b\u5b83\u200b\u53ea\u200b\u9700\u8981\u200b\u5173\u6ce8\u200b\u5185\u90e8\u200b\u7684\u200b\u76f8\u5bf9\u200b\u5f97\u5206\u200b\u5373\u53ef\u200b\uff0c\u200b\u4e0d\u592a\u200b\u5728\u610f\u200b\u635f\u5931\u200b\u503c\u200b\u7684\u200b\u7edd\u5bf9\u200b\u5927\u5c0f\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5047\u8bbe\u200b \\(f = [10, -100, -100] \\quad \\text{or} \\quad f = [10, 9, 9]\\)\uff0c\u200b\u5219\u200b\u7b2c\u4e00\u7c7b\u200b\u5bf9\u5e94\u200b\u7684\u200b SVM Loss \u200b\u90fd\u200b\u4e3a\u200b0\uff0c\u200b\u4f46\u200b\u4ece\u200b\u5f97\u5206\u200b\u53ef\u4ee5\u200b\u8bf4\u660e\u200b\u7b2c\u4e00\u7c7b\u200b\u662f\u200b\u5206\u7c7b\u200b\u6b63\u786e\u200b\u7684\u200b</li> <li>Softmax \u200b\u5206\u7c7b\u5668\u200b\u5c06\u200b\u5206\u6570\u200b\u89e3\u91ca\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u7c7b\u200b\u7684\u200b\uff08\u200b\u975e\u200b\u6807\u51c6\u5316\u200b\u7684\u200b\uff09\u200b\u5bf9\u6570\u200b\u6982\u7387\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5b83\u200b\u9f13\u52b1\u200b\u6b63\u786e\u200b\u7c7b\u522b\u200b\u7684\u200b\u5bf9\u6570\u200b\u6982\u7387\u200b\u4e3a\u200b\u9ad8\u200b\uff0c\u200b\u5728\u200b\u8ba1\u7b97\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\u662f\u200b \\(-log P(Y=y_i | X = x_i)\\)\uff0c\u200b\u6982\u7387\u200b\u8d8a\u9ad8\u200b\u5bf9\u5e94\u200b\u7684\u200b\u635f\u5931\u200b\u503c\u8d8a\u200b\u5c0f\u200b     Softmax \u200b\u5206\u7c7b\u5668\u200b\u65e0\u6cd5\u200b\u5224\u65ad\u200b\u6b63\u786e\u200b\u7684\u200b\u7c7b\u522b\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u5b83\u200b\u53ea\u80fd\u200b\u7ed9\u51fa\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u7f6e\u4fe1\u5ea6\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u5206\u7c7b\u5668\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b\u7684\u200b\u635f\u5931\u200b\u503c\u200b\u662f\u200b\u4e0d\u53ef\u200b\u6bd4\u8f83\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u6bd4\u8f83\u200b\u6ca1\u6709\u200b\u610f\u4e49\u200b\uff08\u200b\u6807\u51c6\u200b\u4e0d\u540c\u200b\uff09\uff0c\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5185\u90e8\u200b\u91cf\u5316\u200b\u7684\u200b\u6807\u51c6\u200b</li> </ul> <p>\u200b\u8bfe\u7a0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f51\u9875\u200b\u4ea4\u4e92\u200b\u7684\u200b Demo\uff0c\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u7406\u89e3\u200b\u7ebf\u6027\u200b\u5206\u7c7b\u5668\u200b\uff1aInteractive web demo</p>"},{"location":"course/cs/cs231n/lec03_regularization_and_optimization/","title":"\u6b63\u5219\u200b\u5316\u200b\u548c\u200b\u4f18\u5316","text":"<p> \u200b\u7ea6\u200b 566 \u200b\u4e2a\u200b\u5b57\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p>"},{"location":"course/cs/cs231n/lec03_regularization_and_optimization/#_2","title":"\u6b63\u5219\u200b\u5316","text":"<p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u6b63\u5219\u200b\u5316\u200b</p> <ul> <li>\u200b\u9632\u6b62\u200b\u6a21\u578b\u200b\u592a\u200b\u590d\u6742\u200b\uff0c\u200b\u5728\u200b\u8bad\u7ec3\u200b\u96c6\u4e0a\u200b\u8868\u73b0\u200b\u5f97\u592a\u597d\u200b</li> <li>\u200b\u907f\u514d\u200b\u62df\u5408\u200b\u566a\u58f0\u200b\uff0c\u200b\u5229\u4e8e\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b</li> <li>\u200b\u6dfb\u52a0\u200b\u975e\u7ebf\u6027\u200b\u6b63\u5219\u200b\u9879\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u6cdb\u5316\u200b\u6027\u80fd\u200b</li> </ul> <p></p> <ul> <li>\\(\\lambda\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8d85\u200b\u53c2\u6570\u200b\uff0c\u200b\u4ee3\u8868\u200b\u6b63\u5219\u200b\u5f3a\u5ea6\u200b(regularization strength) <p>\u200b\u4e00\u822c\u200b\u4f7f\u7528\u200b L2 \u200b\u6b63\u5219\u200b\u65f6\u200b\u6211\u4eec\u200b\u7528\u200b \\(\\lambda\\) \u200b\u8868\u793a\u200b\uff0c\u200b\u800c\u200b\u4f7f\u7528\u200b L1 \u200b\u6b63\u5219\u200b\u65f6\u200b\u6211\u4eec\u200b\u7528\u200b \\(\\alpha\\) \u200b\u8868\u793a\u200b</p> </li> <li>\u200b\u6b63\u5219\u200b\u51fd\u6570\u200b<ul> <li>L2 \u200b\u6b63\u5219\u200b\uff1a\\(R(W)=\\sum_k \\sum_l W_{k, l}^2\\)<ul> <li>L2 \u200b\u6b63\u5219\u200b\u53ef\u4ee5\u200b\u4f7f\u5f97\u200b\u53c2\u6570\u200b\u5e73\u6ed1\u200b\uff0c\u200b\u9632\u6b62\u200b\u6a21\u578b\u200b\u8fc7\u200b\u62df\u5408\u200b</li> </ul> </li> <li>L1 \u200b\u6b63\u5219\u200b\uff1a\\(R(W)=\\sum_k \\sum_l | W_{k, l} |\\)<ul> <li>L1 \u200b\u6b63\u5219\u200b\u53ef\u4ee5\u200b\u4f7f\u5f97\u200b\u53c2\u6570\u200b\u7a00\u758f\u200b\u5316\u200b</li> <li>L1 \u200b\u6b63\u5219\u200b\u5bf9\u4e8e\u200b\u6837\u672c\u200b\u7684\u200b\u5750\u6807\u7cfb\u200b\u6709\u200b\u4f9d\u8d56\u200b</li> </ul> </li> </ul> </li> <li>\u200b\u5176\u4ed6\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\u65b9\u6cd5\u200b<ul> <li>Dropout</li> <li>Batch Normalization(BN)</li> <li>Fractional Pooling</li> </ul> </li> </ul>"},{"location":"course/cs/cs231n/lec03_regularization_and_optimization/#_3","title":"\u4f18\u5316","text":""},{"location":"course/cs/cs231n/lec03_regularization_and_optimization/#sgd","title":"\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b(SGD)","text":"<p>\u200b\u5728\u200b\u591a\u5143\u200b\u51fd\u6570\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u68af\u5ea6\u200b\u662f\u200b\u591a\u5143\u200b\u51fd\u6570\u200b\u5bf9\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u504f\u200b\u5bfc\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u5411\u91cf\u200b</p> <p>\u200b\u4ee5\u200b\u4e00\u5143\u200b\u4e3a\u4f8b\u200b\uff1a</p> \\[ \\frac{d f(x)}{d x}=\\lim _{h \\rightarrow 0} \\frac{f(x+h)-f(x)}{h} \\] <p>Example</p> <p>\u200b\u5047\u8bbe\u200b\u73b0\u5728\u200b\u7684\u200b\u6743\u91cd\u200b\uff1a\\(W = [0.34, -1.11, 0.78, 0.12, ...]\\)</p> <p>\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u635f\u5931\u200b\u503c\u200b \\(l_1 = 1.25347\\)</p> <p>\u200b\u53d6\u200b \\(h = 0.0001\\)\uff0c\u200b\u5219\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b\u6743\u91cd\u200b\uff1a</p> \\[W' = W + h = [0.34 + \\boldsymbol{0.0001}, -1.11 + \\boldsymbol{0.0001}...]\\] <p>\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u635f\u5931\u200b\u503c\u200b \\(l_2 = 1.25322\\)</p> <p>\u200b\u6839\u636e\u200b\u516c\u5f0f\u200b \\((l_2 - l_1)/h\\)\uff0c\u200b\u8ba1\u7b97\u200b \\(W\\) \u200b\u7684\u200b\u68af\u5ea6\u200b\uff1a\\(dW = [-2.5, 0.6, ...]\\)</p> <p>\u200b\u8fd9\u79cd\u200b\u8ba1\u7b97\u200b\u53c2\u6570\u200b\u68af\u5ea6\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5f88\u200b\u4f4e\u6548\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u200b</p> \\[ \\begin{aligned} &amp; L=\\frac{1}{N} \\sum_{i=1}^N L_i+\\sum_k W_k^2 \\\\ &amp; L_i=\\sum_{j \\neq y_i} \\max \\left(0, s_j-s_{y_i}+1\\right) \\\\ &amp; s=f(x ; W)=W x \\\\ \\\\ &amp; \\text{calculate} \\quad \\nabla_W L \\end{aligned} \\] <p>\u200b\u68af\u5ea6\u200b\u68c0\u67e5\u200b\uff1a\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u68af\u5ea6\u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4ee3\u5165\u200b\u6570\u503c\u200b\u8fdb\u884c\u200b\u68c0\u9a8c\u200b</p> <p>\u200b\u5f53\u200b\u53c2\u6570\u200b\u7684\u200b\u89c4\u6a21\u200b\u5f88\u5927\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u90fd\u200b\u8ba1\u7b97\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7684\u200b\u68af\u5ea6\u200b\u5f00\u9500\u200b\u5f88\u5927\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8fdb\u884c\u200b\u6279\u91cf\u200b\u5316\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b\u7684\u200b\u65f6\u5019\u200b\u53ea\u200b\u9009\u53d6\u200b\u4e00\u4e2a\u200b minibatch \u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b</p> \\[ \\begin{aligned} \\nabla_W L(W)=\\frac{1}{K} \\sum_{i \\in \\sum_K} \\nabla_W L_i\\left(x_i, y_i, W\\right)+\\lambda \\nabla_W R(W) \\end{aligned} \\] <p>Question</p> <p>\u200b\u5173\u4e8e\u200b SGD \u200b\u5b58\u5728\u200b\u7684\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b</p> <ul> <li>Q1: \u200b\u5982\u679c\u200b\u635f\u5931\u200b\u503c\u200b\u5728\u200b\u4e00\u4e2a\u200b\u68af\u5ea6\u65b9\u5411\u200b\u53d8\u5316\u200b\u5f97\u200b\u5f88\u5feb\u200b\u800c\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u65b9\u5411\u200b\u53d8\u5316\u200b\u5f97\u200b\u5f88\u200b\u7f13\u6162\u200b\u4f1a\u200b\u600e\u4e48\u6837\u200b</li> <li>A1: </li> </ul>"},{"location":"course/cs/dlsys/","title":"10-414/714: Deep Learning Systems","text":"<p>Abstract</p> <ul> <li> Website: Latest version</li> <li> Video: (2022 Fall)</li> <li> Github: Zicx's repo(2022 Fall)</li> </ul>"},{"location":"course/cs/dlsys/#table-of-contents","title":"Table of Contents","text":""},{"location":"course/cs/icv/","title":"\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u5bfc\u8bba","text":"<p>TODO</p>"},{"location":"course/cs/icv/#table-of-contents","title":"Table of Contents","text":""},{"location":"course/cs/mit6s184/","title":"MIT 6.S184: Introduction to Flow Matching and Diffusion Models","text":"<p>Abstract</p> <ul> <li>Website:  Latest version</li> <li>Labs:  Zicx's repo (2025 Spring) <p>Learning Process:</p> <p>1) Watch the lecture videos, take notes based on the slides.</p> <p>2) Complete the lab assignments (notebooks) for the corresponding lecture.</p> <p>3) Refine the notes based on the lecture notes.</p> </li> </ul>"},{"location":"course/cs/mit6s184/#table-of-contents","title":"Table of Contents","text":""},{"location":"course/cs/mit6s184/#lecture-notes","title":"Lecture Notes","text":"<ul> <li> Lecture 1: Flow and Diffusion Models</li> <li> Lecture 2: Constructing a Training Target</li> <li> Lecture 3: Training Flow and Diffusion Models</li> <li> Lecture 4: Building an Image Generator</li> </ul>"},{"location":"course/cs/mit6s184/#labs","title":"Labs","text":"<ul> <li> Lab1: Working with SDEs</li> <li> Lab2: Flow Matching and Score Matching</li> <li> Lab3: Conditional Image Generation</li> </ul>"},{"location":"course/cs/mit6s184/#recap","title":"Recap","text":"Credit: Flow Matching and Diffusion Deep Dive @Medium"},{"location":"course/cs/mit6s184/#updates","title":"Updates","text":""},{"location":"course/cs/mit6s184/#meanflow-model","title":"MeanFlow Model","text":"Introduction <ul> <li>Paper:  2505.13447</li> <li>Video:  One Step, Big Leap</li> </ul> <p> MeanFlow Model </p> <p>\u200b\u4f55\u607a\u660e\u200b\u7684\u200b\u65b0\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u79cd\u200b\u540d\u4e3a\u200b MeanFlow \u200b\u7684\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u6846\u67b6\u200b\uff0c\u200b\u76ee\u6807\u200b\u662f\u200b\u5b9e\u73b0\u200b\u9ad8\u6548\u200b\u7684\u200bone-step \u200b\u56fe\u50cf\u200b\u751f\u6210\u200b\u3002 MeanFlow \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u5f15\u5165\u200b\u5e76\u200b\u5efa\u6a21\u200b \u200b\u5e73\u5747\u901f\u5ea6\u200b\uff08average velocity\uff09\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8bba\u6587\u200b\u4ece\u200b\u5e73\u5747\u901f\u5ea6\u200b\u7684\u200b\u5b9a\u4e49\u200b\u51fa\u53d1\u200b\uff0c\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5173\u952e\u200b\u7684\u200b MeanFlow \u200b\u6052\u7b49\u5f0f\u200b\uff08MeanFlow Identity\uff09\uff0c\u200b\u5b83\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5e73\u5747\u901f\u5ea6\u200b\u4e0e\u200b\u77ac\u65f6\u901f\u5ea6\u200b\u53ca\u5176\u200b\u65f6\u95f4\u200b\u5bfc\u6570\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002 \u200b\u8bba\u6587\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u6765\u200b\u76f4\u63a5\u200b\u9884\u6d4b\u200b\u8fd9\u4e2a\u200b\u5e73\u5747\u901f\u5ea6\u200b\u573a\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b MeanFlow \u200b\u6052\u7b49\u5f0f\u200b\u4f5c\u4e3a\u200b training target.</p> <p> MeanFlow Identity </p> <p> MeanFlow Sampling Algorithm </p>"},{"location":"course/cs/mit6s184/#diffusion-meets-flow-matching","title":"Diffusion Meets Flow Matching","text":"<p>Introduction</p> <ul> <li>Blog:  Diffusion Meets Flow Matching: Two Sides of the Same Coin</li> </ul> <p>\u200b\u8fd9\u7bc7\u200b\u535a\u5ba2\u200b\u4ecb\u7ecd\u200b\u4e86\u200b Diffusion \u200b\u548c\u200b Gaussian Flow Matching(GFM) \u200b\u8fd9\u200b\u4e24\u79cd\u200b\u751f\u6210\u200b\u6846\u67b6\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b\u548c\u200b\u8054\u7cfb\u200b\uff0c\u200b\u6307\u51fa\u200b\u5b83\u4eec\u200b\u5728\u200b\u6570\u5b66\u200b\u4e0a\u200b\u662f\u200b\u7b49\u4ef7\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u76f8\u4e92\u200b\u8f6c\u6362\u200b\u3002</p> <p> Diffusion Formulation </p> <p>\u200b\u5bf9\u4e8e\u200b GFM, \u200b\u6211\u4eec\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u7ed3\u679c\u200b\u548c\u200b\u4e0a\u5f0f\u200b\u5728\u200b\u7f51\u7edc\u200b\u8f93\u51fa\u200b\u4e3a\u200b \\(\\hat{\\mathbf{u}}\\) \u200b\u7684\u200b\u65f6\u5019\u200b\u662f\u200b\u7b49\u4ef7\u200b\u7684\u200b\u3002</p> \\[ d\\tilde{\\mathbf{z}}_t = [\\text{Network output}] \\cdot d\\eta_t \\] <p>Diffusion with DDIM sampler == Flow matching sampler (Euler).</p> <p>DDIM \u200b\u91c7\u6837\u5668\u200b\u53ef\u200b\u89c6\u4e3a\u200b\u91cd\u200b\u53c2\u6570\u200b\u5316\u200b\u91c7\u6837\u200b ODE \u200b\u7684\u200b\u4e00\u9636\u200b Euler \u200b\u91c7\u6837\u5668\u200b\uff0c\u200b\u5176\u200b\u5bf9\u200b\u4e0d\u540c\u200b\u7684\u200b\u7f51\u7edc\u200b\u8f93\u51fa\u200b\u91c7\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u66f4\u65b0\u200b\u89c4\u5219\u200b\uff0c\u200b\u5982\u679c\u200b\u7f51\u7edc\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9ad8\u9636\u200b\u7684\u200b ODE \u200b\u6c42\u89e3\u200b\u5668\u200b\uff0c\u200b\u90a3\u4e48\u200b DDIM \u200b\u91c7\u6837\u200b\u7684\u200b\u8bef\u5dee\u200b\u5c31\u200b\u4f1a\u200b\u548c\u200b FM \u200b\u76f8\u5dee\u200b\u5f88\u5927\u200b\u3002</p> <p>DDIM\u200b\u5bf9\u200b\u566a\u58f0\u200b\u8c03\u5ea6\u200b\u4e2d\u200b\u7684\u200b\u7ebf\u6027\u200b\u7f29\u653e\u200b\u5177\u6709\u200b\u4e0d\u53d8\u6027\u200b\uff08invariant\uff09</p> <p>Flow matching weighting == diffusion weighting of \\(\\mathbf{v}\\)-MSE loss + cosine noise schedule.</p> <p>\u200b\u6743\u91cd\u200b\u51fd\u6570\u200b\uff08Weighting Function\uff09 \u200b\u662f\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e2d\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u5b83\u200b\u5e73\u8861\u200b\u4e86\u200b\u56fe\u50cf\u200b\u3001\u200b\u89c6\u9891\u200b\u548c\u200b\u97f3\u9891\u200b\u7b49\u200b\u611f\u77e5\u200b\u6570\u636e\u200b\u4e2d\u200b\u9ad8\u9891\u200b\u4e0e\u200b\u4f4e\u9891\u200b\u6210\u5206\u200b\u7684\u200b\u91cd\u8981\u6027\u200b\uff0cFM \u200b\u4e2d\u200b\u7684\u200b\u6743\u91cd\u200b\u51fd\u6570\u200b\u4e0e\u200b Diffusion \u200b\u4e2d\u200b\u5e38\u89c1\u200b\u7684\u200b \\(\\mathbf{v}\\)-MSE \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u6743\u91cd\u200b\u51fd\u6570\u200b\u76f8\u540c\u200b\u3002</p> <p>Takeaways: Gaussian Flow Matching \u200b\u4e3a\u200b\u8be5\u200b\u9886\u57df\u200b\u5e26\u6765\u200b\u4e86\u200b\u4e24\u79cd\u200b\u65b0\u200b\u6a21\u578b\u200b\u89c4\u8303\u200b</p> <ol> <li>Network output: a vector field parametrization of the network output.</li> <li>Sampling noise schedule: a simple linear noise schedule.</li> </ol>"},{"location":"course/cs/mit6s184/lec01/","title":"Lec01-\u200b\u751f\u6210\u200b\u548c\u200b\u6d41","text":"<p> \u200b\u7ea6\u200b 1698 \u200b\u4e2a\u200b\u5b57\u200b  8 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 6 \u200b\u5206\u949f\u200b</p> <p>Overview</p> <ul> <li>Video:  Lecture 01</li> <li>Slide:  Lecture 01</li> <li>References:<ul> <li> Lecture notes</li> <li> Flow Matching Guide and Code by Meta</li> <li> Diffusion Meets Flow Matching: Two Sides of the Same Coin</li> </ul> </li> </ul>"},{"location":"course/cs/mit6s184/lec01/#course-overview","title":"Course Overview","text":""},{"location":"course/cs/mit6s184/lec01/#what-is-generation","title":"What is Generation","text":"<p>\u200b\u6211\u4eec\u200b\u5c06\u200b\u60f3\u8981\u200b\u751f\u6210\u200b\u7684\u200b\u5bf9\u8c61\u200b\u8868\u793a\u200b\u4e3a\u200b\u5411\u91cf\u200b\uff1a \\(z = \\R^d\\).</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u5982\u4f55\u200b\u5224\u65ad\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u4e0d\u662f\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7684\u200b\u5462\u200b\uff0c\u200b\u6bd4\u5982\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b prompt - \"A picture of a dog\"\uff0c\u200b\u6a21\u578b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200b\u56db\u4e2a\u200b\u7ed3\u679c\u200b\uff1a</p> <p>\u200b\u6211\u4eec\u200b\u4eba\u7c7b\u200b\u6709\u200b\u8ba4\u77e5\u200b\u7684\u200b\u5148\u9a8c\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u8fd9\u4e9b\u200b\u751f\u6210\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u5f88\u5feb\u200b\u5730\u200b\u5224\u65ad\u200b\u51fa\u200b\u5b83\u4eec\u200b\u7684\u200b\u5408\u7406\u6027\u200b\u548c\u200b\u76f8\u5173\u6027\u200b\u3002\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6a21\u578b\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5e76\u200b\u6ca1\u6709\u200b\u8fd9\u6837\u200b\u7684\u200b\u5148\u9a8c\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u9700\u8981\u200bformalize\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4ece\u800c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5b66\u4f1a\u200b\u5224\u65ad\u200b\u751f\u6210\u200b\u7ed3\u679c\u200b\u7684\u200b\u5408\u7406\u6027\u200b\u3002 \u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u505a\u6cd5\u200b\u5c31\u662f\u200b\u7528\u200b\u6982\u7387\u200b(Probability)\u200b\u6765\u200b\u8868\u793a\u200b\u7ed3\u679c\u200b\u7684\u200b\u597d\u574f\u200b\uff0c\u200b\u6982\u7387\u200b\u8d8a\u9ad8\u200b\u7684\u200b\u56fe\u50cf\u200b\u8868\u660e\u200b\u751f\u6210\u200b\u8d8a\u200b\u5408\u7406\u200b\uff0c\u200b\u8d28\u91cf\u200b\u8d8a\u200b\u597d\u200b\u3002</p> <p>How good an image is ~= How likely it is under the data distribution</p> <p>\u200b\u751f\u6210\u200b(Genetation)\u200b\u53ef\u4ee5\u200b\u770b\u4f5c\u200b\u662f\u4ece\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5206\u5e03\u200b(Data Distribution) \\(p_\\mathrm{data}\\) \u200b\u4e2d\u200b\u91c7\u6837\u200b(Sampling) \\(z\\)\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u8bad\u7ec3\u200b\u7528\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u7531\u200b\u6765\u81ea\u200b\u6570\u636e\u5206\u5e03\u200b\u7684\u200b\u6709\u9650\u200b\u6570\u91cf\u200b\u7684\u200b\u6837\u672c\u200b\u7ec4\u6210\u200b\uff1a\\(\\{z_1, z_2, \\ldots, z_N\\} \\sim p_\\mathrm{data}\\).</p> <p>\u200b\u6761\u4ef6\u200b\u751f\u6210\u200b(Conditional Generation)\u200b\u4f7f\u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u57fa\u4e8e\u200b\u63d0\u793a\u200b\u8fdb\u884c\u200b\u6761\u4ef6\u200b\u5316\u751f\u6210\u200b\uff0c\u200b\u5728\u200b\u539f\u5148\u200b\u7684\u200b\u6570\u636e\u5206\u5e03\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6761\u4ef6\u200b \\(y\\) \u200b\u53d8\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6761\u4ef6\u200b\u6570\u636e\u5206\u5e03\u200b\uff0c \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u8868\u793a\u200b\u4e3a\u200b \\(z \\sim p_\\mathrm{data}(\\cdot|y)\\).</p> <p>\u200b\u751f\u6210\u200b\u6a21\u578b\u200b(Generative Model)\u200b\u5c06\u200b\u6765\u81ea\u200b\u521d\u59cb\u200b\u5206\u5e03\u200b \\(p_\\mathrm{init}\\)\uff08\u200b\u5982\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff09\u200b\u7684\u200b\u6837\u672c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6570\u636e\u5206\u5e03\u200b \\(p_\\mathrm{data}\\) \u200b\u4e2d\u200b\u7684\u200b\u6837\u672c\u200b\uff1a</p>"},{"location":"course/cs/mit6s184/lec01/#flow-and-diffusion-models","title":"Flow and Diffusion Models","text":"<p>Our Target</p> <p>\u200b\u5728\u200b Flow Model \u200b\u548c\u200b Diffusion Model \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u662f\u200b\u901a\u8fc7\u200b\u8bad\u7ec3\u200b\u7f51\u7edc\u200b\u76f4\u63a5\u200b\u5efa\u6a21\u200b\u6570\u636e\u5206\u5e03\u200b \\(p_\\mathrm{data}\\) \u200b\u672c\u8eab\u200b\uff0c\u200b\u800c\u662f\u200b\u901a\u8fc7\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b \u201c\u200b\u5c06\u200b\u566a\u58f0\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6570\u636e\u200b\u201d \u200b\u7684\u200b\u6a21\u578b\u200b\u6765\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002 \u200b\u8fd9\u662f\u200b\u6211\u4eec\u200b\u7684\u200b\u76ee\u6807\u200b\uff1a\u200b\u6211\u4eec\u200b\u9009\u62e9\u200b\u5efa\u6a21\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u573a\u200b(Vector Field)\uff0c\u200b\u8fd9\u4e2a\u200b\u5411\u91cf\u573a\u200b\u80fd\u591f\u200b\u5c06\u200b\u6211\u4eec\u200b\u4ece\u200b\u53ef\u200b\u91c7\u6837\u200b\u7684\u200b\u7b80\u5355\u200b\u566a\u58f0\u200b\u5206\u5e03\u200b\uff08\u200b\u5982\u200b\u5404\u5411\u540c\u6027\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff09\\(p_\\mathrm{init}\\) \u200b\u4e2d\u200b\u62bd\u53d6\u200b\u7684\u200b\u6837\u672c\u200b \u201c\u200b\u9a71\u52a8\u200b(drive)\u201d \u200b\u81f3\u200b\u76ee\u6807\u200b\u6570\u636e\u5206\u5e03\u200b \\(p_\\mathrm{data}\\).</p> <p>\u200b\u540e\u9762\u200b\u4f1a\u200b\u4ecb\u7ecd\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b \u200b\u6a21\u62df\u200b(simulation) \u200b\u9002\u5f53\u200b\u6784\u5efa\u200b\u7684\u200b\u5fae\u5206\u65b9\u7a0b\u200b\uff0c\u200b\u8fbe\u5230\u200b\u9a71\u52a8\u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b transformation\uff0c \u200b\u8fd9\u200b\u5c31\u662f\u200b Flow Matching \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u3002</p>"},{"location":"course/cs/mit6s184/lec01/#flow-models","title":"Flow Models","text":"<p>\u200b\u9996\u5148\u200b\u4ecb\u7ecd\u200b\u4e00\u4e9b\u200b\u6982\u5ff5\u200b\uff1a</p> <ul> <li>\u200b\u8f68\u8ff9\u200b(Trajectory)\uff1a\u200b\u63cf\u8ff0\u200b\u4e00\u4e2a\u70b9\u200b \\(x\\) \u200b\u968f\u7740\u200b\u65f6\u95f4\u200b \\(t\\) \u200b\u5728\u200b\u7a7a\u95f4\u200b \\(\\R^d\\) \u200b\u4e2d\u200b\u7684\u200b\u8fd0\u52a8\u200b \\(t \\rightarrow X_t\\), \u200b\u8f68\u8ff9\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u5411\u91cf\u573a\u200b(Vector Field)\uff1a\u200b\u63cf\u8ff0\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u65f6\u95f4\u200b \\(t\\) \u200b\u548c\u200b\u7a7a\u95f4\u200b\u70b9\u200b \\(x\\) \u200b\u65f6\u200b\u7684\u200b\u901f\u5ea6\u200b\uff0c\\(\\left(x, t\\right) \\rightarrow u_{t}(x)\\).</li> <li> <p>Ordinary Differential Equation (ODE):</p> <ul> <li>ODE \u200b\u7684\u200b\u542b\u4e49\u200b\uff1a\u200b\u70b9\u200b \\(X_t\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u53d8\u5316\u200b\u7b49\u4e8e\u200b\u6d41\u573a\u200b\u5728\u200b\u70b9\u200b \\(X_t\\) \u200b\u5904\u200b\u7684\u200b\u901f\u5ea6\u200b\u503c\u200b</li> <li>\u200b\u5f62\u5f0f\u5316\u200b\u5730\u8bf4\u200b\uff0cODE \u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</li> </ul> \\[ \\frac{\\mathrm{d}}{\\mathrm{d}t}X_t = u_{t}(X_t) \\text{ with initial condition } X_0 = x_0 \\] </li> <li> <p>\u200b\u6d41\u200b(Flow): \u200b\u8868\u793a\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u521d\u59cb\u6761\u4ef6\u200b \\(X_0 = x_0\\) \u200b\u4e0b\u200b\uff0c\u200b\u4e0a\u8ff0\u200b ODE \u200b\u6240\u6709\u200b\u89e3\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\\(\\left(X_0, t\\right) \\rightarrow \\phi_t(x_0)\\).</p> </li> </ul> <p>\u200b\u5b83\u4eec\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u662f\u200b\uff1a</p> <pre><code>graph LR\n    VF[Vector Fields] --&gt;|defines| ODEs[Ordinary Differential Equations]\n    ODEs --&gt;|has solution| T[Trajectory]\n    T --&gt;|is one path in| F[Flow]\n    VF --&gt;|induces| F</code></pre> <p>\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u4f8b\u5b50\u200b\u6765\u200b\u7406\u89e3\u200b Flow model:</p> <p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u521d\u59cb\u6761\u4ef6\u200b \\(x_0\\) \u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4e0d\u540c\u200b\u7684\u200b\u8f68\u8ff9\u200b \\(X_t\\)\uff0c\u200b\u800c\u200b\u8fd9\u4e9b\u200b\u8f68\u8ff9\u200b\u6784\u6210\u200b\u7684\u200b\u96c6\u5408\u200b\u5c31\u662f\u200b\u6d41\u200b \\(F\\).</p> <p>\u200b\u5f53\u200b ODE \u200b\u6ca1\u6709\u200b closed form \u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u6570\u503c\u200b\u65b9\u6cd5\u200b\u6765\u200b\u8fd1\u4f3c\u200b\u6c42\u89e3\u200b\uff0c\u200b\u6bd4\u5982\u200b \u200b\u6b27\u62c9\u200b\u6cd5\u200b(Euler Method)\uff1a</p>"},{"location":"course/cs/mit6s184/lec01/#diffusion-models","title":"Diffusion Models","text":"<p>\u200b\u5728\u200b Diffusion model \u200b\u4e2d\u200b\uff0c\u200b\u540c\u6837\u200b\u4e5f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u6982\u5ff5\u200b\uff1a</p> <ul> <li>\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b(Stochastic Process)\uff1a\u200b\u968f\u673a\u200b\u7684\u200b\u8f68\u8ff9\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u70b9\u200b \\(X_t\\) \u200b\u968f\u200b\u65f6\u95f4\u200b\u968f\u673a\u200b\u53d8\u5316\u200b\u3002</li> <li>\u200b\u5411\u91cf\u573a\u200b(Vector Field)\uff1a\u200b\u548c\u200b Flow model \u200b\u4e00\u6837\u200b\u3002</li> <li>\u200b\u6269\u6563\u7cfb\u6570\u200b(Diffusion Coefficient)\uff1a\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6269\u6563\u200b\u7a0b\u5ea6\u200b\uff0c\\(t \\sim \\sigma_{t}, \\  \\sigma_{t} \\geqslant 0\\).</li> <li> <p>Stochastic Differential Equation (SDE):</p> <ul> <li>\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u70b9\u200b \\(X_t\\) \u200b\u968f\u200b\u65f6\u95f4\u200b \\(t\\) \u200b\u7684\u200b\u968f\u673a\u200b\u8fd0\u52a8\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b\u65f6\u523b\u200b\u7684\u200b\u8fd0\u52a8\u200b\u901f\u5ea6\u200b\u7531\u200b\u5411\u91cf\u573a\u200b \\(u_t(x)\\) \u200b\u548c\u200b\u6269\u6563\u7cfb\u6570\u200b \\(\\sigma_{t}\\) \u200b\u51b3\u5b9a\u200b\u3002</li> <li>SDE \u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1aODE + \u200b\u968f\u673a\u566a\u58f0\u200b(Stochastic Noise)\uff0c\u200b\u5f53\u200b \\(\\sigma_{t} = 0\\) \u200b\u65f6\u200b\uff0cSDE \u200b\u5c31\u662f\u200b ODE\uff0cdiffusion model \u200b\u53d8\u6210\u200b\u4e86\u200b flow model.</li> </ul> \\[ \\mathrm{d} X_t = u_{t}(X_t)\\mathrm{d} t + \\sigma_{t}\\mathrm{d} W_t \\text{ with initial condition } X_0 = x_0 \\] </li> <li> <p>\u200b\u5e03\u6717\u8fd0\u52a8\u200b(Brownian Motion)\uff1a\u200b\u539f\u200b\u6307\u200b\u60ac\u6d6e\u200b\u5728\u200b\u4ecb\u8d28\u200b\u4e2d\u200b\u7684\u200b\u7c92\u5b50\u200b\u7684\u200b\u968f\u673a\u200b\u8fd0\u52a8\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6307\u200b\u968f\u673a\u566a\u58f0\u200b \\(W_t \\in \\R^d\\)\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5177\u6709\u200b\u4ee5\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ul> <li>\\(W_0 = 0\\)</li> <li>\\(W_t\\) \u200b\u662f\u200b\u8fde\u7eed\u200b\u7684\u200b</li> <li>\\(W_t\\) \u200b\u7684\u200b\u589e\u91cf\u200b\u662f\u200b\u72ec\u7acb\u200b\u7684\u200b(Independent Increments)\uff1a<ul> <li>\\(W_{t+s} - W_s\\) \u200b\u548c\u200b \\(W_s\\) \u200b\u72ec\u7acb\u200b</li> </ul> </li> <li>\\(W_t\\) \u200b\u7684\u200b\u589e\u91cf\u200b\u670d\u4ece\u200b\u6b63\u6001\u5206\u5e03\u200b(Gaussian Increments)\uff1a<ul> <li>\\(W_{t+s} - W_s \\sim \\mathcal{N}(0, t)\\)</li> </ul> </li> <li>\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u53c8\u200b\u53eb\u505a\u200b Wiener \u200b\u8fc7\u7a0b\u200b(Wiener Process).</li> </ul> </li> </ul> <p>Why use SDEs instead of ODEs?</p> <p>\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u771f\u5b9e\u4e16\u754c\u200b\u5145\u6ee1\u200b\u4e86\u200b\u968f\u673a\u6027\u200b\uff0c\u200b\u800c\u200b SDE \u200b\u662f\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5177\u6709\u200b\u66f4\u5f3a\u200b\u7684\u200b\u8868\u8fbe\u80fd\u529b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6355\u6349\u5230\u200b\u6570\u636e\u5206\u5e03\u200b\u4e2d\u200b\u7684\u200b\u968f\u673a\u6027\u200b\u548c\u200b\u4e0d\u786e\u5b9a\u6027\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b SDE \u200b\u4ece\u200b\u5fae\u5206\u5f62\u5f0f\u200b\u6539\u5199\u200b\u6210\u200b\uff1a</p> \\[ X_{t+h}=X_t+\\underbrace{hu_t(X_t)}_{\\text{deterministic}}+\\sigma_t\\underbrace{(W_{t+h}-W_t)}_{\\text{stochastic}}+\\underbrace{hR_t(h)}_{\\mathrm{error~term}} \\] <ul> <li>\u200b\u5176\u4e2d\u200b\u7684\u200b \\(R_t(h)\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e00\u9636\u200b\u5c0f\u91cf\u200b\uff08\u200b\u5c0f\u4e8e\u200b \\(h\\) \u200b\u7684\u200b\u9ad8\u9636\u200b\u9879\u200b\uff09\uff0c\\(\\lim_{h \\to 0} R_t(h) = 0\\).</li> <li>\u200b\u5229\u7528\u200b\u5e03\u6717\u8fd0\u52a8\u200b\u7684\u200b\u72ec\u7acb\u200b\u589e\u91cf\u200b\u6027\u8d28\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b \\(W_{t+h} - W_t\\) \u200b\u89c6\u4e3a\u200b\u4e00\u4e2a\u200b\u72ec\u7acb\u200b\u968f\u673a\u53d8\u91cf\u200b \\(\\epsilon_t \\sim \\mathcal{N}(0, hI_{d})\\)\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u7701\u7565\u200b\u8bef\u5dee\u200b\u9879\u540e\u200b\uff0c\u200b\u4e0a\u9762\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u53ef\u4ee5\u200b\u5199\u6210\u200b \\(X_{t+h} = X_t + h u_{t}(X_t) + \\sigma_{t} \\sqrt{h} \\epsilon_t\\)\uff0c\u200b\u8fd9\u200b\u5c31\u662f\u200b\u5e38\u89c1\u200b\u7684\u200b diffusion model \u200b\u7684\u200b\u5f62\u5f0f\u200b\u3002</li> </ul> <p>Example: Ornstein-Uhlenbeck(OU) Process</p> <ul> <li>\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u7ecf\u5178\u200b\u7684\u200b SDE\uff0c\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\uff1a</li> </ul> \\[ \\mathrm{d} X_t = - \\theta X_t \\mathrm{d}t + \\sigma \\mathrm{d} W_t \\] <ul> <li>\u200b\u7ebf\u6027\u200b\u504f\u79fb\u200b\u7cfb\u6570\u200b\uff1a\\(u_t(x) = -\\theta x\\).</li> <li>\u200b\u7ebf\u6027\u200b\u6269\u6563\u7cfb\u6570\u200b\uff1a\\(\\sigma_t = \\sigma\\).</li> <li>\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u5728\u200b \\(t \\to \\infty\\) \u200b\u65f6\u200b\u6536\u655b\u200b\u5230\u200b\u4e00\u4e2a\u200b\u9ad8\u65af\u5206\u5e03\u200b \\(\\mathcal{N}(0, \\sigma^2)\\).</li> </ul> <p>\u200b\u548c\u200b Flow model \u200b\u4e00\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u5229\u7528\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u6765\u200b\u5b66\u4e60\u200b\u5411\u91cf\u573a\u200b \\(u_{t}(X_t)\\)\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b SDE \u200b\u6765\u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b\uff1a</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b diffusion model \u200b\u505a\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u521d\u59cb\u200b\u53d8\u91cf\u200b\u5f00\u59cb\u200b\uff0c\u200b\u9010\u6b65\u200b\u5229\u7528\u200b SDE \u200b\u91c7\u6837\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b\u7b26\u5408\u200b\u76ee\u6807\u200b\u5206\u5e03\u200b\u7684\u200b\u6837\u672c\u200b\uff1a</p> <ol> <li>Random init: \\(X_0 \\sim p_\\mathrm{init}\\)</li> <li>Vector field (by a neural network): \\(u^{\\theta}_{t}(x)\\)</li> <li>Diffusion coefficient: \\(\\sigma_{t}\\)</li> <li>SDE: \\(\\mathrm{d} X_t = u^{\\theta}_{t}(X_t)\\mathrm{d}t + \\sigma_{t}\\mathrm{d} W_t\\)</li> <li>Goal: \\(X_T \\sim p_\\mathrm{data}\\)</li> </ol>"},{"location":"course/cs/mit6s184/lec01/#qa","title":"Q&amp;A","text":"Why we choose Brownian motion as the stochastic process? <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5176\u4ed6\u200b\u7684\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6bd4\u5982\u200b Levy \u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4f46\u662f\u200b Brownian motion \u200b\u662f\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5177\u6709\u200b\u4e00\u4e9b\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u6bd4\u5982\u200b\u589e\u91cf\u200b\u7684\u200b\u72ec\u7acb\u6027\u200b\u548c\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff0c\u200b\u5bb9\u6613\u200b\u5b9e\u73b0\u200b\u548c\u200b\u8ba1\u7b97\u200b\u3002</p> Why flow matching might work better than other techniques(like GANs)? <p>Google AI Overview: Flow matching can potentially be better than techniques like GANs due to its ability to provide exact likelihood estimates and a more stable training process, particularly when using diffusion paths. While GANs excel in sample quality, especially for image-based data, normalizing flows offer a clearer path to density estimation and variational inference. Flow matching also allows for more efficient training and sampling using non-diffusion paths like Optimal Transport.</p>"},{"location":"course/cs/mit6s184/lec02/","title":"Lec02-\u200b\u6784\u5efa\u200b\u8bad\u7ec3\u200b\u76ee\u6807","text":"<p> \u200b\u7ea6\u200b 1765 \u200b\u4e2a\u200b\u5b57\u200b  6 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 6 \u200b\u5206\u949f\u200b</p> <p>Overview</p> <ul> <li>Video:  Lecture 02</li> <li>Slide:  Lecture 02</li> <li>References:<ul> <li> Lecture notes</li> <li> Flow Matching and Diffusion Deep Dive</li> <li> Visualization Tool - DiffusionLab</li> </ul> </li> </ul>"},{"location":"course/cs/mit6s184/lec02/#recap","title":"Recap","text":""},{"location":"course/cs/mit6s184/lec02/#training-target","title":"Training Target","text":"<p>\u200b\u6784\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8bad\u7ec3\u200b\u5b83\u200b\u4ece\u800c\u200b\u4f7f\u200b\u5176\u200b\u80fd\u591f\u200b\u751f\u6210\u200b\u5408\u7406\u200b\u7684\u200b\u6837\u672c\u200b\u3002 \u200b\u5728\u200b\u4e0a\u8282\u200b\u8bfe\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u5230\u200b flow/diffusion model \u200b\u4e2d\u200b\u53ea\u6709\u200b Vector Fields \\(u_t^{\\theta}(X_t)\\) \u200b\u662f\u200b\u6709\u200b\u5b66\u4e60\u200b\u53c2\u6570\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u7684\u200b\u8bad\u7ec3\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u4f18\u5316\u200b\u8fd9\u4e2a\u200b\u7f51\u7edc\u200b\u7684\u200b\u53c2\u6570\u200b\u3002 \u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b(Training Target)\uff0c\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u505a\u6cd5\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b(Mean Squared Error, MSE)\uff1a</p> \\[\\boxed{L(\\theta)=\\|u_t^\\theta(x)-u_t^{\\mathrm{target}}(x)\\|^2}\\] <p>\u200b\u4f46\u662f\u200b\u8fd9\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u771f\u5b9e\u200b\u77e2\u91cf\u200b\u573a\u200b \\(u_t^{\\mathrm{target}}(x)\\) \u200b\u662f\u200b\u672a\u77e5\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u91c7\u6837\u200b\u5f97\u5230\u200b\u4e00\u4e9b\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b \\(x \\sim p_{\\mathrm{data}}\\)\uff0c \u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u8fd9\u4e9b\u200b\u6837\u672c\u200b\u6765\u200b formulate \\(u_t^{\\mathrm{target}}(x)\\)\uff0c\u200b\u8fd9\u200b\u4e5f\u200b\u662f\u200b\u8fd9\u200b\u4e00\u8282\u8bfe\u200b\u7684\u200b\u91cd\u70b9\u200b: How to formulate \\(u_t^{\\mathrm{target}}(x)\\)?</p>"},{"location":"course/cs/mit6s184/lec02/#probability-path","title":"Probability Path","text":"<p>\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b\u5728\u200b \\(t = 0\\) \u200b\u548c\u200b \\(t = 1\\) \u200b\u65f6\u200b\u7684\u200b\u6570\u636e\u5206\u5e03\u200b\u662f\u200b\u4ec0\u4e48\u6837\u200b\u7684\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u4e24\u8005\u4e4b\u95f4\u200b\u7684\u200b\u65f6\u523b\u200b\u5462\u200b\uff1f\u200b\u4e3a\u4e86\u200b\u56de\u7b54\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b\u673a\u5236\u200b\u6765\u200b\u63cf\u8ff0\u200b \\(t \\in [0, 1]\\) \u200b\u4e2d\u200b\u6240\u6709\u200b\u65f6\u95f4\u200b \\(t\\) \u200b\u7684\u200b\u63d2\u503c\u200b\u5206\u5e03\u200b\u3002 \u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u4e3a\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u6570\u5b66\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4ee5\u200b\u63cf\u8ff0\u200b\u5728\u200b\u4ece\u200b\u566a\u58f0\u200b\u5230\u200b\u6570\u636e\u200b\u7684\u200b\u8f6c\u6362\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u65f6\u95f4\u200b\u70b9\u200b \\(t\\) \u200b\u4e0a\u200b\u9884\u671f\u200b\u89c2\u5bdf\u200b\u5230\u200b\u7684\u200b\u63d2\u503c\u200b\u5206\u5e03\u200b\u3002</p> <p>Conditional vs Marginal</p> <ul> <li>Conditional: Per single data point\uff0c\u200b\u8003\u8651\u200b\u5355\u70b9\u200b</li> <li>Marginal: Across distribution of data points\uff0c\u200b\u8ba9\u200b\u5355\u70b9\u200b\u6570\u636e\u200b\u968f\u673a\u5316\u200b\uff0c\u200b\u8003\u8651\u200b\u5206\u5e03\u200b\uff0c\u200b\u662f\u200b\u6211\u4eec\u200b\u6700\u540e\u200b\u60f3\u8981\u200b\u7684\u200b</li> </ul> <p>\u200b\u6982\u7387\u200b\u8def\u5f84\u200b(Probability Path, PP): \u200b\u4ece\u200b\u566a\u58f0\u200b\u5206\u5e03\u200b\u5230\u200b\u6837\u672c\u200b\u6570\u636e\u5206\u5e03\u200b\u7684\u200b\u63d2\u503c\u200b\u5206\u5e03\u200b\u8def\u5f84\u200b</p> <ul> <li> <p>\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b(Conditional Probability Path, CPP): \\(p_t(\\cdot | z)\\)</p> <ul> <li>interpolation between \\(p_{init}\\) and a data point \\(z\\)</li> <li>\\(p_t(\\cdot | z)\\) \u200b\u662f\u200b \\(\\R^d\\) \u200b\u4e0a\u200b\u7684\u200b\u4e00\u7ec4\u200b\u5206\u5e03\u200b</li> <li>\\(p_0(\\cdot | z) = p_{\\mathrm{init}}, \\quad p_1(\\cdot | z) = \\delta_z\\)\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b \\(\\delta_z\\) \u200b\u662f\u200b Dirac delta function.</li> </ul> </li> <li> <p>\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b(Marginal Probability Pathm, MPP): \\(p_t(x)\\)</p> <ul> <li>interpolation between \\(p_{init}\\) and \\(p_{data}\\)</li> <li>\\(z \\sim p_{data}\\)\uff0c\u200b\u4ece\u200b\u5355\u4e2a\u200b\u6837\u672c\u200b\u53d8\u6210\u200b\u4e86\u200b\u6837\u672c\u5206\u5e03\u200b</li> <li>\\(p_t(x) = \\int p_t(x | z) p_{data}(z) dz\\)</li> <li>\\(p_0(x) = p_{init}, \\quad p_1(x) = p_{data}\\)</li> </ul> </li> </ul> <p>Example: Gaussian Probability Path</p> <p>\\(p_t(\\cdot | z) = \\mathcal{N}(\\alpha_t z, \\beta_t^2 I_d), \\quad \\alpha_t = t, \\beta_t = 1-t\\)</p> <p>\\(\\alpha_t\\) \u200b\u548c\u200b \\(\\beta_t\\) \u200b\u662f\u200b noise scheduler \u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u566a\u58f0\u200b\u7684\u200b\u5f3a\u5ea6\u200b\u548c\u200b\u6570\u636e\u5206\u5e03\u200b\u7684\u200b\u5f62\u72b6\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u53ef\u89c6\u5316\u200b\u7406\u89e3\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\uff1a</p> <ul> <li>\u200b\u7ea2\u8272\u200b\u7684\u200b\u8303\u56f4\u200b\u8868\u793a\u200b\u521d\u59cb\u200b\u5206\u5e03\u200b\uff0c\u200b\u84dd\u8272\u200b\u7684\u200b\u8303\u56f4\u200b\u8868\u793a\u200b\u6570\u636e\u5206\u5e03\u200b</li> <li>\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u6700\u540e\u200b\u4f1a\u200b\u6536\u655b\u200b\u5230\u200b\u4e00\u4e2a\u70b9\u200b\u4e0a\u200b\uff0c\u200b\u800c\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u5219\u200b\u4f1a\u200b\u6536\u655b\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5206\u5e03\u200b\u4e0a\u200b</li> </ul> <p>Marginalization trick</p> <p>\u200b\u6bcf\u200b\u4e00\u4e2a\u200b Conditional Object \u200b\u90fd\u200b\u53ef\u4ee5\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u4e00\u4e2a\u200b Marginal Object\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b Object \u200b\u53ef\u4ee5\u200b\u662f\u200b PP \u200b\u6216\u200b VF\uff0c\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u53eb\u505a\u200b \u200b\u8fb9\u9645\u200b\u5316\u200b(Marginalization)\uff0c\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u7684\u200b \\(z \\sim p_\\mathrm{data}\\).</p>"},{"location":"course/cs/mit6s184/lec02/#conditional-and-marginal-vector-fields","title":"Conditional and Marginal Vector Fields","text":"<p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u638c\u63e1\u200b\u4e86\u200b\u63cf\u8ff0\u200b\u4ece\u200b\u566a\u58f0\u200b\u5230\u200b\u6570\u636e\u200b\u8f6c\u5316\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u5206\u5e03\u200b\u72b6\u6001\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u573a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63cf\u8ff0\u200b \\(t\\) \u200b\u65f6\u523b\u200b\u4e0e\u200b \\(t + \\epsilon\\) \u200b\u65f6\u523b\u200b\u4e4b\u95f4\u200b\u5206\u5e03\u200b\u7684\u200b\u589e\u91cf\u200b\uff0c\u200b\u4ece\u800c\u200b\u9010\u6b65\u200b\u9a71\u52a8\u200b\u5206\u5e03\u200b\u4ece\u200b \\(p_\\mathrm{init}\\) \u200b\u5230\u200b \\(p_\\mathrm{data}\\). \u200b\u8fd9\u4e2a\u200b\u5411\u91cf\u573a\u200b\u5c06\u200b\u662f\u200b\u6211\u4eec\u200b\u7528\u6765\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u6700\u7ec8\u76ee\u6807\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5148\u200b\u8003\u8651\u200b\u66f4\u52a0\u200b\u7b80\u5355\u200b\u7684\u200b\u6761\u4ef6\u200b\u5411\u91cf\u573a\u200b(Conditional Vector Field, CVF)\uff0c\u200b\u5982\u679c\u200b\u5411\u91cf\u573a\u200b \\(u_{t}^{\\text{target}}(x | z)\\) \u200b\u6ee1\u8db3\u200b\uff1a</p> <ul> <li>\\(X_0 \\sim p_{init}\\)</li> <li>\\(\\frac{\\mathrm{d}}{\\mathrm{d}t}X_t = u_{t}^{target}(X_t | z), z \\sim p_\\mathrm{data}\\)</li> </ul> <p>\u200b\u90a3\u4e48\u200b\uff0c\\(X_t \\sim p_{t}(\\cdot | z)\\)\uff0c\u200b\u5373\u200b\u6bcf\u4e2a\u200b\u65f6\u523b\u200b\u7684\u200b\u5206\u5e03\u200b\u90fd\u200b\u7b26\u5408\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u6761\u4ef6\u200b\u5411\u91cf\u573a\u200b \\(u_{t}^{\\text{target}}(x | z)\\) \u200b\u548c\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b \\(p_t(x)\\)\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8fb9\u9645\u200b\u5411\u91cf\u573a\u200b(Marginal Vector Field, MVF)\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b:</p> \\[ u_{t}^{\\text{target}}(x) = \\int u_t^{\\mathrm{target}}(x|z)\\frac{p_t(x|z)p_{\\mathrm{data}}(z)}{p_t(x)}\\mathrm{d}z \\] <p>\u200b\u8fd9\u91cc\u200b\u7528\u5230\u200b\u4e86\u200b\u8d1d\u53f6\u65af\u200b\u516c\u5f0f\u200b\uff0c\\(p_t(x|z)\\) \u200b\u662f\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\uff0c\\(p_{\\mathrm{data}}(z)\\) \u200b\u662f\u200b\u771f\u5b9e\u200b\u6570\u636e\u5206\u5e03\u200b\uff0c\\(p_t(x)\\) \u200b\u662f\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u3002</p> <p>\u200b\u7528\u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\u5411\u91cf\u573a\u200b \\(u_{t}^{\\text{target}}(x | z)\\)\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u9a71\u52a8\u200b ODE\uff1a</p> \\[ X_0 \\sim p_{init}, \\quad \\frac{\\mathrm{d}}{\\mathrm{d}t} X_t = u_{t}^{\\text{target}}(X_t) \\] <p>\u200b\u6700\u540e\u200b\u6cbf\u7740\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b \\(p_t(x)\\) \u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b\uff0c\u200b\u5f97\u5230\u200b \\(X_1 \\sim p_1(x) = p_{data}\\).</p>"},{"location":"course/cs/mit6s184/lec02/#continuity-equation","title":"Continuity Equation","text":"<p>\u200b\u8fde\u7eed\u6027\u200b\u65b9\u7a0b\u200b(Continuity Equation): \u200b\u63cf\u8ff0\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b \\(p_t(x)\\) \u200b\u968f\u200b\u65f6\u95f4\u200b\u6f14\u5316\u200b\u7684\u200b\u504f\u200b\u5fae\u5206\u65b9\u7a0b\u200b</p> \\[ \\frac{\\partial}{\\partial t} p_t(x) = - div(p_t(x) u_t(x)) \\] <p>\u200b\u5de6\u8fb9\u200b\u8868\u793a\u200b \\(p_t(x)\\) \u200b\u968f\u200b\u65f6\u95f4\u200b\u7684\u200b\u53d8\u5316\u7387\u200b\uff0c\u200b\u53f3\u8fb9\u200b\u8868\u793a\u200b\u6982\u7387\u200b\u6d41\u200b \\(p_t(x) \\cdot u_t(x)\\) \u200b\u7684\u200b\u6563\u5ea6\u200b(divergence)\u3002</p> <p>\u200b\u6563\u5ea6\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff1a \\(div(v) = \\nabla \\cdot v = \\displaystyle\\sum_{i=1}^d \\frac{\\partial v_i}{\\partial x_i}\\)</p> <p>Continuity Equation</p> <p>\u200b\u8fd9\u4e2a\u200b\u516c\u5f0f\u200b\u5341\u5206\u200b\u91cd\u8981\u200b\uff0c\u200b\u662f\u200b\u8fde\u63a5\u200b\u6761\u4ef6\u200b\u5411\u91cf\u573a\u200b\u548c\u200b\u8fb9\u9645\u200b\u5411\u91cf\u573a\u200b\u7684\u200b\u6865\u6881\u200b\u3002\u200b\u53ea\u8981\u200b\u6761\u4ef6\u200b\u5411\u91cf\u573a\u200b\\(u_t(x|z)\\)\u200b\u80fd\u200b\u751f\u6210\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\\(p_t(x|z)\\) (\u200b\u6ee1\u8db3\u200b\u8fde\u7eed\u6027\u200b\u6761\u4ef6\u200b), \u200b\u5219\u200b\u4e0a\u8ff0\u200b\u8fb9\u9645\u200b\u5411\u91cf\u573a\u200b\\(u_t(x)\\)\u200b\u80fd\u591f\u200b\u751f\u6210\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8fb9\u9645\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\\(p_t(x)\\).</p> <ul> <li>\u200b\u7269\u7406\u200b\u610f\u4e49\u200b\uff1a\u200b\u8fde\u7eed\u6027\u200b\u65b9\u7a0b\u200b\u63cf\u8ff0\u200b\u4e86\u200b\"\u200b\u6982\u7387\u200b\u8d28\u91cf\u5b88\u6052\u200b\"\uff0c\u200b\u5373\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u7684\u200b\u5c40\u90e8\u200b\u53d8\u5316\u7387\u200b\u7b49\u4e8e\u200b\u6d41\u5165\u200b/\u200b\u6d41\u51fa\u200b\u8be5\u200b\u533a\u57df\u200b\u7684\u200b\u51c0\u200b\u6982\u7387\u200b\u6d41\u91cf\u200b\u3002\u200b\u5728\u200b Flow model \u200b\u4e2d\u200b\uff0c\u200b\u5b83\u200b\u786e\u4fdd\u200b\u4e86\u200b\u4ece\u200b \\(p_{init}\\) \u200b\u5230\u200b \\(p_{data}\\) \u200b\u7684\u200b\u6f14\u5316\u8fc7\u7a0b\u200b\u4e2d\u200b\u6982\u7387\u200b\u603b\u662f\u200b\u5b88\u6052\u200b\u7684\u200b\u3002</li> <li>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a\u200b\u60f3\u8c61\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u50cf\u200b\u6c34\u6d41\u200b\uff0c\u200b\u6563\u5ea6\u200b\u4e3a\u200b\u8d1f\u200b\u8868\u793a\u200b\u6c34\u6d41\u200b\u6c47\u805a\u200b\uff08\u200b\u6982\u7387\u200b\u589e\u52a0\u200b\uff09\uff0c\u200b\u6563\u5ea6\u200b\u4e3a\u200b\u6b63\u200b\u8868\u793a\u200b\u6c34\u6d41\u200b\u53d1\u6563\u200b\uff08\u200b\u6982\u7387\u200b\u51cf\u5c11\u200b\uff09\u3002\u200b\u800c\u200b\u5411\u91cf\u573a\u200b \\(u_t\\) \u200b\u51b3\u5b9a\u200b\u4e86\u200b\u6982\u7387\u200b\"\u200b\u6d41\u52a8\u200b\"\u200b\u7684\u200b\u65b9\u5411\u200b\u548c\u200b\u901f\u5ea6\u200b\u3002</li> </ul>"},{"location":"course/cs/mit6s184/lec02/#score-function","title":"Score Function","text":"<p>\u200b\u5728\u200b\u6211\u4eec\u200b formulate \u200b\u4e86\u200b\u60f3\u8981\u200b\u7684\u200b MVF \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u9700\u8981\u200b\u89e3\u51b3\u200b\u4e00\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u5c31\u662f\u200b MVF \u200b\u7684\u200b Tractability \u200b\u5e76\u200b\u4e0d\u597d\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u76f4\u89c2\u200b\u7684\u200b\u60f3\u6cd5\u200b\u5c31\u662f\u200b\u7528\u200b\u6570\u503c\u200b\u6cd5\u6765\u200b\u8fd1\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u6837\u200b\u610f\u5473\u7740\u200b\u6211\u4eec\u200b\u8981\u200b\u904d\u5386\u200b \\(p_\\mathrm{data}\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u8fd9\u200b\u663e\u7136\u200b\u662f\u200b\u4e0d\u200b\u53ef\u884c\u200b\u7684\u200b\u3002 \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b(Score Function)\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u5728\u200b\u4e0d\u200b\u9700\u8981\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u6837\u672c\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd1\u4f3c\u8ba1\u7b97\u200b MVF.</p> <p>\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b(Score Function): \u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\u68af\u5ea6\u200b(log-likelihood gradient)</p> <ul> <li>\u200b\u6761\u4ef6\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b: \\(s_t(x|z) = \\nabla_x \\log p_t(x|z)\\)</li> <li>\u200b\u8fb9\u9645\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b: \\(s_t(x) = \\nabla_x \\log p_t(x)\\)</li> </ul> <p>\u200b\u4ee3\u5165\u200b \\(p_t(x)\\)\uff0c\u200b\u5f97\u5230\u200b:</p> \\[ s_t(x) = \\nabla_x \\log p_t(x) = \\int \\nabla_x log p_t(x|z) \\frac{p_t(x|z)p_{\\mathrm{data}}(z)}{p_t(x)}\\mathrm{d}z \\] <p>Example: Gaussian Score Function</p> <p>\\(s_t(x) = \\nabla_x \\log p_t(x | z) = - \\frac{x - \\alpha_t z}{\\beta_t^2} = - \\frac{1}{\\beta_t^2} (x - \\alpha_t z)\\)</p>"},{"location":"course/cs/mit6s184/lec02/#fokker-planck-equation","title":"Fokker-Planck equation","text":"<p>\u200b\u798f\u514b\u200b-\u200b\u666e\u6717\u514b\u200b\u65b9\u7a0b\u200b(Fokker-Planck equation) \u200b\u662f\u200b\u63cf\u8ff0\u200b\u7c92\u5b50\u200b\u5728\u200b\u52bf\u80fd\u200b\u573a\u4e2d\u200b\u53d7\u5230\u200b\u968f\u673a\u200b\u529b\u540e\u200b\uff0c\u200b\u968f\u200b\u65f6\u95f4\u200b\u6f14\u5316\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6216\u200b\u901f\u5ea6\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u3002</p> \\[ \\large\\frac{\\partial}{\\partial t}p_t(x)=\\underbrace{-\\mathrm{div}(p_tu_t)(x)}_{\\text Continuity \\ equ.} + \\underbrace{\\frac{\\sigma_t^2}{2}\\Delta p_t(x)}_{\\text Heat \\ equ.} \\]"},{"location":"course/cs/mit6s184/lec02/#langevin-dynamics","title":"Langevin Dynamics","text":"<p>\u200b\u6717\u683c\u200b\u6587\u200b\u52a8\u529b\u5b66\u200b(Langevin Dynamics) \u200b\u662f\u200b\u798f\u514b\u200b-\u200b\u666e\u6717\u514b\u200b\u65b9\u7a0b\u200b\u5728\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u4e3a\u200b\u9759\u6b62\u200b\u65f6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7279\u4f8b\u200b\u3002</p> \\[ \\mathrm{d}X_t = \\frac{\\sigma_t^2}{2} \\nabla \\log p_t(X_t) \\mathrm{d}t + \\sigma_t \\mathrm{d}W_t \\]"},{"location":"course/cs/mit6s184/lec02/#summary","title":"Summary","text":"ConditionalMarginal"},{"location":"course/cs/mit6s184/lec03/","title":"Lec03-\u200b\u8bad\u7ec3\u200b\u751f\u6210\u200b\u6a21\u578b","text":"<p> \u200b\u7ea6\u200b 1312 \u200b\u4e2a\u200b\u5b57\u200b  8 \u200b\u884c\u200b\u4ee3\u7801\u200b  7 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 4 \u200b\u5206\u949f\u200b</p> <p>Overview</p> <ul> <li>Video:  Lecture 03</li> <li>Slide:  Lecture 03</li> <li>References:<ul> <li> Lecture notes</li> <li> Flow Matching and Diffusion Deep Dive</li> <li> Diffusion Meets Flow Matching: Two Sides of the Same Coin</li> </ul> </li> </ul>"},{"location":"course/cs/mit6s184/lec03/#recap","title":"Recap","text":"ConditionalMarginal"},{"location":"course/cs/mit6s184/lec03/#flow-matching","title":"Flow Matching","text":"<p>\u200b\u6211\u4eec\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b \\(u_t^{\\theta} \\approx u_t^{\\mathrm{target}}\\)\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u6765\u200b\u4f18\u5316\u200b\u8fd9\u4e2a\u200b\u7f51\u7edc\u200b\u7684\u200b\u53c2\u6570\u200b \\(\\theta\\).</p>"},{"location":"course/cs/mit6s184/lec03/#flow-matching-loss","title":"Flow Matching Loss","text":"<p>\u200b\u7ed9\u5b9a\u200b \\(t \\sim \\mathcal{U}(0, 1), x \\sim p_t(\\cdot | z), z \\sim p_{data}\\)</p> <ul> <li>\\(t\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5747\u5300\u5206\u5e03\u200b\u7684\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u8868\u793a\u200b\u65f6\u95f4\u200b</li> <li>\\(z\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4ece\u200b\u6570\u636e\u5206\u5e03\u200b\u4e2d\u200b\u91c7\u6837\u200b\u7684\u200b\u6837\u672c\u200b</li> <li>\\(x\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4ece\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u4e2d\u200b\u91c7\u6837\u200b\u7684\u200b\u6837\u672c\u200b</li> </ul> \\[\\boxed{L_{\\mathbf{FM}}(\\theta) = \\mathbb{E}_{t, x, z} \\left[ \\|u_t^{\\theta}(x) - u_t^{\\mathrm{target}}(x)\\|^2 \\right]}\\] <p>\u200b\u5728\u200b\u4e0a\u8282\u200b\u8bfe\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u63d0\u5230\u200b\u8fd9\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b intractable \u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u7684\u200b\u6837\u672c\u200b \\(z\\) \u200b\u4e5f\u200b\u662f\u200b\u4e0d\u200b\u73b0\u5b9e\u200b\u7684\u200b\uff0c\u200b\u4f46\u662f\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u5173\u952e\u200b\u7684\u200b insight: \\(L_{\\mathbf{FM}}\\) \u200b\u548c\u200b \\(L_{\\mathbf{CFM}}\\) \u200b\u53ea\u200b\u76f8\u5dee\u200b\u4e00\u4e2a\u200b\u5e38\u6570\u200b \\(C\\)\uff0c\u200b\u800c\u4e14\u200b\u8fd9\u4e2a\u200b\u5e38\u6570\u200b \\(C\\) \u200b\u4e0e\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b \\(\\theta\\) \u200b\u65e0\u5173\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u5c0f\u5316\u200b\u540e\u8005\u200b\u540c\u6837\u200b\u53ef\u4ee5\u200b\u8fbe\u5230\u200b\u8bad\u7ec3\u200b\u76ee\u7684\u200b\u3002 \u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u5728\u200b\u8bfe\u7a0b\u200b\u7b14\u8bb0\u200b Theorem 18 \u200b\u4e2d\u200b\u3002</p> <p>Conditional Flow Matching Loss:</p> \\[\\boxed{L_{\\mathbf{CFM}}(\\theta) = \\mathbb{E}_{t, x, z} \\left[ \\|u_t^{\\theta}(x) - u_t^{\\mathrm{target}}(x | z)\\|^2 \\right]}\\]"},{"location":"course/cs/mit6s184/lec03/#training-algorithm","title":"Training Algorithm","text":"Example: Gaussian CondOT Flow Matching <p>\u200b\u9ad8\u65af\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u548c\u200b\u5411\u91cf\u573a\u200b: \\(u_t^{\\mathrm{target}}(x | z) = \\left(\\dot{\\alpha_t} - \\frac{\\dot{\\beta_t}}{\\beta_t} \\right) z + \\frac{\\dot{\\beta_t}}{\\beta_t} x, x = \\alpha_t z + \\beta_t \\epsilon, \\epsilon \\sim \\mathcal{N}(0, I_d)\\)</p> <p>\u200b\u9ad8\u65af\u200b\u6761\u4ef6\u200b\u6d41\u200b\u5339\u914d\u200b\u635f\u5931\u200b\u51fd\u6570\u200b:</p> \\[ \\begin{gathered} \\mathcal{L}_{\\mathrm{CFM}}(\\theta)=\\mathbb{E}_{t\\sim\\mathrm{Unif},z\\sim p_{\\mathrm{data}},x\\sim\\mathcal{N}(\\alpha_tz,\\beta_t^2I_d)}[\\|u_t^\\theta(x)-\\left(\\dot{\\alpha}_t-\\frac{\\dot{\\beta}_t}{\\beta_t}\\alpha_t\\right)z-\\frac{\\dot{\\beta}_t}{\\beta_t}x\\|^2] \\\\ = \\mathbb{E}_{t\\sim\\mathrm{Unif},z\\sim p_\\mathrm{data},\\epsilon\\sim\\mathcal{N}(0,I_d)}[\\|u_t^\\theta(\\alpha_tz+\\beta_t\\epsilon)-(\\dot{\\alpha}_tz+\\dot{\\beta}_t\\epsilon)\\|^2] \\end{gathered} \\] <p>\u200b\u4f7f\u7528\u200b\u6807\u51c6\u200b\u566a\u58f0\u200b\u89c4\u5212\u200b\u5668\u200b: \\(\\alpha_t = t, \\beta_t = 1-t\\)</p> \\[ \\mathcal{L}_{\\mathrm{CFM}}(\\theta)=\\mathbb{E}_{t\\sim\\mathrm{Unif},z\\sim p_\\mathrm{data},\\epsilon\\sim\\mathcal{N}(0,I_d)}[\\|u_t^\\theta(t \\cdot z + (1-t) \\cdot \\epsilon)-(z - \\epsilon)\\|^2] \\] <p></p> <p></p> <p> \u200b\u8bad\u7ec3\u200b\u7684\u200b PyTorch \u200b\u4ee3\u7801\u200b:</p> <pre><code>t = torch.rand(batch_size) # 1. sample t from uniform distribution\nz = data_loader.sample(batch_size) # 2. sample z from data distribution\ne = torch.randn(batch_size) # 3. sample noise epsilon from standard normal distribution\nx = model(t * z + (1 - t) * e, t) # 4. get predicted values from our network u_t(x)\ntarget = z - e # 5. get target values\nloss = torch.mean((x - target) ** 2) # 6. compute loss\nloss.backward() # 7. backpropagate gradients\noptimizer.step() # 8. update parameters for our network u_t(x)\n</code></pre> <p>Meta MovieGen \u200b\u548c\u200b Stable Diffusion 3 \u200b\u90fd\u200b\u7528\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u8bad\u7ec3\u200b\u7b97\u6cd5\u200b\u3002</p>"},{"location":"course/cs/mit6s184/lec03/#score-matching","title":"Score Matching","text":"<p>\u200b\u8fb9\u9645\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b(Marginal Score Function, MSF) \u200b\u5141\u8bb8\u200b\u5c06\u200b ODE \u200b\u6269\u5c55\u200b\u4e3a\u200b\u5177\u6709\u200b\u4efb\u610f\u200b\u6269\u6563\u7cfb\u6570\u200b\u7684\u200b SDE. \u200b\u4e0d\u540c\u4e8e\u200b Flow Matching\uff0c\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u7684\u200b\u7f51\u7edc\u200b \\(s_t^{\\theta}(x)\\) \u200b\u662f\u200b\u8fd1\u4f3c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b(Score Function)\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u573a\u200b\u3002</p> \\[ \\begin{aligned} X_0\\sim p_{\\mathrm{init}},\\quad\\mathrm{d}X_t &amp; =\\left[u_t^{\\mathrm{target}}(X_t)+\\frac{\\sigma_t^2}{2}\\nabla\\log p_t(X_t)\\right]\\mathrm{d}t+\\sigma_t\\mathrm{d}W_t \\\\  &amp; \\Rightarrow X_t\\sim p_t \\end{aligned} \\]"},{"location":"course/cs/mit6s184/lec03/#score-matching-loss","title":"Score Matching Loss","text":"<p>\u200b\u7ed9\u5b9a\u200b \\(t \\sim \\mathcal{U}(0, 1), x \\sim p_t(\\cdot | z), z \\sim p_{data}\\)</p> \\[\\boxed{L_{\\mathbf{SM}}(\\theta) = \\mathbb{E}_{t, x, z} \\left[ \\|s_t^{\\theta}(x) - \\nabla_x \\log p_t(x)\\|^2 \\right]}\\] <p>Conditional Score Matching Loss:</p> \\[\\boxed{L_{\\mathbf{DSM}}(\\theta) = \\mathbb{E}_{t, x, z} \\left[ \\|s_t^{\\theta}(x) - \\nabla_x \\log p_t(x | z)\\|^2 \\right]}\\] <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u540c\u6837\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\uff0c\\(L_{\\mathbf{SM}}\\) \u200b\u548c\u200b \\(L_{\\mathbf{CSM}}\\) \u200b\u53ea\u200b\u76f8\u5dee\u200b\u4e00\u4e2a\u200b\u5e38\u6570\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u5c0f\u5316\u200b\u540e\u8005\u200b\u540c\u6837\u200b\u53ef\u4ee5\u200b\u8fbe\u5230\u200b\u8bad\u7ec3\u200b\u76ee\u7684\u200b\u3002</p>"},{"location":"course/cs/mit6s184/lec03/#training-algorithm_1","title":"Training Algorithm","text":"Example: Denoising Score Matching for Gaussian Probability Path <p>\u200b\u4ee5\u200b\u9ad8\u65af\u5206\u5e03\u200b\u4e3a\u4f8b\u200b\uff1a</p> \\[\\nabla\\log p_t(x|z)=-\\frac{x-\\alpha_tz}{\\beta_t^2}, \\epsilon\\sim\\mathcal{N}(0,I_d) \\\\ \\Rightarrow x=\\alpha_tz+\\beta_t\\epsilon\\sim\\mathcal{N}(\\alpha_tz,\\beta_t^2I_d)\\] <p>Denoising Score Matching Loss:</p> \\[\\mathcal{L}_\\mathrm{dsm}(\\theta)= \\mathbb{E}_{t\\sim\\mathrm{Unif},z\\sim p_{\\mathrm{data}},\\epsilon\\sim\\mathcal{N}(0,I_{d})}[\\|s_{t}^{\\theta}(\\alpha_{t}z+\\beta_{t}\\epsilon)+\\frac{\\epsilon}{\\beta_{t}}\\|^{2}]\\] <p>Training Algorithm:</p> <p> </p> <p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u8bbe\u8ba1\u200b\u597d\u200b\u4e86\u200b\u8bad\u7ec3\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u540e\u200b\u53ef\u4ee5\u200b\u7528\u200b diffusion model \u200b\u6765\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u4e86\u200b\u3002 \u200b\u6211\u4eec\u200b\u7528\u200b\u4e00\u4e2a\u200b SDE \u200b\u6765\u200b\u63cf\u8ff0\u200b\u968f\u673a\u200b\u91c7\u6837\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff1a</p> \\[ \\begin{aligned}  &amp; X_0\\sim p_{\\mathrm{init}},\\quad\\mathrm{d}X_t=\\left[u_t^{\\mathrm{target}}(X_t)+\\frac{\\sigma_t^2}{2}\\nabla\\log p_t(X_t)\\right]\\mathrm{d}t+\\sigma_t\\mathrm{d}W_t \\\\  &amp; \\Rightarrow X_t\\sim p_t \\\\  &amp; X_0\\sim p_{\\mathrm{init}},\\quad\\mathrm{d}X_t=\\left[u_t^\\theta(X_t)+\\frac{\\sigma_t^2}{2}s_t^\\theta(X_t)\\right]\\mathrm{d}t+\\sigma_t\\mathrm{d}W_t \\\\  &amp; \\text{Affer training }\\Rightarrow X_t\\sim p_t \\end{aligned} \\]"},{"location":"course/cs/mit6s184/lec03/#denoising-diffusion-models","title":"Denoising Diffusion Models","text":"<p>\u200b\u53bb\u200b\u566a\u200b\u6269\u6563\u200b\u6a21\u578b\u200b(Denoising Diffusion Models, DDMs) \u200b\u662f\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u6269\u6563\u200b\u6a21\u578b\u200b\u7684\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e00\u822c\u200b\u76f4\u63a5\u200b\u628a\u200b\u5b83\u200b\u53eb\u505a\u200b diffusion model. \u200b\u53bb\u200b\u566a\u200b\u6269\u6563\u200b\u6a21\u578b\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u9ad8\u65af\u200b\u521d\u59cb\u200b\u5206\u5e03\u200b \\(p_{\\mathrm{init}} = \\mathcal{N}(0, I_d)\\) \u200b\u548c\u200b\u9ad8\u65af\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\u3002 Denoising Diffusion Models = Diffusion Models with Gaussian Probability Path.</p> <p>DDMs \u200b\u6709\u200b\u5f88\u591a\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u5411\u91cf\u573a\u200b\u548c\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b\u90fd\u200b\u662f\u200b \\(x\\) \u200b\u548c\u200b \\(z\\) \u200b\u7684\u200b\u52a0\u6743\u200b\u548c\u200b\uff0c\u200b\u4e14\u200b\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u76f8\u4e92\u200b\u8f6c\u6362\u200b\u3002</p> \\[ u_t^{\\mathrm{target}}(x|z)=\\left(\\dot{\\alpha}_t-\\frac{\\dot{\\beta}_t}{\\beta_t}\\alpha_t\\right)z+\\frac{\\dot{\\beta}_t}{\\beta_t}x, \\quad \\nabla\\log p_t(x|z)=-\\frac{x-\\alpha_tz}{\\beta_t^2} \\] <p>\u200b\u4e8e\u662f\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5411\u91cf\u573a\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u540e\u200b\u8bad\u7ec3\u200b\uff1a\\(u_t^\\theta=\\left(\\beta_t^2\\frac{\\dot{\\alpha}_t}{\\alpha_t}-\\dot{\\beta}_t\\beta_t\\right)s_t^\\theta(x)+\\frac{\\dot{\\alpha}_t}{\\alpha_t}x\\) \u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u5206\u522b\u200b\u8bad\u200b\u4e24\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff0c\u200b\u6700\u65e9\u200b\u7684\u200b diffusion model \u200b\u53ea\u7528\u200b Score Matching \u200b\u8bad\u7ec3\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5f97\u5206\u200b\u51fd\u6570\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u3002</p> \\[ X_0 \\sim p_{\\mathrm{init}},\\quad\\mathrm{d}X_t=\\left[\\left(\\beta_t^2\\frac{\\dot{\\alpha}_t}{\\alpha_t}-\\dot{\\beta}_t\\beta_t+\\frac{\\sigma_t^2}{2}\\right)s_t^\\theta(x)+\\frac{\\dot{\\alpha}_t}{\\alpha_t}x\\right]\\mathrm{d}t+\\sigma_t\\mathrm{d}W_t \\]"},{"location":"course/cs/mit6s184/lec04/","title":"Lec04-\u200b\u56fe\u50cf\u200b\u751f\u6210\u5668","text":"<p> \u200b\u7ea6\u200b 1773 \u200b\u4e2a\u200b\u5b57\u200b  5 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 6 \u200b\u5206\u949f\u200b</p> <p>Overview</p> <ul> <li>Video:  Lecture 04</li> <li>Slide:  Lecture 04</li> <li>References:<ul> <li> Lecture notes</li> </ul> </li> </ul>"},{"location":"course/cs/mit6s184/lec04/#guidance-and-conditional-generation","title":"Guidance and Conditional Generation","text":"<p>\u200b\u5728\u200b\u4e4b\u524d\u200b\u7684\u200b\u8bfe\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u5982\u4f55\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u65e0\u6761\u4ef6\u200b(unconditional) \u200b\u7684\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u3002\u200b\u800c\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f80\u5f80\u200b\u9700\u8981\u200b\u751f\u6210\u200b\u4e00\u4e9b\u200b\u6709\u200b\u6761\u4ef6\u200b(conditional) \u200b\u7684\u200b\u6837\u672c\u200b\uff0c\u200b\u6bd4\u5982\u200b\u751f\u6210\u200b\u4e00\u4e9b\u200b\u7279\u5b9a\u200b\u7c7b\u522b\u200b\u7684\u200b\u56fe\u50cf\u200b\uff0c\u200b\u6216\u8005\u200b\u751f\u6210\u200b\u4e00\u4e9b\u200b\u7279\u5b9a\u200b\u98ce\u683c\u200b\u7684\u200b\u56fe\u50cf\u200b\u3002 \u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u4f1a\u200b\u5f15\u5165\u200b Conditional Generation (Guidance) \u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8c03\u6574\u200b\u6211\u4eec\u200b\u7684\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u6765\u200b\u751f\u6210\u200b\u7b26\u5408\u200b\u7279\u5b9a\u200b\u6587\u672c\u200b\u63d0\u793a\u200b\u7684\u200b\u56fe\u50cf\u200b\u3002</p> <p>\u200b\u65e0\u6761\u4ef6\u200b\u751f\u6210\u200b\u548c\u200b\u6709\u200b\u6761\u4ef6\u200b\u751f\u6210\u200b\u7684\u200b\u533a\u522b\u200b\uff1a\\(y\\) \u200b\u662f\u200b\u6761\u4ef6\u200b\uff0c\u200b\u6bd4\u5982\u200b\u6587\u672c\u200b(text prompts). \u200b\u4e3a\u4e86\u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b\u5185\u5bb9\u200b\u533a\u5206\u200b\uff0c\u200b\u6211\u4eec\u200b\u7edf\u4e00\u200b\u672f\u8bed\u200b\u7528\u200b Guidance \u200b\u6765\u200b\u8868\u793a\u200b\u3002</p> <p>Guided generation \u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u7ed9\u5b9a\u200b\u7684\u200b Guidance \\(y\\)\uff0c\u200b\u6211\u4eec\u200b\u90fd\u200b\u80fd\u591f\u200b\u4ece\u200b \\(p_\\mathrm{data}(x|y)\\) \u200b\u4e2d\u200b\u91c7\u6837\u200b\u6837\u672c\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u9700\u8981\u200b formulate Guided CFM Objective \u200b\u6765\u200b\u8bad\u7ec3\u200b\u6211\u4eec\u200b\u7684\u200b\u6761\u4ef6\u200b\u751f\u6210\u200b\u6a21\u578b\u200b:</p> \\[ \\begin{aligned} \\mathcal{L}_{\\mathrm{CFM}}^{\\mathrm{guided}}(\\theta) &amp; =\\mathbb{E}_{\\square}\\|u_t^\\theta(x|y)-u_t^{\\mathrm{target}}(x|z)\\|^2 \\\\ \\square &amp; =(z,y)\\thicksim p_\\mathrm{data}{(z,y)},t\\thicksim\\mathrm{Unif}[0,1),x\\thicksim p_t(x|z) \\end{aligned} \\] <p>\u200b\u56de\u60f3\u200b\u4e00\u4e0b\u200b unguided \u200b\u7684\u200b CFM \u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u8005\u200b\u7684\u200b\u4e3b\u8981\u200b\u533a\u522b\u200b\u5728\u4e8e\u200b guided CFM \u200b\u4f1a\u200b\u91c7\u6837\u200b \\((z, y) \\sim p_\\mathrm{data}(z, y)\\)\uff0c\u200b\u6570\u636e\u5206\u5e03\u200b\u53d8\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b joint \u200b\u5206\u5e03\u200b\uff0c\u200b\u4e4b\u524d\u200b\u662f\u200b\u91c7\u6837\u200b \\(z \\sim p_\\mathrm{data}(z)\\).</p>"},{"location":"course/cs/mit6s184/lec04/#classifier-free-guidance","title":"Classifier-Free Guidance","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9ad8\u65af\u200b\u6982\u7387\u200b\u8def\u5f84\u200b\uff0c\u200b\u901a\u8fc7\u200b\u8f6c\u6362\u200b\u516c\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\begin{aligned} u_t^{\\mathrm{target}}(x | y) &amp; = a_t x + b_t \\nabla_x \\log p_t(x|y), \\\\ \\mathrm{where}\\quad (a_t, b_t) &amp; = (\\frac{\\dot{\\alpha_t}}{\\alpha_t}, \\frac{\\dot{\\alpha_t} \\beta_t^2 - \\dot{\\beta_t} \\beta_t \\alpha_t}{\\alpha_t}) \\end{aligned} \\] <p>\u200b\u5229\u7528\u200b Bayes'rule \u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\begin{aligned} \\nabla_x \\log p_t(x|y) &amp; = \\nabla_x \\log \\left( \\frac{p_t(x)p_t(y|x)}{p_t(y)} \\right) \\\\ &amp; = \\nabla_x \\log p_t(x) + \\nabla_x \\log p_t(y|x) - \\nabla_x \\log p_t(y) \\\\ &amp; = \\nabla_x \\log p_t(x) + \\nabla_x \\log p_t(y|x) \\end{aligned} \\] <p>\u200b\u4ee3\u5165\u200b\u5230\u200b\u4e0a\u9762\u200b\u7684\u200b\u5f0f\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\begin{aligned} u_t^{\\mathrm{target}}(x | y) &amp; = a_t x + b_t  \\nabla_x \\log p_t(x|y) \\\\ &amp; = a_t x + b_t (\\nabla_x \\log p_t(x) + \\nabla_x \\log p_t(y|x)) \\\\ &amp; = a_t x + b_t \\nabla_x \\log p_t(x) + b_t \\nabla_x \\log p_t(y|x) \\\\ &amp; = u_t^{\\mathrm{target}}(x) + b_t \\nabla_x \\log p_t(y|x) \\end{aligned} \\] <p>\u200b\u89c2\u5bdf\u200b\u4e0a\u9762\u200b\u8fd9\u4e2a\u200b\u5f0f\u5b50\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f1a\u200b\u53d1\u73b0\u200b\uff0c\\(u_t^{\\mathrm{target}}(x | y)\\) \u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u7b2c\u4e00\u9879\u200b\u662f\u200b unguided vector field, \u200b\u548c\u200b guidance \\(y\\) \u200b\u65e0\u5173\u200b\u3002</li> <li>\u200b\u7b2c\u4e8c\u9879\u200b\u662f\u200b guided score\uff0c\u200b\u548c\u200b\u5f15\u5165\u200b\u7684\u200b guidance \u200b\u6709\u5173\u200b\u3002</li> </ul> <p>\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u81ea\u7136\u200b\u7684\u200b\u60f3\u6cd5\u200b\u662f\u200b\u901a\u8fc7\u200b\u589e\u5f3a\u200b\u7b2c\u4e8c\u9879\u200b\u7684\u200b\u5f3a\u5ea6\u200b\uff0c\u200b\u6765\u200b\u63a7\u5236\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u7b26\u5408\u200b guidance \\(y\\) \u200b\u7684\u200b\u6837\u672c\u200b\u3002 \u200b\u4e8e\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b \\(\\log p_t(x|y)\\) \u200b\u79f0\u4e3a\u200b Classifier\uff0c\u200b\u540c\u65f6\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b Guidance Scale \\(w \\geq 1\\) \u200b\u6765\u200b\u8868\u793a\u200b guidance \u200b\u7684\u200b\u5f3a\u5ea6\u200b\u3002</p> \\[ \\tilde{u}_t(x|y) = u_t^{\\mathrm{target}}(x) + w b_t \\nabla_x \\log p_t(y|x) \\] <p>\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u88ab\u200b\u79f0\u4e3a\u200b Classifier Guidance(CG).</p> <p>\u200b\u5c06\u200b\u4e0a\u9762\u200b\u8fd9\u4e2a\u200b\u5f0f\u5b50\u200b\u6539\u5199\u200b\u6210\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ \\begin{aligned} \\tilde{u}_t(x|y) &amp; = u_t^{\\mathrm{target}}(x) + w b_t \\nabla_x \\log p_t(y|x) \\\\ &amp; = u_t^{\\mathrm{target}}(x) + w b_t \\left( \\nabla_x \\log p_t(x|y) - \\nabla_x \\log p_t(x) \\right) \\\\ &amp; = u_t^{\\mathrm{target}}(x) - (w a_t x + w b_t \\nabla_x \\log p_t(x)) + (w a_t x + w b_t \\nabla_x \\log p_t(x|y)) \\\\ &amp; = (1 - w) u_t^{\\mathrm{target}}(x) + w u_t^{\\mathrm{target}}(x|y) \\end{aligned} \\] <p>\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u88ab\u200b\u79f0\u4e3a\u200b Classifier-Free Guidance(CFG). \u200b\u5728\u200b CFG \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b classifier.</p>"},{"location":"course/cs/mit6s184/lec04/#cfg-training-and-sampling","title":"CFG Training and Sampling","text":"<p>CFG Training:</p> <p>\u200b\u7ecf\u8fc7\u200b CFG \u200b\u7684\u200b\u53d8\u6362\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u76ee\u6807\u200b \\(\\tilde{u}_t(x|y)\\) \u200b\u662f\u200b unguided/guided vector field \u200b\u7684\u200b\u7ebf\u6027\u7ec4\u5408\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u597d\u200b unguided/guided vector field \u200b\u540e\u200b\uff0c\u200b\u5728\u200b inference \u200b\u9636\u6bb5\u200b\uff0c\u200b\u901a\u8fc7\u200b\u7ebf\u6027\u7ec4\u5408\u200b\u5f97\u5230\u200b \\(\\tilde{u}_t(x|y)\\).</p> <p>\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53d1\u73b0\u200b\u662f\u200b unguided vector field \\(u_t^{\\mathrm{target}}(x)\\) \u200b\u5176\u5b9e\u200b\u662f\u200b condition on \\(\\varnothing\\) \u200b\u7684\u200b\u4e00\u4e2a\u200b\u7279\u4f8b\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u8bad\u7ec3\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u968f\u673a\u200b\u8bbe\u7f6e\u200b \\(y=\\varnothing\\)\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u8bad\u7ec3\u200b unguided \u200b\u548c\u200b guided vector field.</p> <p>CFG Conditional Flow Matching:</p> \\[ \\begin{aligned} \\mathcal{L}_{\\mathrm{CFM}}^{\\mathrm{CFG}}(\\theta) &amp; =\\mathbb{E}_\\square\\|u_t^\\theta(x|y)-u_t^{\\mathrm{target}}(x|z)\\|^2 \\\\ \\square &amp; =(z,y)\\thicksim p_{\\mathrm{data}}(z,y),\\text{ with prob. }\\eta,y\\leftarrow\\varnothing,t\\thicksim\\mathrm{Unif}[0,1),x\\thicksim p_t(x|z) \\end{aligned} \\] <p>Sampling Algorithm:</p> <p>\u200b\u8bad\u7ec3\u200b\u597d\u200b \\(\\tilde{u}_t^\\theta(x|y)\\) \u200b\u540e\u200b\uff0c\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b guidance(e.g. text prompt) \\(y\\)\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u7b97\u6cd5\u200b\u91c7\u6837\u200b\u5f97\u5230\u200b\u6837\u672c\u200b\uff1a</p> <p>Distribution of \\(X_1\\)</p> <ul> <li>\u200b\u5f53\u200b \\(w = 1\\) \u200b\u65f6\u200b\uff0c\\(X_1\\) \u200b\u7684\u200b\u5206\u5e03\u200b\u662f\u200b \\(p_\\mathrm{data}(\\cdot|y)\\).</li> <li>\u200b\u5f53\u200b \\(w &gt; 1\\) \u200b\u65f6\u200b\uff0c\\(X_1\\) \u200b\u7684\u200b\u5206\u5e03\u200b\u662f\u200b \\(p_\\mathrm{data}(\\cdot|y)\\) \u200b\u548c\u200b \\(p_\\mathrm{data}(\\cdot)\\) \u200b\u7684\u200b\u6df7\u5408\u200b\u5206\u5e03\u200b\u3002</li> </ul>"},{"location":"course/cs/mit6s184/lec04/#guidance-for-diffusion-models","title":"Guidance for Diffusion Models","text":"<p>\u200b\u548c\u200b CFM \u200b\u7c7b\u4f3c\u200b\uff0cCFG Score \\(\\tilde{s}_t(x|y) = (1 - w) \\nabla_x \\log p_t(x | \\varnothing) + w \\nabla_x \\log p_t(x|y)\\).</p> <p>CFG Denoising Score Matching:</p> \\[ \\begin{aligned} \\mathcal{L}_{\\mathrm{DSM}}^{\\mathrm{CFG}}(\\theta) &amp; =  \\mathbb{E}_{\\square}\\|s_t^\\theta(x|y)-\\nabla\\log p_t(x|z)\\|^2 \\\\ \\square &amp; = (z,y)\\sim p_{\\mathrm{data}}(z,y),t\\sim\\mathrm{Unif}[0,1),\\mathrm{~}x\\sim p_t(\\cdot|z),\\mathrm{~replace~}y=\\varnothing\\text{ with prob. }\\eta, \\end{aligned} \\] <p>Sampling Algorithm:</p> \\[ \\begin{aligned}  &amp; \\text{Initialization:}\\quad X_0\\sim p_{\\mathrm{init}}(x) \\\\  &amp; \\text{Simulation:}\\quad\\mathrm{d}X_t= \\left[ \\tilde{u}_t^\\theta(X_t|y) + \\frac{\\sigma_t^2}{2} \\tilde{s}_t^\\theta(X_t|y) \\right] \\mathrm{d}t + \\sigma_t \\mathrm{d}W_t \\\\  &amp; \\mathrm{Samples:}\\quad X_1 \\end{aligned} \\]"},{"location":"course/cs/mit6s184/lec04/#neural-network-architectures","title":"Neural Network Architectures","text":"<p>\u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u5c06\u200b\u8ba8\u8bba\u200b\u7528\u4e8e\u200b flow/diffusion model \u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u67b6\u6784\u8bbe\u8ba1\u200b\uff0c\u200b\u5373\u200b\u5982\u4f55\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u6765\u200b\u8868\u793a\u200b \\(u_t^{\\theta}(x|y)\\) \u200b\u548c\u200b \\(s_t^{\\theta}(x|y)\\). \u200b\u7f51\u7edc\u200b\u7684\u200b\u8f93\u5165\u8f93\u51fa\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u8f93\u5165\u200b: vector \\(x \\in \\R^d\\), conditional variable \\(y \\in \\mathcal{Y}\\), time \\(t \\in [0,1]\\).</li> <li>\u200b\u8f93\u51fa\u200b: vector \\(u_t^{\\theta}(x|y) \\in \\R^d\\) \u200b\u6216\u200b score \\(s_t^{\\theta}(x|y) \\in \\R^d\\).</li> </ul> <p>\u200b\u9700\u8981\u200b\u5173\u6ce8\u200b\u7684\u200b\u70b9\u200b\uff1aHow is \\(y\\) encoded, embedded, and processed?</p>"},{"location":"course/cs/mit6s184/lec04/#u-nets","title":"U-Nets","text":"The simplified U-Net architecture  <ul> <li>U-Net \u200b\u7684\u200b\u5173\u952e\u200b\u7279\u5f81\u200b\u662f\u200b\u5176\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u90fd\u200b\u5177\u6709\u200b\u56fe\u50cf\u200b\u7684\u200b\u5f62\u72b6\u200b (\u200b\u53ef\u80fd\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u901a\u9053\u200b\u6570\u200b)\uff0c\u200b\u5e76\u4e14\u200b\u5177\u6709\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b(residual connection)\uff0c\u200b\u53ef\u4ee5\u200b\u6355\u6349\u5230\u200b\u4e0d\u540c\u200b\u5c3a\u5ea6\u200b\u7684\u200b\u7279\u5f81\u200b\u3002</li> <li>U-Net \u200b\u7531\u200b\u4e00\u7cfb\u5217\u200b\u7f16\u7801\u5668\u200b(Encoder)\u200b\u548c\u200b\u76f8\u5e94\u200b\u7684\u200b\u89e3\u7801\u5668\u200b\u5e8f\u5217\u200b(Decoder)\u200b\u4ee5\u53ca\u200b\u4e2d\u95f4\u200b\u7f16\u7801\u5668\u200b(Midcoder)\u200b\u7ec4\u6210\u200b\u3002</li> <li>\u200b\u5404\u4e2a\u200b\u6a21\u5757\u200b\u7684\u200b\u7ef4\u5ea6\u200b (\u200b\u4ee5\u200b 256x256 \u200b\u7684\u200b\u56fe\u50cf\u200b\u4e3a\u4f8b\u200b)\uff1a<ul> <li>\\(x_t^{\\mathrm{input}} \\in \\R^{3 \\times 256 \\times 256}\\)</li> <li>\\(x_t^{\\mathrm{latent}} = \\mathrm{Encoder}(x_t^{\\mathrm{input}}) \\in \\R^{512 \\times 32 \\times 32}\\), \u200b\u901a\u9053\u200b\u6570\u4f1a\u200b\u9010\u6e10\u200b\u589e\u52a0\u200b\uff0c\u200b\u56fe\u50cf\u200b\u5206\u8fa8\u7387\u200b\u4f1a\u200b\u9010\u6e10\u200b\u51cf\u5c0f\u200b\u3002</li> <li>\\(x_t^{\\mathrm{latent}} = \\mathrm{Midcoder}(x_t^{\\mathrm{latent}}) \\in \\R^{512 \\times 32 \\times 32}\\)</li> <li>\\(x_t^{\\mathrm{output}} = \\mathrm{Decoder}(x_t^{\\mathrm{latent}}) \\in \\R^{3 \\times 256 \\times 256}\\)</li> </ul> </li> <li>\u200b\u8fd9\u91cc\u200b\u5c55\u793a\u200b\u7684\u200b\u662f\u200b\u8bfe\u7a0b\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u7b80\u5316\u200b U-Net \u200b\u67b6\u6784\u200b\uff0c\u200b\u53ea\u6709\u200b\u5377\u79ef\u200b\u5c42\u200b\uff0c\u200b\u4e8b\u5b9e\u4e0a\u200b\u5f88\u591a\u200b\u67b6\u6784\u200b\u90fd\u200b\u4f1a\u200b\u7528\u200b attention layer \u200b\u4ee3\u66ff\u200b\u5377\u79ef\u200b\u5c42\u200b\u3002</li> </ul>"},{"location":"course/cs/mit6s184/lec04/#diffusion-transformers","title":"Diffusion Transformers","text":"Credit: Scalable Diffusion Models with Transformers <ul> <li>DiT \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\u5c06\u200b\u56fe\u50cf\u200b\u5206\u5272\u200b\u6210\u200b\u5757\u200b(patches)\uff0cembed \u200b\u6bcf\u4e2a\u200b\u5757\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u5757\u200b\u4e4b\u95f4\u200b\u8fdb\u884c\u200b attention.</li> </ul>"},{"location":"course/cs/mit6s184/lec04/#latent-diffusion-models","title":"Latent Diffusion Models","text":"Credit: High Resolution Image Synthesis with Latent Diffusion Models <ul> <li>LDM \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u5728\u200b\u9690\u200b\u7a7a\u95f4\u200b(latent space)\u200b\u7684\u200b\u6269\u6563\u200b\u6a21\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b VAE \u200b\u5c06\u200b\u9690\u200b\u7a7a\u95f4\u200b\u6620\u5c04\u200b\u56de\u200b\u539f\u59cb\u200b\u7a7a\u95f4\u200b\u3002\u200b\u8fd9\u6837\u200b\u7684\u200b\u597d\u5904\u200b\u662f\u200b\u53ef\u4ee5\u200b\u964d\u4f4e\u200b\u5185\u5b58\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u9ad8\u5206\u8fa8\u7387\u200b\u56fe\u50cf\u200b\u3002</li> </ul>"},{"location":"course/cs/mit6s184/lec04/#qa","title":"Q&amp;A","text":"What's the difference between classifier guidance and classifier-free guidance? <ul> <li>CG \u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b classifier\uff0c\u200b\u800c\u200b CFG \u200b\u4e0d\u200b\u9700\u8981\u200b\u3002\u200b\u56e0\u6b64\u200b CG \u200b\u53ea\u80fd\u200b\u7528\u200b\u5206\u7c7b\u200b\u6a21\u578b\u200b\u63a7\u5236\u200b\u751f\u6210\u200b\u7684\u200b\u7c7b\u522b\u200b\uff0c\u200b\u751f\u6210\u200b\u7684\u200b\u7c7b\u522b\u200b\u6570\u200b\u6709\u9650\u200b\uff0c\u200b\u800c\u200b CFG \u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u4efb\u4f55\u200b\u6761\u4ef6\u200b\u4e0b\u200b\u7684\u200b\u6837\u672c\u200b\u3002</li> <li>CG \u200b\u4e0d\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u8bad\u7ec3\u200b diffusion model, \u200b\u800c\u200b CFG \u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u8bad\u7ec3\u200b diffusion model.</li> </ul> Classifier-free Guidance destroys the quasi-linear properties of Neural Diffusion Operator? <p>\u200b\u6458\u5f55\u81ea\u200b\u7a7a\u95e8\u200b\u5927\u4f6c\u200b\u7684\u200b\u77e5\u4e4e\u200b\uff1aClassifer-free Guidance \u200b\u662f\u200b\u4e07\u6076\u4e4b\u6e90\u200b</p>"},{"location":"course/math/","title":"Mathematics","text":"<p>Abstract</p> <p>\u200b\u6570\u5b66\u200b\u76f8\u5173\u200b\u8bfe\u7a0b\u200b\u7684\u200b\u7b14\u8bb0\u200b</p> <p></p> <p> Wir m\u00fcssen wissen, wir werden wissen. </p> <p> \u2014\u2014 David Hilbert </p> <p></p>"},{"location":"course/opt/","title":"Optics","text":"<p>Abstract</p> <p>\u200b\u5149\u7535\u200b\u76f8\u5173\u200b\u8bfe\u7a0b\u200b\u7684\u200b\u7b14\u8bb0\u200b</p> <p><p> </p></p> \\[\\large \\begin{aligned} &amp; \\nabla \\cdot \\mathbf{E}=\\frac{\\rho}{\\varepsilon_0} \\\\ &amp; \\nabla \\cdot \\mathbf{B}=0 \\\\ &amp; \\nabla \\times \\mathbf{E}=-\\frac{\\partial \\mathbf{B}}{\\partial t} \\\\ &amp; \\nabla \\times \\mathbf{B}=\\mu_0 \\mathbf{J}+\\mu_0 \\varepsilon_0 \\frac{\\partial \\mathbf{E}}{\\partial t}\\end{aligned} \\] <p> \u2014\u2014 James Clerk Maxwell </p> <p>\u200b\u516c\u5f0f\u200b\u6e32\u67d3\u200b\u6709\u8bef\u200b\u7684\u8bdd\u200b\u53ef\u4ee5\u200b\u5237\u65b0\u200b\u8bd5\u8bd5\u200b :)</p>"},{"location":"course/opt/optoelec/","title":"\u5149\u7535\u5b50\u5b66","text":"<p>TODO</p>"},{"location":"course/opt/optoelec/#table-of-contents","title":"Table of Contents","text":""},{"location":"life/","title":"\u751f\u6d3b","text":"<p>Info</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u751f\u6d3b\u200b :)</p> <ul> <li> <p>\u200b\u5f71\u89c6\u200b</p> </li> <li> <p>\u200b\u9605\u8bfb\u200b </p> </li> <li> <p>\u200b\u6458\u5f55\u200b</p> </li> </ul>"},{"location":"life/film/","title":"\u5f71\u89c6","text":"<p>TODO</p>"},{"location":"life/reading/","title":"\u9605\u8bfb","text":"<p>TODO</p>"},{"location":"life/words/","title":"\u6458\u5f55","text":"<p>Info</p> <p>\u200b\u968f\u624b\u200b\u6458\u5f55\u200b\u4e00\u4e9b\u200b\u6709\u8da3\u200b\u548c\u200b\u6709\u200b\u4ef7\u503c\u200b\u7684\u200b\u5185\u5bb9\u200b :)</p> Template <p> date \u00a0  author \u00a0  source type  #tag \u00a0</p> <p>placeholder</p> <p>Source code: <pre><code>???+ quote \"Title\"\n    :material-calendar: date &amp;nbsp;\n    :fontawesome-solid-user-pen: author &amp;nbsp;\n    :octicons-link-16: [source type](url) &amp;nbsp;\n    :octicons-tag-16: #tag &amp;nbsp;\n\n    &gt; placeholder\n</code></pre></p> My strategy to survive the generative AI era as an indie developer <p> 2024-04-26 \u00a0  Takuya Matsuyama \u00a0  Blog  #tech \u00a0</p> <p>Learning, coding, and creating can often be solitary pursuits. We all need something to motivate and encourage us through the loneliness and lethargy, to start and continue working. </p> <p>While AI is becoming increasingly proficient in handling functional aspects, dealing with emotional aspects is still a long way off, given their complexity, which even humans struggle to manage. </p> <p>I always make sure to subtly incorporate air between the body and the clothing. In other words, there is a 'space' in my clothes. It's like the space you find 'between the lines' in a written text. Unfortunately, this aesthetic of space is unique to Japan. It might be an aesthetic we should take pride in. ---- Yohji Yamamoto</p> Don't Use Homebrew <p> 2024-05-14 \u00a0  sainnhe \u00a0  Blog  #tech #macos \u00a0</p> <p>Apple tries every effort to protect your mac, including strict directory permissions, firewalls and many other privacy policies like asking for folder access permissions when a new app wants to access a folder. But homebrew makes your mac not as secure as it should be, a huge amount of components on your mac are not well protected.</p> <p>VSCode is an MIT licensed open source code editor developed by microsoft, right? But actually the stuff you built from source and that you downloaded from the official website are completely two different things, the official binary releases are licensed under a non-FLOSS (Free and Libre and Open Source Software) license and contains telemetry/tracking.</p> <p>What\u2019s worse is that the cask repository is enabled by default, newbies who think the apps they installed is FLOSS and trustworthy may actually install an app bundled with telemetry/tracking, and even trojan horse that tries to hack your mac in the way we mentioned in the previous part.</p> <p>From me: As a computer science student, I think the awareness of privacy and security is very important. But homebrew is really convenient and useful for me. It's a trade-off between efficiency and security.</p> Why I Learned Vim <p> 2024-08-24 \u00a0  Steve Simkins \u00a0  Blog  #tech #vim \u00a0</p> <p>The goal of this post is not to convince you that you should learn Vim, but show you why I personally use it and why I think thousands of other developers enjoy it as well. In the end you should use what works best for you, but also keep an open mind to the possibilities.</p> A Terminal Based Workflow <p> 2024-08-24 \u00a0  Steve Simkins \u00a0  Blog  #tech #workflow \u00a0</p> <p>This is the flexibility of a terminal based workflow that is hard to replicate on something like VSCode or Zed. It\u2019s not even an editor issue in my opinion: it\u2019s a development environment issue.</p> <p>In my previous post about learning Vim, I posed the question if you yourself should learn it. Again I think that\u2019s perhaps the wrong question. Instead you should ask yourself \u201cHow well do I know my development environment?\u201d If you\u2019re happy with running the basic tools in your terminal and switching back and forth between a terminal window and VSCode that\u2019s fine, do what works best for you.</p>"},{"location":"memo/","title":"\u5907\u5fd8\u5f55","text":"<p>Info</p> <p>\u200b\u8fd9\u91cc\u200b\u662f\u200b\u5907\u5fd8\u5f55\u200b\uff0c\u200b\u6db5\u76d6\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\uff1a</p> <ul> <li>\u200b\u5e38\u7528\u5de5\u5177\u200b: Shell/Git/Cmake/...</li> <li>\u200b\u7f16\u7a0b\u8bed\u8a00\u200b: C++/Python/Go/...</li> <li>\u200b\u7cfb\u7edf\u200b\u642d\u5efa\u200b: Mac/Windows/Linux/...</li> </ul> <p>\u200b\u5907\u5fd8\u5f55\u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u65b9\u4fbf\u200b\u627e\u200b\u4e00\u4e9b\u200b common sense\uff0c\u200b\u4e0d\u662f\u200b\u6559\u7a0b\u200b\uff0c\u200b\u66f4\u200b\u4e0d\u662f\u200b\u624b\u518c\u200b!</p>"},{"location":"memo/config/","title":"\u7cfb\u7edf\u200b\u642d\u5efa","text":"<p> \u200b\u5de5\u6b32\u5584\u5176\u4e8b\u200b\uff0c\u200b\u5fc5\u5148\u5229\u5176\u5668\u200b\u3002 </p> <p> \u2014\u2014 \u300a\u200b\u8bba\u8bed\u200b\u00b7\u200b\u536b\u7075\u516c\u200b\u300b </p> <p></p> Overview \u200b\u7cfb\u7edf\u200b\u642d\u5efa\u200b  Windows  Mac  Linux <p>Icon Source: mkdocs-material-icons</p>"},{"location":"memo/config/mac/homebrew/","title":"Homrebrew","text":""},{"location":"memo/config/mac/homebrew/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/config/mac/homebrew/#_2","title":"\u57fa\u672c\u200b\u914d\u7f6e","text":""},{"location":"memo/config/mac/homebrew/#_3","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"memo/config/mac/homebrew/#troubleshooting","title":"Troubleshooting","text":"Fix cleanup old kegs <p>\u200b\u95ee\u9898\u200b\u63cf\u8ff0\u200b\uff1a \u200b\u5f53\u200b\u6267\u884c\u200b <code>brew cleanup --prune=all</code> \u200b\u65f6\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u5982\u4e0b\u200b\u9519\u8bef\u200b\uff1a</p> <pre><code>Error: Could not cleanup old kegs! Fix your permissions on: somedir\n</code></pre> <p>\u200b\u539f\u56e0\u200b\uff1a <code>brew</code> \u200b\u4f1a\u200b\u5220\u9664\u200b\u65e7\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u4f46\u662f\u200b\u7531\u4e8e\u200b\u6743\u9650\u200b\u95ee\u9898\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5220\u9664\u200b</p> <p>\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a \u200b\u4fee\u6539\u200b\u76ee\u5f55\u200b\u6743\u9650\u200b <pre><code>sudo chown -R \"$USER\":admin somedir\n</code></pre></p>"},{"location":"memo/pl/","title":"\u7f16\u7a0b\u8bed\u8a00","text":"<p> \u200b\u5de5\u6b32\u5584\u5176\u4e8b\u200b\uff0c\u200b\u5fc5\u5148\u5229\u5176\u5668\u200b\u3002 </p> <p> \u2014\u2014 \u300a\u200b\u8bba\u8bed\u200b\u00b7\u200b\u536b\u7075\u516c\u200b\u300b </p> <p></p> Overview \u200b\u7f16\u7a0b\u8bed\u8a00\u200b  C++  Python  Go  Rust  Julia  Lua  Taichi <p>Icon Source: mkdocs-material-icons</p>"},{"location":"memo/pl/lua/","title":"Lua","text":"<p>Info</p> <p>Lua \u200b\u5b66\u4e60\u200b\u7b14\u8bb0\u200b</p>"},{"location":"memo/pl/lua/#table-of-contents","title":"Table of Contents","text":"<ul> <li>ToC</li> <li>Introduction </li> <li>Setup</li> </ul>"},{"location":"memo/pl/lua/#references","title":"References","text":"<ul> <li>Lua Official Documents</li> <li>Programming in Lua(Book)</li> <li>Programming in Lua Lecture Notes</li> <li>tutorialspoint Lua page</li> </ul>"},{"location":"memo/pl/lua/intro/","title":"Introduction to Lua Language","text":"<p> \u200b\u7ea6\u200b 218 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"memo/pl/lua/intro/#introduction","title":"Introduction","text":"<ul> <li>Lua \u200b\u662f\u200b\u4e00\u79cd\u200b\u811a\u672c\u8bed\u8a00\u200b\uff0c\u200b\u7c7b\u4f3c\u200bPython\u3001Perl\u3001Ruby\u200b\u7b49\u200b</li> <li>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u4e00\u79cd\u200b\u6570\u636e\u200b\u63cf\u8ff0\u8bed\u8a00\u200b\uff0c\u200b\u7c7b\u4f3c\u200bJSON\u3001XML\u200b\u7b49\u200b</li> <li>\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u4e00\u79cd\u200b\u6269\u5c55\u200b\u8bed\u8a00\u200b\uff0c\u200b\u7528\u4e8e\u200b\u591a\u200b\u8bed\u8a00\u200b\u5f00\u53d1\u200b</li> </ul>"},{"location":"memo/pl/lua/intro/#application","title":"Application","text":"<ul> <li>\u200b\u6700\u200b\u5e38\u7528\u200b\u4e8e\u200b\u6e38\u620f\u200b\u5f00\u53d1\u200b\u4e2d\u200b\uff0c\u200b\u6bd4\u5982\u200b\u4f5c\u4e3a\u200b\u6e38\u620f\u200b\u5f15\u64ce\u200b\u7684\u200b\u811a\u672c\u8bed\u8a00\u200b\uff0c\u200b\u6216\u8005\u200b\u4f5c\u4e3a\u200b\u6e38\u620f\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u811a\u672c\u8bed\u8a00\u200b</li> <li>\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5d4c\u5165\u5f0f\u200b\u5f00\u53d1\u200b\uff0c\u200b\u6bd4\u5982\u200b\u7528\u4e8e\u200bLogitech keyboards</li> <li>\u200b\u5e38\u200b\u4f5c\u4e3a\u200b\u4e00\u4e9b\u200b\u8f6f\u4ef6\u200b\u7684\u200b\u914d\u7f6e\u200b\u8bed\u8a00\u200b\uff0c\u200b\u6bd4\u5982\u200bTeX\u200b\u548c\u200bVim</li> </ul>"},{"location":"memo/pl/lua/intro/#why-use-lua","title":"Why use Lua","text":"<ul> <li>Portability: Lua \u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b\u5728\u200b\u51e0\u4e4e\u200b\u6240\u6709\u200b\u7684\u200b\u5e73\u53f0\u200b\u4e0a\u200b\uff0c\u200b\u8de8\u5e73\u53f0\u200b\u5f00\u53d1\u200b\u5f88\u200b\u53cb\u597d\u200b</li> <li>Simplicity and small size: \u200b\u8bed\u6cd5\u200b\u7b80\u5355\u200b\uff0c\u200b\u4ee3\u7801\u200b\u91cf\u200b\u5c0f\u200b\uff0c\u200b\u5b66\u4e60\u200b\u6210\u672c\u4f4e\u200b</li> <li>Embeddability: \u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5730\u200b\u5d4c\u5165\u200b\u5230\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200bC\u200b\u8bed\u8a00\u200b</li> <li>Efficiency: Lua \u200b\u662f\u200b\u89e3\u91ca\u200b\u811a\u672c\u8bed\u8a00\u200b\u7c7b\u4e2d\u200b\u6700\u5feb\u200b\u7684\u200b\u8bed\u8a00\u200b</li> </ul> <p>\u200b\u672c\u6587\u200b\u7684\u200b\u5b66\u4e60\u200b\u5185\u5bb9\u200b\u4e3b\u8981\u200b\u6765\u81ea\u200bFabio Mascarenhas \u200b\u7684\u200bslides </p>"},{"location":"memo/pl/lua/setup/","title":"Setup","text":"<p> \u200b\u7ea6\u200b 50 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>\u200b\u652f\u6301\u200b Lua \u200b\u7684\u200b\u7f16\u8f91\u5668\u200b\u548c\u200b IDEs \u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u8fd9\u4e2a\u200b\u5217\u8868\u200b\uff1ahttp://lua-users.org/wiki/LuaEditorSupport</p> <p>\u200b\u6211\u200b\u5728\u200b\u5b66\u4e60\u200b\u7684\u200b\u65f6\u5019\u200b\u4ee5\u200b Neovim \u200b\u4f5c\u4e3a\u200b\u4e3b\u8981\u200b\u7f16\u8f91\u5668\u200b, \u200b\u4f7f\u7528\u200b\u7684\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>lsp: lua-language-server</li> <li>linter: luacheck</li> <li>formatter: stylua</li> <li>debugger: debugger.lua</li> </ul>"},{"location":"memo/pl/python/","title":"Python","text":""},{"location":"memo/pl/python/#table-of-contents","title":"Table of Contents","text":""},{"location":"memo/pl/python/#references","title":"References","text":"<ul> <li>cs231n Python Numpy Tutorial</li> </ul>"},{"location":"memo/pl/taichi/","title":"Taichi Lang","text":"<p> \u200b\u7ea6\u200b 53 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u5728\u200b\u505a\u200bOSPP2023\u200b\u7684\u200b\u9879\u76ee\u200b\uff0c\u200b\u5b66\u4e60\u200b\u4e00\u4e0b\u200bTaichi Lang\uff0c\u200b\u4ee5\u540e\u200b\u5728\u200bCV/CG\u200b\u4e2d\u200b\u90fd\u200b\u7528\u200b\u7684\u200b\u5230\u200b</p> <ul> <li>\u200b\u5b98\u65b9\u200b\u6559\u7a0b\u200b\uff1aTaichi graphics tutorial</li> <li>\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1aTaichi documentation</li> <li>Cheetsheet\uff1aTaichi cheetsheet</li> </ul>"},{"location":"memo/pl/taichi/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Introduction</li> <li>Kernels &amp; Functions</li> <li>Type System</li> <li>Data Containers</li> <li>Differentiable Programming</li> </ul>"},{"location":"memo/pl/taichi/01_intro/","title":"Introduction","text":"<p> \u200b\u7ea6\u200b 97 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Taichi\u200b\u662f\u200b\u4e00\u95e8\u200b\u5e94\u7528\u200b\u4e8e\u200b\u7279\u5b9a\u200b\u9886\u57df\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\uff0c\u200b\u4e13\u200b\u4e3a\u200b\u9ad8\u6027\u80fd\u200b\uff0c\u200b\u5e76\u884c\u8ba1\u7b97\u200b\u800c\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u5185\u5d4c\u200b\u5728\u200bPython\u200b\u8bed\u8a00\u200b\u4e2d\u200b</p> <p>Taichi\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u7279\u6027\u200b\uff1a</p> <ul> <li>Taichi\u200b\u5728\u200b\u6307\u5b9a\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\u7f16\u8bd1\u200b\u5e76\u200b\u6267\u884c\u200bTaichi function\u200b\u548c\u200bkernel</li> <li>\u200b\u5bf9\u4e8e\u200b\u4f4d\u4e8e\u200bTaichi kernel\u200b\u4e2d\u200b\u6700\u200b\u5916\u5c42\u200b\u7684\u200b\u5faa\u73af\u200b\uff0cTaichi\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5c06\u200b\u5176\u200b\u5e76\u884c\u200b\u5316\u200b</li> <li>Taichi\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f88\u591a\u200b\u5f88\u200b\u7075\u6d3b\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5982\u200bfield\u200b\u7b49\u200b</li> </ul>"},{"location":"memo/pl/taichi/02_kernel_and_function/","title":"Kernels &amp; Functions","text":"<p> \u200b\u7ea6\u200b 950 \u200b\u4e2a\u200b\u5b57\u200b  98 \u200b\u884c\u200b\u4ee3\u7801\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 4 \u200b\u5206\u949f\u200b</p>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_1","title":"\u4fee\u9970\u200b\u5668","text":"<p>\u200b\u5728\u200bTaichi\u200b\u4e2d\u6709\u200b\u4e24\u4e2a\u200b\u91cd\u8981\u200b\u7684\u200b\u4fee\u9970\u200b\u5668\u200b\uff0c<code>ti.func</code>\u200b\u548c\u200b<code>ti.kernel</code>\uff0c\u200b\u5206\u522b\u200b\u4ee3\u8868\u200bTaichi function\u200b\u548c\u200bTaichi kernel\uff0cTaichi function\u200b\u548c\u200bTaichi kernel\u200b\u4e0d\u7531\u200bPython\u200b\u7684\u200b\u89e3\u91ca\u5668\u200b\u6267\u884c\u200b\uff0c\u200b\u800c\u662f\u200b\u7531\u200bTaichi\u200b\u7684\u200bJIT\u200b\u7f16\u8bd1\u5668\u200b\u6267\u884c\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u5e76\u200b\u90e8\u7f72\u200b\u5230\u200b\u5e76\u884c\u200b\u7684\u200b\u591a\u200b\u6838\u200bCPU\u200b\u6216\u200bGPU\u200b\u4e0a\u200b</p> <p>Tip</p> <p>\u200b\u5982\u679c\u200b\u719f\u6089\u200bCUDA\u200b\u7f16\u7a0b\u200b\u7684\u8bdd\u200b\uff0c<code>ti.func</code>\u200b\u53ef\u4ee5\u200b\u7b49\u6548\u200b\u4e3a\u200bCUDA\u200b\u4e2d\u200b\u7684\u200b<code>__device__</code>\uff0c<code>ti.kernel</code>\u200b\u53ef\u4ee5\u200b\u7b49\u6548\u200b\u4e3a\u200bCUDA\u200b\u4e2d\u200b\u7684\u200b<code>__global__</code></p> <p>Example</p> <pre><code>import taichi as ti\nti.init(arch=ti.cpu)\n\n@ti.func\ndef inv_square(x):  # A Taichi function\n    return 1.0 / (x * x)\n\n@ti.kernel\ndef partial_sum(n: int) -&gt; float:  # A kernel\n    total = 0.0\n    for i in range(1, n + 1):\n        total += inv_square(n)\n    return total\n\npartial_sum(1000)\n</code></pre>"},{"location":"memo/pl/taichi/02_kernel_and_function/#taichi-kernel","title":"Taichi kernel","text":"<p>Taichi kernel\u200b\u662f\u200bTaichi\u200b\u63a5\u7ba1\u200b\u6267\u884c\u200b\u4efb\u52a1\u200b\u7684\u200b\u5165\u53e3\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u4efb\u4f55\u200b\u5730\u65b9\u200b\u88ab\u200b\u8c03\u7528\u200b</p>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_2","title":"\u53c2\u6570","text":"<p>\u200b\u4e00\u4e2a\u200bTaichi kernel\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u591a\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u610f\u5473\u7740\u200b\u4efb\u610f\u200bPython\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f20\u7ed9\u200bkernel\uff0c\u200b\u56e0\u4e3a\u200bPython\u200b\u5bf9\u8c61\u200b\u53ef\u4ee5\u200b\u662f\u200b\u52a8\u6001\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u80fd\u200b\u5305\u542b\u200bTaichi\u200b\u7684\u200b\u7f16\u8bd1\u5668\u200b\u65e0\u6cd5\u200b\u8bc6\u522b\u200b\u7684\u200b\u7c7b\u578b\u200b</p> <p>Taichi kernel\u200b\u652f\u6301\u200b\u7684\u200b\u7c7b\u578b\u200b\u6709\u200b\u8fd9\u200b\u51e0\u79cd\u200b\uff1a<code>scalar</code>, <code>ti.types.matrix()</code>, <code>ti.types.vector()</code>, <code>ti.types.struct()</code>, <code>ti.types.ndarray()</code>, \u200b\u548c\u200b<code>ti.template()</code></p> <p>\u200b\u5176\u4e2d\u200b<code>scalar</code>, <code>ti.types.matrix()</code>, <code>ti.types.vector()</code>, \u200b\u548c\u200b<code>ti.types.struct()</code> \u200b\u662f\u200b\u503c\u200b\u4f20\u9012\u200b, kernel\u200b\u4f1a\u200b\u63a5\u6536\u200b\u53c2\u6570\u200b\u7684\u200b\u62f7\u8d1d\u200b\u503c\u200b\uff1b\u200b\u800c\u200b<code>ti.types.ndarray()</code>\u200b\u548c\u200b<code>ti.template()</code>\u200b\u662f\u200b\u4f20\u200b\u5f15\u7528\u200b\u503c\u200b, \u200b\u5728\u200bkernel\u200b\u4e2d\u200b\u4fee\u6539\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u539f\u6765\u200b\u7684\u200b\u6570\u636e\u200b</p> <p>Example</p> <pre><code>@ti.kernel\ndef my_kernel(x: int, y: float):\n    print(x + y)\n\nmy_kernel(1, 1.0)  # Prints 2.0\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>ti.types.ndarray()</code>\u200b\u4f5c\u4e3a\u200b\u7c7b\u578b\u200b\u63d0\u793a\u200b\uff0c\u200b\u5c06\u200bNumPy\u200b\u4e2d\u200b\u7684\u200bndarray\u200b\u6216\u200bPyTorch\u200b\u4e2d\u200b\u7684\u200btensor\u200b\u4f20\u7ed9\u200bkernel\uff0c\u200b\u4f20\u200b\u7684\u200b\u662f\u200b\u5f15\u7528\u200b\u503c\u200b</p> <p>Example</p> <pre><code>import numpy as np\nimport taichi as ti\nti.init(arch=ti.cpu)\n\nx = np.array([1, 2, 3])\ny = np.array([4, 5, 6])\n\n@ti.kernel\ndef my_kernel(x: ti.types.ndarray(), y: ti.types.ndarray()):\n    # Taichi recognizes the shape of the array x and allows you to access it in a kernel\n    for i in range(x.shape[0]):\n        x[i] += y[i]\n\nmy_kernel(x, y)\nprint(x)  # Prints [5, 7, 9]\n</code></pre>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_3","title":"\u8fd4\u56de\u503c","text":"<p>Taichi kernel\u200b\u6700\u200b\u591a\u200b\u5141\u8bb8\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u662f\u200b<code>scalar</code>, <code>ti.types.matrix()</code>, \u200b\u6216\u200b<code>ti.types.vector()</code>\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200bLLVM-based\u200b\u7684\u200b\u540e\u200b\u7aef\u200b\uff08CPU/CUDA\uff09\uff0c<code>ti.types.struct()</code>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b</p> <p>\u200b\u6982\u62ec\u200b\u6765\u8bf4\u200bTaichi kernel\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5fc5\u987b\u200b\u7b26\u5408\u200b\u4ee5\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> <ul> <li>kernel\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u5fc5\u987b\u200b\u58f0\u660e\u200b\u7c7b\u578b\u200b</li> <li> <p>kernel\u200b\u6700\u200b\u591a\u200b\u5141\u8bb8\u200b\u4e00\u4e2a\u200b\u8fd4\u56de\u503c\u200b     <pre><code>vec2 = ti.math.vec2\n\n@ti.kernel\ndef test(x: float, y: float) -&gt; vec2: # Return value must be type hinted\n    # Return x, y  # Compilation error: Only one return value is allowed\n    return vec2(x, y)  # Fine\n</code></pre></p> </li> <li> <p>kernel\u200b\u6700\u200b\u591a\u200b\u5141\u8bb8\u200b\u4e00\u4e2a\u200b<code>return</code>\u200b\u8bed\u53e5\u200b</p> </li> <li>\u200b\u5982\u679c\u200bkernel\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u662f\u200bvector\u200b\u6216\u200bmatrix\uff0c\u200b\u5b83\u200b\u4e0d\u80fd\u200b\u5305\u542b\u200b\u8d85\u8fc7\u200b32\u200b\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5982\u679c\u200b\u5305\u542b\u200b\u8d85\u8fc7\u200b32\u200b\u4e2a\u200b\u5143\u7d20\u200b\uff0ckernel\u200b\u4ecd\u200b\u5c06\u200b\u88ab\u200b\u7f16\u8bd1\u200b\uff0c\u200b\u4f46\u4f1a\u200b\u51fa\u73b0\u200bwarning</li> </ul>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_4","title":"\u5168\u5c40\u53d8\u91cf","text":"<p>\u200b\u5728\u200bTaichi\u200b\u4e2d\u200b\uff0ckernel\u200b\u5c06\u200b\u5168\u5c40\u53d8\u91cf\u200b\u89c6\u4e3a\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u5e38\u91cf\u200b(compile-time constants)\uff0c\u200b\u8fd9\u200b\u8868\u793a\u200bkernel\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u4f1a\u200b\u83b7\u53d6\u200b\u5168\u5c40\u53d8\u91cf\u200b\u7684\u200b\u5f53\u524d\u200b\u503c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e4b\u540e\u200b\u4e0d\u4f1a\u200b\u8ddf\u8e2a\u200b\u5b83\u4eec\u200b\u7684\u200b\u66f4\u6539\u200b</p> <p>Example</p> <pre><code>import taichi as ti\nti.init()\n\na = 1\n\n@ti.kernel\ndef kernel_1():\n    print(a)\n\n@ti.kernel\ndef kernel_2():\n    print(a)\n\nkernel_1()  # Prints 1\na = 2\nkernel_1()  # Prints 1\nkernel_2()  # Prints 2\n</code></pre> <p>Taichi kernel \u200b\u7684\u200b\u8981\u6c42\u200b\u603b\u7ed3\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>kernel\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u5fc5\u987b\u200b\u6709\u200b\u663e\u5f0f\u200b\u7684\u200btype annotation</li> <li>\u200b\u4e0d\u80fd\u200b\u5728\u200b\u5176\u4ed6\u200bkernel\u200b\u6216\u8005\u200bTaichi function\u200b\u4e2d\u200b\u8c03\u7528\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200bPython-scope\u200b\u4e2d\u200b\u8c03\u7528\u200b</li> <li>\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200breturn\u200b\u8bed\u53e5\u200b</li> <li>\u200b\u53ea\u80fd\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\uff08\u200b\u4e0d\u50cf\u200bpython\u200b\u53ef\u4ee5\u200bpack\u200b\u6210\u200b\u4e00\u4e2a\u200btuple\uff09</li> <li>\u200b\u8fd4\u56de\u200b\u53d8\u91cf\u200b\u7684\u200b\u5143\u7d20\u200b\u4e2a\u6570\u200b\u4e0d\u8981\u200b\u8d85\u8fc7\u200b30\uff08?\uff09</li> <li>kernel\u200b\u51fd\u6570\u200b\u7684\u200b\u8f93\u5165\u200b\u53d8\u91cf\u200b\u6709\u200b\u5927\u5c0f\u200b\u9650\u5236\u200b</li> <li>kernel\u200b\u51fd\u6570\u200b\u4f1a\u200b\u5c06\u200b\u5168\u5c40\u53d8\u91cf\u200b\u89c6\u4e3a\u200b\u5e38\u91cf\u200b\uff08\u200b\u4e0d\u5f53\u200b\u6307\u9488\u200b\uff09</li> </ul>"},{"location":"memo/pl/taichi/02_kernel_and_function/#taichi-function","title":"Taichi function","text":"<p>Taichi function\u200b\u662f\u200bkernel\u200b\u7684\u200b\u57fa\u672c\u200b\u5355\u4f4d\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4ece\u200bTaichi kernel\u200b\u6216\u200b\u53e6\u200b\u4e00\u4e2a\u200bTaichi function\u200b\u4e2d\u200b\u88ab\u200b\u8c03\u7528\u200b</p> <p>\u200b\u6240\u6709\u200b\u7684\u200bTaichi function\u200b\u662f\u200b\u5f3a\u5236\u200b\u5185\u8054\u200b(force-inlined)\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u88ab\u200bTaichi function\u200b\u8c03\u7528\u200b\u662f\u200b\u4f1a\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6240\u4ee5\u200bTaichi function\u200b\u7684\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u662f\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7684\u200b</p>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_5","title":"\u53c2\u6570","text":"<p>\u200b\u5927\u90e8\u5206\u200b\u7684\u200b\u7c7b\u578b\u200b\u90fd\u200b\u662f\u200b\u652f\u6301\u200b\u7684\u200b\uff0c\u200b\u548c\u200bTaichi kernel\u200b\u7684\u200b\u53c2\u6570\u200b\u76f8\u6bd4\u200b\uff0c\u200b\u4ee5\u4e0b\u51e0\u70b9\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u4e0d\u200b\u4e25\u683c\u8981\u6c42\u200b\u6307\u5b9a\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b(\u200b\u4f46\u200b\u4ecd\u7136\u200b\u5efa\u8bae\u200b\u8fd9\u6837\u200b\u505a\u200b)</li> <li>\u200b\u5bf9\u200b\u53c2\u6570\u200b\u7684\u200b\u6570\u91cf\u200b\u6ca1\u6709\u200b\u9650\u5236\u200b</li> </ul>"},{"location":"memo/pl/taichi/02_kernel_and_function/#_6","title":"\u8fd4\u56de\u503c","text":"<p>\u200b\u5927\u90e8\u5206\u200b\u7684\u200b\u7c7b\u578b\u200b\u90fd\u200b\u662f\u200b\u652f\u6301\u200b\u7684\u200b\uff0c\u200b\u548c\u200bTaichi kernel\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u76f8\u6bd4\u200b\uff0c\u200b\u4ee5\u4e0b\u51e0\u70b9\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\u8fd4\u56de\u503c\u200b</li> <li>\u200b\u4e0d\u200b\u4e25\u683c\u8981\u6c42\u200b\u6307\u5b9a\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b(\u200b\u4f46\u200b\u4ecd\u7136\u200b\u5efa\u8bae\u200b\u8fd9\u6837\u200b\u505a\u200b)</li> <li>\u200b\u6700\u200b\u591a\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b<code>return</code>\u200b\u8bed\u53e5\u200b</li> </ul>"},{"location":"memo/pl/taichi/02_kernel_and_function/#taichi-functionkernel","title":"Taichi function\u200b\u548c\u200bkernel\u200b\u7684\u200b\u533a\u522b","text":"<p>Taichi function\u200b\u548c\u200bkernel\u200b\u7684\u200b\u533a\u522b\u200b\u5982\u4e0b\u200b\u8868\u200b\u6240\u793a\u200b\uff1a</p> <p> </p> Taichi function\u200b\u548c\u200bkernel\u200b\u7684\u200b\u533a\u522b"},{"location":"memo/pl/taichi/02_kernel_and_function/#_7","title":"\u5faa\u73af\u200b\u7684\u200b\u5e76\u884c\u200b\u8fd0\u7b97","text":"<p>Taichi kernel\u200b\u91cc\u200b\u6700\u200b\u5916\u5c42\u200b\u7684\u200b\u4efb\u4f55\u200bfor\u200b\u5faa\u73af\u200b\u90fd\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5e76\u884c\u200b\u5316\u200b</p> <pre><code>@ti.kernel\ndef fill():\n    total = 0\n    for i in range(10): # Parallelized\n        for j in range(5): # Serialized in each parallel thread\n            total += i * j\n\n    if total &gt; 10:\n        for k in range(5):  # Not parallelized because it is not at the outermost scope\n</code></pre> <p>Warning</p> <p>\u200b\u5e76\u884c\u8ba1\u7b97\u200b\u7684\u200b\u5faa\u73af\u200b\u4e2d\u200b\u4e0d\u200b\u652f\u6301\u200b<code>break</code>\u200b\u8bed\u53e5\u200b</p> <pre><code>@ti.kernel\ndef foo():\n    for i in x:\n        ...\n        break # Error!\n\n@ti.kernel\ndef foo():\n    for i in x:\n        for j in range(10):\n            ...\n            break # OK!\n</code></pre> <p>\u200b\u901a\u8fc7\u200b<code>ti.loop_config(serialize=True)</code>\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u53ef\u4ee5\u200b\u7981\u7528\u200b\u81ea\u52a8\u200b\u5e76\u884c\u200b\u5316\u200b</p> <p>Taichi\u200b\u7684\u200b\u5faa\u73af\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u597d\u200b\u7528\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>ti.grouped(x)</code>\u200b\u5c06\u4f1a\u200b\u628a\u200b<code>x</code>\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b1D\u200b\u6570\u7ec4\u200b\u6765\u200b\u904d\u5386\u200b\u5b83\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u800c\u200b\u4e0d\u7ba1\u200b\u5b83\u200b\u7684\u200b\u5f62\u72b6\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u4e86\u200b\u5199\u200b\u591a\u7ea7\u200b\u5faa\u73af\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b:</p> <p>Example</p> <pre><code>import taichi as ti\nti.init(arch=ti.cpu)\nx = ti.field(ti.f32, shape=(2, 2))\n\n@ti.kernel\ndef loop_test():\n    count = 0\n    for i in ti.grouped(x):\n        print(i)\n        count += 1\n    print(f\"all count: {count}\")\n\nif __name__ == \"__main__\":\n    loop_test()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\uff1a <pre><code>[0, 0]\n[0, 1]\n[1, 0]\n[1, 1]\nall count: 4\n</code></pre></p> <p>ti.grouped(x) \u200b\u4e0d\u200b\u53ef\u4ee5\u200b\u5728\u200bPython-scope\u200b\u4f7f\u7528\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200bTaichi-scope\u200b\u4f7f\u7528\u200b</p>"},{"location":"memo/pl/taichi/03_type_system/","title":"Type System","text":"<p> \u200b\u7ea6\u200b 1190 \u200b\u4e2a\u200b\u5b57\u200b  86 \u200b\u884c\u200b\u4ee3\u7801\u200b  2 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 5 \u200b\u5206\u949f\u200b</p> <p>Taichi\u200b\u662f\u200b\u4e00\u95e8\u200b\u9759\u6001\u200b\u7c7b\u578b\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\uff0cTaichi\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u662f\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u5c31\u200b\u786e\u5b9a\u200b\u7684\u200b\uff0c\u200b\u4e00\u65e6\u200b\u58f0\u660e\u200b\u4e86\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5c31\u200b\u4e0d\u80fd\u200b\u518d\u200b\u4e3a\u200b\u5176\u200b\u5206\u914d\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b</p> <p>Example</p> <pre><code>@ti.kernel\ndef test():\n    x = 1  # x is the integer 1\n    x = 3.14  # x is an integer, so the value 3.14 is cast to 3 and x takes the value 3\n    x = ti.Vector([1, 1])  # Error!\n</code></pre> <p>\u200b\u4e0a\u8ff0\u200b\u4ee3\u7801\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u4f1a\u200b\u62a5\u9519\u200b\uff0c\u200b\u56e0\u4e3a\u200b<code>ti.Vector()</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\u4e0d\u80fd\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u53d8\u91cf\u200b<code>x</code></p> <p>Taichi\u200b\u4e2d\u200b\u7684\u200b<code>ti.types</code>\u200b\u6a21\u5757\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u6240\u6709\u200bTaichi\u200b\u652f\u6301\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u7c7b\u578b\u200b\u5206\u4e3a\u200b\u4e24\u7c7b\u200b: \u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b(primitive)\u200b\u548c\u200b\u590d\u5408\u200b\u7c7b\u578b\u200b(compound)</p> <ul> <li>\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u5305\u62ec\u200b\u5e38\u7528\u200b\u7684\u200b\u6570\u503c\u6570\u636e\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6bd4\u5982\u200b<code>ti.i32(int32)</code>, <code>ti.u8(uint8)</code>,\u200b\u548c\u200b<code>ti.f64(float64)</code></li> <li>\u200b\u590d\u5408\u200b\u7c7b\u578b\u200b\u5305\u62ec\u200b\u7c7b\u4f3c\u200b\u6570\u7ec4\u200b\u6216\u200b\u7c7b\u4f3c\u200b\u7ed3\u6784\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u7531\u200b\u591a\u4e2a\u200b\u6210\u5458\u200b\u7ec4\u6210\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6210\u5458\u200b\u53ef\u4ee5\u200b\u662f\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5176\u4ed6\u200b\u590d\u5408\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6bd4\u5982\u200b<code>ti.types.matrix</code>, <code>ti.types.ndarray</code>, \u200b\u548c\u200b<code>ti.types.struct</code></li> </ul>"},{"location":"memo/pl/taichi/03_type_system/#primitive-types","title":"\u57fa\u672c\u200b\u7c7b\u578b\u200b(Primitive types)","text":"<p>\u200b\u7528\u200b<code>i</code>\u200b\u8868\u793a\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c<code>u</code>\u200b\u8868\u793a\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c<code>f</code>\u200b\u8868\u793a\u200b\u6d6e\u70b9\u6570\u200b\uff0c\u200b\u540e\u9762\u200b\u8ddf\u200b\u7684\u200b\u4f4d\u6570\u200b\u53ef\u4ee5\u200b\u662f\u200b8\uff0c16\uff0c32\uff0c64\uff0c\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u4e24\u79cd\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u4e3a\u200b</p> <ul> <li><code>i32</code>: 32\u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b</li> <li><code>f32</code>: 32\u200b\u4f4d\u200b\u6d6e\u70b9\u6570\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b</li> </ul> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e0d\u540c\u200bbackend\u200b\u5bf9\u200bTaichi\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u7684\u200b\u652f\u6301\u200b\u4f1a\u200b\u6709\u6240\u4e0d\u540c\u200b\uff0c\u200b\u8be6\u89c1\u200b\u4e0b\u8868\u200b\uff1a</p> <p> </p> \u200b\u4e0d\u540c\u200bbackend\u200b\u5bf9\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u7684\u200b\u652f\u6301\u200b\u5bf9\u6bd4\u200b <p>Taichi\u200b\u5141\u8bb8\u200b\u5728\u200b\u8c03\u7528\u200b<code>ti.init()</code>\u200b\u65f6\u200b\u6307\u5b9a\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u7528\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>ti.init(default_ip=ti.i64)  # Sets the default integer type to ti.i64\nti.init(default_fp=ti.f64)  # Sets the default floating-point type to ti.f64\n</code></pre> <p>\u200b\u5728\u200b\u5e94\u7528\u200b\u4e2d\u200b\u5982\u679c\u200b\u8981\u200b\u4fdd\u6301\u6570\u636e\u200b\u7684\u200b\u9ad8\u7cbe\u5ea6\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5c06\u200b<code>default_fp</code>\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b<code>ti.F64</code></p>"},{"location":"memo/pl/taichi/03_type_system/#_1","title":"\u6570\u636e\u7c7b\u578b\u200b\u522b\u540d","text":"<p>\u200b\u5728\u200bTaichi scope\u200b\u4e2d\u200b\uff0c<code>int</code>\u200b\u548c\u200b<code>float</code>\u200b\u4f1a\u200b\u88ab\u200b\u5206\u522b\u200b\u7528\u4f5c\u200b\u9ed8\u8ba4\u200b\u6574\u6570\u200b\u548c\u200b\u6d6e\u70b9\u200b\u7c7b\u578b\u200b\u7684\u200b\u522b\u540d\u200b</p> <pre><code>ti.init(default_ip=ti.i64, default_fp=ti.f64)\n\n@ti.kernel\ndef example_cast() -&gt; int:  # the returned type is ti.i64\n    x = 3.14    # x is of ti.f64 type\n    y = int(x)  # equivalent to ti.i64(x)\n    return y\n</code></pre> <p>\u200b\u5728\u200bPython scope\u200b\u4e2d\u200b\uff0c\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200bTaichi\u200b\u7684\u200bdata container\u200b\u5e76\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u7684\u200b\u4e5f\u200b\u662f\u200b\u522b\u540d\u200b</p> <pre><code>x = ti.field(float, 5)\n# Is equivalent to:\nx = ti.field(ti.f64, 5)\n</code></pre> <p>\u200b\u9664\u4e86\u200bTaichi scope\u200b\u548c\u200bPython scope\u200b\u521b\u5efa\u200b\u7684\u200bTaichi data container\u200b\u4ee5\u5916\u200b\uff0c<code>int</code>\u200b\u548c\u200b<code>float</code>\u200b\u4f5c\u4e3a\u200bPython\u200b\u4e2d\u200b\u7684\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b</p>"},{"location":"memo/pl/taichi/03_type_system/#_2","title":"\u663e\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362","text":"<p>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>ti.cast()</code>\u200b\u51fd\u5c06\u200b\u7ed9\u5b9a\u200b\u503c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u7279\u5b9a\u200b\u7684\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b</p> <p>\u200b\u5728\u200bcompile time\u200b\u5bf9\u200b\u67d0\u4e2a\u200b\u53d8\u91cf\u200b\u5f3a\u5236\u200b\u8d4b\u4e88\u200b\u67d0\u4e2a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ee5\u514d\u200bimplicit casting / type inference\u200b\u9020\u6210\u200b\u7684\u200b\u7c7b\u578b\u200b\u9519\u8bef\u200b</p> <pre><code>@ti.kernel\ndef foo():\n    a = 3.14\n    b = ti.cast(a, ti.i32)  # 3\n    c = ti.cast(b, ti.f32)  # 3.0\n</code></pre> <p>\u200b\u8fd8\u6709\u200b\u4e00\u79cd\u200b\u66f4\u200b\u65b9\u4fbf\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u76f4\u63a5\u200b\u8f6c\u6362\u200b</p> <pre><code>@ti.kernel\ndef foo():\n    a = 3.14\n    x = int(a)    # 3\n    y = float(a)  # 3.14\n    z = ti.i32(a)  # 3\n    w = ti.f64(a)  # 3.14\n</code></pre>"},{"location":"memo/pl/taichi/03_type_system/#_3","title":"\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362","text":"<p>\u200b\u5728\u200bTaichi\u200b\u91cc\u200b\uff0c\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u53d1\u751f\u200b\u5728\u200b\u4e8c\u5143\u200b\u64cd\u4f5c\u200b\u548c\u200b\u8d4b\u503c\u200b\u64cd\u4f5c\u200b\u4e2d\u200b</p> <p>Warning</p> <p>\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u901a\u5e38\u200b\u662f\u200bbug\u200b\u4ea7\u751f\u200b\u7684\u200b\u6765\u6e90\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u800c\u662f\u200b\u663e\u5f0f\u200b\u5730\u200b\u6307\u5b9a\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u548c\u200b\u4f20\u5165\u200b\u7684\u200b\u6570\u636e\u200b</p> <p>\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7684\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> \u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7684\u200b\u89c4\u5219\u200b <p>\u200b\u6709\u200b\u4e00\u4e9b\u200b\u4f8b\u5916\u200b\uff1a</p> <ul> <li>\u200b\u903b\u8f91\u8fd0\u7b97\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>i32</code></li> <li>\u200b\u6bd4\u8f83\u200b\u8fd0\u7b97\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>i32</code></li> </ul> <p>\u200b\u8d4b\u503c\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\u53d1\u751f\u200b\u7684\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b</p> <p>Example1</p> <pre><code>@ti.kernel\ndef foo():\n    a = 3.14\n    a = 1\n    print(a)  # 1.0\n</code></pre> <p>\u200b\u5c06\u200b\u53d8\u91cf\u200b<code>a</code>\u200b\u7684\u200b\u503c\u200b\u4ece\u200b<code>int 1</code>\u200b\u8f6c\u200b\u6210\u200b<code>float 1.0</code></p> <p>Example2</p> <pre><code>@ti.kernel\ndef foo():\n    a = 1\n    a = 3.14\n    print(a)  # 3\n</code></pre> <p>\u200b\u5c06\u200b\u53d8\u91cf\u200b<code>a</code>\u200b\u7684\u200b\u503c\u200b\u4ece\u200b<code>float 3.14</code>\u200b\u8f6c\u200b\u6210\u200b<code>int 3</code></p> <p>\u200b\u7531\u6b64\u53ef\u89c1\u200b\uff0c\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u7684\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7684\u200b\u7ed3\u679c\u200b</p>"},{"location":"memo/pl/taichi/03_type_system/#compound-types","title":"\u590d\u5408\u200b\u7c7b\u578b\u200b(Compound types)","text":""},{"location":"memo/pl/taichi/03_type_system/#_4","title":"\u77e9\u9635\u200b\u548c\u200b\u5411\u91cf","text":"<p>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>ti.types.matrix()</code>\u200b\u548c\u200b<code>ti.types.vector()</code>\u200b\u6765\u81ea\u200b\u5b9a\u4e49\u200b\u521b\u5efa\u200b\u77e9\u9635\u200b\u548c\u200b\u5411\u91cf\u200b\u6570\u636e\u7c7b\u578b\u200b</p> <p>Example</p> <pre><code>vec4d = ti.types.vector(4, ti.f64)  # a 64-bit floating-point 4D vector type\nmat4x3i = ti.types.matrix(4, 3, int)  # a 4x3 integer matrix type\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u8ff0\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u522b\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u7c7b\u578b\u200b</p> <ul> <li><code>vec4d</code>: \u200b\u5143\u7d20\u200b\u4e3a\u200b64\u200b\u4f4d\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b4\u200b\u7ef4\u200b\u5411\u91cf\u200b\u7c7b\u578b\u200b</li> <li><code>mat4x3i</code>: \u200b\u5143\u7d20\u200b\u4e3a\u200b\u6574\u6570\u200b\u7684\u200b4x3\u200b\u77e9\u9635\u200b\u7c7b\u578b\u200b</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u590d\u5408\u200b\u7c7b\u578b\u200b\u6765\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u5411\u91cf\u200b\u548c\u200b\u77e9\u9635\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u53c2\u6570\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b</p> <p>Example</p> <pre><code>v = vec4d(1, 2, 3, 4)  # Create a vector instance, here v = [1.0 2.0 3.0 4.0]\n\n@ti.func\ndef length(w: vec4d):  # vec4d as type hint\n    return w.norm()\n\n@ti.kernel\ndef test():\n    print(length(v))\n</code></pre>"},{"location":"memo/pl/taichi/03_type_system/#dataclass","title":"\u7ed3\u6784\u200b\u4f53\u200b\u548c\u200b\u6570\u636e\u200b\u7c7b\u200b(dataclass)","text":"<p>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>ti.types.struct()</code>\u200b\u51fd\u6570\u200b\u6765\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u521b\u5efa\u200b\u7403\u4f53\u200b\u7c7b\u578b\u200b(<code>sphere_type</code>)\u200b\u7684\u200b\u4f8b\u5b50\u200b</p> <p>Example</p> <pre><code># Define a compound type vec3 to represent a sphere's center\nvec3 = ti.types.vector(3, float)\n# Define a compound type sphere_type to represent a sphere\nsphere_type = ti.types.struct(center=vec3, radius=float)\n# Initialize sphere1, whose center is at [0,0,0] and whose radius is 1.0\nsphere1 = sphere_type(center=vec3([0, 0, 0]), radius=1.0)\n# Initialize sphere2, whose center is at [1,1,1] and whose radius is 1.0\nsphere2 = sphere_type(center=vec3([1, 1, 1]), radius=1.0)\n</code></pre> <p>\u200b\u5982\u679c\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u6709\u200b\u5f88\u591a\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>ti.types.struct</code>\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4ee3\u7801\u200b\u6df7\u4e71\u200b\u3001\u200b\u7ec4\u7ec7\u6027\u200b\u5f88\u5dee\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u65f6\u5019\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u4e2a\u200b\u4fee\u9970\u200b\u5668\u200b<code>ti.dataclass</code>\uff0c\u200b\u5b83\u200b\u5305\u88c5\u200b\u4e86\u200bstruct\u200b\u7c7b\u578b\u200b</p> <p>Example</p> <pre><code>@ti.dataclass\nclass Sphere:\n    center: vec3\n    radius: float\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>ti.dataclass</code>\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u6211\u4eec\u200b\u5728\u200b\u6570\u636e\u200b\u7c7b\u4e2d\u200b\u5b9a\u4e49\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200bOOP\u200b\u7684\u200b\u529f\u80fd\u200b</p>"},{"location":"memo/pl/taichi/03_type_system/#_5","title":"\u521d\u59cb\u5316","text":"<p>Taichi\u200b\u4e2d\u6709\u200b\u5f88\u591a\u200b\u521d\u59cb\u5316\u200bstruct\u200b\u6216\u8005\u200bdataclass\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u9664\u4e86\u200b\u76f4\u63a5\u200b\u8c03\u7528\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u4e4b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u6309\u7167\u200b\u5b9a\u4e49\u200b\u7684\u200b\u53c2\u6570\u200b\u987a\u5e8f\u200b\u5c06\u200b\u4f4d\u7f6e\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u5229\u7528\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u7279\u5b9a\u200b\u7684\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b</li> <li>\u200b\u672a\u6307\u5b9a\u200b\u7684\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\u5c06\u200b\u88ab\u200b\u81ea\u52a8\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b0</li> </ul> <p>Example</p> <pre><code>@ti.dataclass\nclass Ray:\n    ro: vec3\n    rd: vec3\n    t: float\n\n# The definition above is equivalent to\n#Ray = ti.types.struct(ro=vec3, rd=vec3, t=float)\n# Use positional arguments to set struct members in order\nray = Ray(vec3(0), vec3(1, 0, 0), 1.0)\n# ro is set to vec3(0) and t will be set to 0\nray = Ray(vec3(0), rd=vec3(1, 0, 0))\n# both ro and rd are set to vec3(0)\nray = Ray(t=1.0)\n# ro is set to vec3(1), rd=vec3(0) and t=0.0\nray = Ray(1)\n# All members are set to 0\nray = Ray()\n</code></pre>"},{"location":"memo/pl/taichi/03_type_system/#_6","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u200b\u76ee\u524d\u200bTaichi\u200b\u7684\u200b\u590d\u5408\u200b\u7c7b\u578b\u200b\u4e2d\u200b\u53ea\u6709\u200bvector\u200b\u548c\u200bmatrix\u200b\u652f\u6301\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u5e76\u4e14\u200b\u662f\u200belement-wise\u200b\u7684\u200b</p> <p>Example</p> <pre><code>@ti.kernel\ndef foo():\n    u = ti.Vector([2.3, 4.7])\n    v = int(u)              # ti.Vector([2, 4])\n    # If you are using ti.i32 as default_ip, this is equivalent to:\n    v = ti.cast(u, ti.i32)  # ti.Vector([2, 4])\n</code></pre> <p>Taichi\u200b\u4e2d\u80fd\u200b\u505a\u200btype annotation\u200b\u7684\u200b\u5730\u65b9\u200b\u5c3d\u91cf\u200b\u90fd\u200b\u505a\u200btype annotation\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u8981\u200b\u5199\u200b\u5f97\u200b\u592a\u200b\u50cf\u200bpython\uff08\u200b\u4f8b\u5982\u200b\u8ba9\u200b\u89e3\u91ca\u5668\u200b\u8fdb\u884c\u200b\u81ea\u52a8\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff09\uff0c\u200b\u8be5\u200b\u624b\u52a8\u200b\u5f3a\u5236\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7684\u200b\u5730\u65b9\u200b\u5c3d\u91cf\u200b\u624b\u52a8\u200b\u8f6c\u200b\uff1a \uff081\uff09\u200b\u9690\u5f0f\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7ecf\u5e38\u200b\u51fa\u200b\u95ee\u9898\u200b\uff082\uff09\u200b\u4e0d\u200b\u51fa\u200b\u95ee\u9898\u200b\u4e5f\u200b\u6709\u200b\u53ef\u80fd\u200b\u56e0\u4e3a\u200b\u635f\u5931\u200b\u7cbe\u5ea6\u200b\u800c\u200b\u5728\u200b\u7f16\u8bd1\u200b\u9636\u6bb5\u200b\u62a5\u200b\u4e00\u5806\u200b\u70e6\u4eba\u200b\u7684\u200bwarnings</p>"},{"location":"memo/pl/taichi/04_data_container/","title":"Data Containers","text":"<p> \u200b\u7ea6\u200b 1623 \u200b\u4e2a\u200b\u5b57\u200b  238 \u200b\u884c\u200b\u4ee3\u7801\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 8 \u200b\u5206\u949f\u200b</p>"},{"location":"memo/pl/taichi/04_data_container/#taichi-fields","title":"Taichi Fields","text":"<p>Taichi\u200b\u4e2d\u200b\u7684\u200b<code>Field</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5168\u5c40\u200b\u7684\u200b\u6570\u636e\u200b\u5bb9\u5668\u200b\uff0c\u200b\u4ece\u200bPython scope\u200b\u548c\u200bTaichi scope\u200b\u90fd\u200b\u80fd\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u4f46\u200b\u5fc5\u987b\u200b\u5728\u200bPython scope\u200b\u4e2d\u200b\u624d\u80fd\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b<code>Field</code>\uff0c<code>Field</code>\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u6700\u9ad8\u200b\u4e3a\u200b8</p>"},{"location":"memo/pl/taichi/04_data_container/#fields","title":"\u6807\u91cf\u200b fields","text":"<p>Scalar field\u200b\u5b58\u50a8\u200b\u7684\u200b\u662f\u200b\u6807\u91cf\u200b\uff0c\u200b\u662f\u200b\u6700\u200b\u57fa\u672c\u200b\u7684\u200bfield</p> <ul> <li>\u200b\u4e00\u4e2a\u200b0D\u200b\u6807\u91cf\u200b field\u200b\u662f\u200b\u5355\u4e2a\u200b\u6807\u91cf\u200b</li> <li>\u200b\u4e00\u4e2a\u200b1D\u200b\u6807\u91cf\u200b field\u200b\u662f\u200b\u7531\u200b\u6807\u91cf\u200b\u7ec4\u6210\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b</li> <li>\u200b\u4e00\u4e2a\u200bND\u200b\u6807\u91cf\u200b field\u200b\u662f\u200b\u7531\u200b\u6807\u91cf\u200b\u7ec4\u6210\u200b\u7684\u200b\u4e00\u4e2a\u200bN\u200b\u7ef4\u200b\u6570\u7ec4\u200b</li> </ul>"},{"location":"memo/pl/taichi/04_data_container/#_1","title":"\u58f0\u660e","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>ti.field(dtype, shape)</code>\u200b\u6765\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u6807\u91cf\u200b field\uff0c<code>dtype</code>\u200b\u662f\u200bTaichi\u200b\u4e2d\u200b\u7684\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff0c<code>shape</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7531\u200b\u6574\u6570\u200b\u6784\u6210\u200b\u7684\u200b\u5143\u7ec4\u200b\uff0c\u200b\u6b64\u5916\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>field.dtype</code>\u200b\u548c\u200b<code>field.shape</code>\u200b\u6765\u200b\u83b7\u5f97\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5c5e\u6027\u200b</p> <p>\u200b\u6bcf\u5f53\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200bfield\u200b\u540e\u200b\uff0cTaichi\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5c06\u200b\u5176\u200b\u5143\u7d20\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b0</p> <pre><code>f_0d = ti.field(ti.f32, shape=())  # 0D field\nf_1d = ti.field(ti.i32, shape=9)  # A 1D field of length 9\n\nf1[None] = 1  # Must use `None` to access a 0D field\nf2[0] = 1  # Use 0 to access a 1D field of length 1\n\nf_2d = ti.field(int, shape=(3, 6))  # A 2D field in the shape (3, 6)\n</code></pre> <p>Warning</p> <p>Taichi\u200b\u7684\u200bfields\u200b\u4e0d\u200b\u652f\u6301\u200b\u5207\u7247\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u884c\u4e3a\u200b\u90fd\u200b\u662f\u200b\u4e0d\u200b\u88ab\u200b\u5141\u8bb8\u200b\u7684\u200b</p> <pre><code>for x in f_2d[0]:  # Error! You tried to access its first row\uff0cbut it is not supported\n    ...\n\n\nf_2d[0][3:] = [4, 5, 6]  # Error! You tried to access a slice of the first row, but it is not supported\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>field.fill()</code>\u200b\u7684\u200b\u65b9\u5f0f\u200b\u7528\u200b\u4e00\u4e2a\u200b\u7ed9\u5b9a\u200b\u503c\u200b\u586b\u5145\u200bfield</p> <pre><code>x = ti.field(int, shape=(5, 5))\nx.fill(1)  # Sets all elements in x to 1\n\n@ti.kernel\ndef test():\n    x.fill(-1)  # Sets all elements in x to -1\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#fields_1","title":"\u5411\u91cf\u200b fields","text":""},{"location":"memo/pl/taichi/04_data_container/#_2","title":"\u58f0\u660e","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>ti.Vector.field(n, dtype, shape)</code>\u200b\u6765\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b<code>n</code>\u200b\u7ef4\u200b\u7684\u200b\u5411\u91cf\u200b field\uff0c<code>dtype</code>\u200b\u548c\u200b<code>shape</code>\u200b\u4e0e\u200b\u6807\u91cf\u200b field\u200b\u4e00\u6837\u200b</p> <pre><code># Declares a 3x3 vector field comprising 2D vectors\nf = ti.Vector.field(n=2, dtype=float, shape=(3, 3))\n\n\nbox_size = (300, 300, 300)  # A 300x300x300 grid in a 3D space\n\n# Declares a 300x300x300 vector field, whose vector dimension is n=4\nvolumetric_field = ti.Vector.field(n=4, dtype=ti.f32, shape=box_size)\n</code></pre> <p>\u200b\u8bbf\u95ee\u200b0\u200b\u7ef4\u200b\u7684\u200b\u5411\u91cf\u200b field\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u540c\u6837\u200b\u9700\u8981\u200b\u7528\u200b<code>None</code>\u200b\u6765\u200b\u4f5c\u4e3a\u200b\u7d22\u5f15\u200b</p> <pre><code>x = ti.Vector.field(n=3, dtype=ti.f32, shape=()) # A 0D vector field\n\nitem1 = x[None][0]\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#fields_2","title":"\u77e9\u9635\u200b fields","text":""},{"location":"memo/pl/taichi/04_data_container/#_3","title":"\u58f0\u660e","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>ti.Matrix.field(N, M, dtype, shape)</code>\u200b\u6765\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b<code>NxM</code>\u200b\u7684\u200b\u77e9\u9635\u200b field\uff0c<code>dtype</code>\u200b\u548c\u200b<code>shape</code>\u200b\u4e0e\u200b\u6807\u91cf\u200b field\u200b\u4e00\u6837\u200b</p> <pre><code># Declares a 300x400x500 matrix field, each of its elements being a 3x2 matrix\ntensor_field = ti.Matrix.field(n=3, m=2, dtype=ti.f32, shape=(300, 400, 500))\n</code></pre> <p>\u200b\u8bbf\u95ee\u200b0\u200b\u7ef4\u200b\u7684\u200b\u77e9\u9635\u200b field\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u540c\u6837\u200b\u9700\u8981\u200b\u7528\u200b<code>None</code>\u200b\u6765\u200b\u4f5c\u4e3a\u200b\u7d22\u5f15\u200b</p> <pre><code>x = ti.Matrix.field(n=3, m=4, dtype=ti.f32, shape=()) # A 0D matrix field\n\nitem1 = x[None][0, 1]\n</code></pre> <p>\u200b\u5bf9\u200bMatrix\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u5c55\u5f00\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b</p> <pre><code>import taichi as ti\nti.init()\n\na = ti.Matrix.field(n=2, m=3, dtype=ti.f32, shape=(2, 2))\n@ti.kernel\ndef test():\n    for i in ti.grouped(a):\n        # a[i] is a 2x3 matrix\n        a[i] = [[1, 1, 1], [1, 1, 1]]\n        # The assignment is unrolled to the following at `compile time`:\n        # a[i][0, 0] = 1\n        # a[i][0, 1] = 1\n        # a[i][0, 2] = 1\n        # a[i][1, 0] = 1\n        # a[i][1, 1] = 1\n        # a[i][1, 2] = 1\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\u5c3d\u91cf\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b\u592a\u5927\u200b\u7684\u200bfield dimension\uff0c\u200b\u800c\u662f\u200b\u4f7f\u7528\u200b\u6bd4\u8f83\u200b\u5927\u200b\u7684\u200bmatrix shape</p> <p>Example</p> <pre><code># not recommend\nm = ti.Matrix.field(64, 32, dtype=ti.f32, shape=(3, 2))\n\n# recommend\nm = ti.Matrix.field(3, 2, dtype=ti.f32, shape=(64, 32))\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#fields_3","title":"\u7ed3\u6784\u200b\u4f53\u200b fields","text":""},{"location":"memo/pl/taichi/04_data_container/#_4","title":"\u58f0\u660e","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>ti.Struct.field(members, shape)</code>\u200b\u6765\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b field\uff0c\u200b\u5176\u4e2d\u200b<code>members</code>\u200b\u662f\u200b\u5b57\u5178\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c<code>shape</code>\u200b\u662f\u200b\u5143\u7ec4\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d8\u91cf\u200b</p> <p>Taichi\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u200b field\u200b\u6709\u200b\u4e24\u79cd\u200b\u8bbf\u95ee\u200b\u5143\u7d20\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff1aindex-first\u200b\u548c\u200bname-first</p> <p>Example</p> <pre><code># Sets the position of the first particle in the field to [0.0, 0.0, 0.0]\nparticle_field[0].pos = vec3(0) # particle_field is a 1D struct field, pos is a 3D vector\n\n# Sets the mass of the first particle in the field to 1.0\nparticle_field.mass[0] = 1.0\n\n# Sets all mass of the particles in the struct field to 1.0\nparticle_field.mass.fill(1.0)\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#_5","title":"\u7ec4\u7ec7\u200b\u9ad8\u6548\u200b\u7684\u200b\u6570\u636e\u200b\u5e03\u5c40","text":"<p>\u200b\u9ad8\u6548\u200b\u6570\u636e\u200b\u5e03\u5c40\u200b\u7684\u200b\u6838\u5fc3\u200b\u539f\u5219\u200b\u662f\u200b\u5c40\u90e8\u6027\u200b\uff0c\u200b\u4e00\u822c\u200b\u9ad8\u6548\u200b\u7684\u200b\u6570\u636e\u200b\u5e03\u5c40\u200b\u81f3\u5c11\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u7279\u70b9\u200b\u4e4b\u4e00\u200b</p> <ul> <li>\u200b\u7a20\u5bc6\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b</li> <li>\u200b\u5c0f\u200b\u8303\u56f4\u200b\u6570\u636e\u200b\u5faa\u73af\u200b</li> <li>\u200b\u987a\u5e8f\u200b\u52a0\u8f7d\u200b\u4e0e\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b</li> </ul> <p>Taichi\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7075\u6d3b\u200b\u7684\u200b\u8bed\u53e5\u200b<code>ti.root.X</code>\u200b\u7528\u4e8e\u200b\u63cf\u8ff0\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u6570\u636e\u7ec4\u7ec7\u200b</p> <ul> <li>\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b0\u200b\u7ef4\u200bfiled</li> </ul> <pre><code>x = ti.field(ti.f32)\nti.root.place(x)\n\n# is# equivalent to:\nx = ti.field(ti.f32, shape=())\n</code></pre> <ul> <li>\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u5f62\u72b6\u200b\u4e3a\u200b3\u200b\u7684\u200b1\u200b\u7ef4\u200bfield</li> </ul> <pre><code>x = ti.field(ti.f32)\nti.root.dense(ti.i, 3).place(x) # `ti.i`\n\n# is equivalent to:\nx = ti.field(ti.f32, shape=3)\n</code></pre> <ul> <li>\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u5f62\u72b6\u200b\u4e3a\u200b(3, 4)\u200b\u7684\u200b2\u200b\u7ef4\u200bfield</li> </ul> <pre><code>x = ti.field(ti.f32)\nti.root.dense(ti.ij, (3, 4)).place(x) # `ti.ij`\n# is equivalent to:\nx = ti.field(ti.f32, shape=(3, 4))\n\n# nest use of dense is also available\nx = ti.field(ti.f32)\nti.root.dense(ti.i, 3).dense(ti.j, 4).place(x)\n</code></pre> <p>\u200b\u4e0a\u8ff0\u200b\u7528\u200b\u5d4c\u5957\u200b<code>dense</code>\u200b\u8bed\u53e5\u200b\u6784\u5efa\u200b\u7684\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u548c\u200b\u7528\u200b<code>ti.field</code>\u200b\u6784\u5efa\u200b\u7684\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u4e0d\u200b\u5b8c\u5168\u76f8\u540c\u200b\uff0c\u200b\u867d\u7136\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u8bed\u53e5\u200b\u90fd\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u76f8\u540c\u200b\u5f62\u72b6\u200b\u7684\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u7684\u200b<code>SNodeTree</code>\u200b\u5c42\u7ea7\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b</p> <p> </p> <p><code>ti.root.X</code>\u200b\u8bed\u53e5\u200b\u9010\u6b65\u200b\u5c06\u200b<code>Field</code>\u200b\u7684\u200b\u5f62\u72b6\u200b\u7ed1\u5b9a\u200b\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8f74\u200b\uff0c\u200b\u901a\u8fc7\u200b\u591a\u4e2a\u200b\u8bed\u53e5\u200b\u7684\u200b\u5d4c\u5957\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u66f4\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b<code>Field</code></p>"},{"location":"memo/pl/taichi/04_data_container/#aossoa","title":"AoS\u200b\u548c\u200bSoA","text":"<p>AoS\u200b\u5168\u79f0\u200barray of structures\uff08\u200b\u6570\u7ec4\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff09\uff0cSoA\u200b\u5168\u79f0\u200bstructure of arrays\uff08\u200b\u7ed3\u6784\u200b\u4f53\u200b\u6570\u7ec4\u200b\uff09\uff0c \u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b4\u200b\u4e2a\u200b\u50cf\u7d20\u200b\u548c\u200b3\u200b\u4e2a\u200b\u989c\u8272\u200b\u901a\u9053\u200b\u7684\u200bRGB\u200b\u56fe\u50cf\u200b\uff1aAoS\u200b\u5e03\u5c40\u200b\u5b58\u50a8\u200b\u4e3a\u200b<code>RGBRGBRGBRGB</code>\uff0c\u200b\u800c\u200bSoA\u200b\u5e03\u5c40\u200b\u5b58\u50a8\u200b\u4e3a\u200b<code>RRRRGGGGBBBB</code>\uff0c\u200b\u9009\u62e9\u200bAoS\u200b\u8fd8\u662f\u200bSoA\u200b\u5e03\u5c40\u200b\u5f88\u5927\u200b\u7a0b\u5ea6\u200b\u4e0a\u200b\u53d6\u51b3\u4e8e\u200bfield\u200b\u7684\u200b\u8bbf\u95ee\u200b\u6a21\u5f0f\u200b</p> <p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>ti.root.X</code>\u200b\u8bed\u53e5\u200b\u6784\u5efa\u200bAoS\u200b\u548c\u200bSoA</p> <pre><code># SoA field\nx = ti.field(ti.f32)\ny = ti.field(ti.f32)\nti.root.dense(ti.i, M).place(x)\nti.root.dense(ti.i, M).place(y)\n\n#  address: low ................................. high\n#           x[0]  x[1]  x[2] ... y[0]  y[1]  y[2] ...\n\n# AoS field\nx = ti.field(ti.f32)\ny = ti.field(ti.f32)\nti.root.dense(ti.i, M).place(x, y)\n\n#  address: low .............................. high\n#           x[0]  y[0]  x[1]  y[1]  x[2]  y[2] ...\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#_6","title":"\u7ba1\u7406\u200b\u5185\u5b58\u200b\u5360\u7528","text":"<p>\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cTaichi\u200b\u5bf9\u200b\u5185\u5b58\u200b\u7684\u200b\u5206\u914d\u200b\u548c\u200b\u9500\u6bc1\u200b\u662f\u200b\u4e0d\u200b\u53ef\u89c1\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\uff0c\u200b\u6211\u4eec\u200b\u6709\u65f6\u200b\u4f1a\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u7ba1\u7406\u200b\u5185\u5b58\u200b\u5206\u914d\u200b</p> <p>\u200b\u9488\u5bf9\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0cTaichi \u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>FieldsBuilder</code>\uff0c\u200b\u7528\u4e8e\u200b\u652f\u6301\u200bfield\u200b\u76f8\u5173\u200b\u5185\u5b58\u200b\u7684\u200b\u624b\u52a8\u200b\u5206\u914d\u200b\u548c\u200b\u9500\u6bc1\u200b\uff0c<code>FieldsBuilder</code>\u200b\u548c\u200b<code>ti.root</code>\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u58f0\u660e\u200b API\uff0c\u200b\u4f46\u200b\u8fd8\u200b\u9700\u8981\u200b\u5728\u200b\u6240\u6709\u200b\u58f0\u660e\u200b\u4e4b\u540e\u200b\u8c03\u7528\u200b<code>finalize()</code>\uff0c<code>finalize()</code>\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b<code>SNodeTree</code>\u200b\u5bf9\u8c61\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u968f\u540e\u200b\u7684\u200b\u5185\u5b58\u200b\u9500\u6bc1\u200b</p> <p>Example</p> <pre><code>import taichi as ti\nti.init()\n\n@ti.kernel\ndef func(v: ti.template()):\n    for I in ti.grouped(v):\n        v[I] += 1\n\nfb1 = ti.FieldsBuilder()\nx = ti.field(dtype=ti.f32)\nfb1.dense(ti.ij, (5, 5)).place(x)\nfb1_snode_tree = fb1.finalize()  # Finalizes the FieldsBuilder and returns a SNodeTree\nfunc(x)\nfb1_snode_tree.destroy()  # Destruction\n\nfb2 = ti.FieldsBuilder()\ny = ti.field(dtype=ti.f32)\nfb2.dense(ti.i, 5).place(y)\nfb2_snode_tree = fb2.finalize()  # Finalizes the FieldsBuilder and returns a SNodeTree\nfunc(y)\nfb2_snode_tree.destroy()  # Destruction\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#taichi-ndarray","title":"Taichi Ndarray","text":"<p>Taichi ndarray\u200b\u548c\u200bnumpy ndarray\u200b\u5f88\u200b\u76f8\u8fd1\u200b\uff0c\u200b\u4f46\u662f\u200b\u5b83\u200b\u7684\u200b\u5e95\u5c42\u200b\u5185\u5b58\u200b\u662f\u200b\u7531\u200bTaichi\u200b\u67b6\u6784\u200b\u5206\u914d\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u7531\u200bTaichi\u200b\u7684\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7ba1\u7406\u200b</p> <p>Taichi ndarray\u200b\u4f1a\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u8fde\u7eed\u200b\u7684\u200b\u5185\u5b58\u200b\u5757\u200b\uff0c\u200b\u5e76\u200b\u5141\u8bb8\u200b\u4e0e\u200b\u5916\u90e8\u200b\u5e93\u200b\u8fdb\u884c\u200b\u76f4\u63a5\u200b\u7684\u200b\u6570\u636e\u4ea4\u6362\u200b(numpy ndarray/torch tensor)\uff0c\u200b\u76f8\u6bd4\u200bTaichi field\u200b\u6765\u8bf4\u200b\uff0c\u200b\u66f4\u200b\u9002\u5408\u200b\u7528\u4e8e\u200b\u7a20\u5bc6\u200b\u7684\u200b\u6570\u636e\u200b</p> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>ti.ndarray</code>\u200b\u6765\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200bTaichi ndarray\uff0c<code>dtype</code>\u200b\u53ef\u4ee5\u200b\u662f\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200bmatrix/vector\u200b\u8fd9\u4e9b\u200b\uff0c\u200b\u8981\u200b\u6ce8\u610f\u200b\u53ea\u80fd\u200b\u5728\u200bPython scope\u200b\u4e2d\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200bndarray\uff0c\u200b\u5e76\u4e14\u200b\u5176\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u4f1a\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b0</p> <pre><code>arr = ti.ndarray(dtype=ti.math.vec3, shape=(4, 4))\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#ndarray","title":"Ndarray\u200b\u7684\u200b\u5e38\u7528\u200b\u8fd0\u7b97","text":"<ul> <li>\u200b\u7528\u200b\u6807\u91cf\u200b\u503c\u200b\u586b\u5145\u200bndarray</li> </ul> <pre><code>arr.fill(1.0)\n</code></pre> <ul> <li>\u200b\u4ece\u200bPython scope\u200b\u8bfb\u53d6\u200b/\u200b\u5199\u5165\u200bndarray\u200b\u5143\u7d20\u200b</li> </ul> <pre><code># Returns a ti.Vector, which is a copy of the element\nprint(arr[0, 0]) # [1.0, 1.0, 1.0]\n\n# Writes to an element\narr[0, 0] = [1.0, 2.0, 3.0] # arr[0, 0] is now [1.0, 2.0, 3.0]\n\n# Writes to a scalar inside vector element\narr[0, 0][1] = 2.2  # arr[0, 0] is now [1.0, 2.2, 3.0]\n</code></pre> <ul> <li>Ndarrays\u200b\u7684\u200b\u6570\u636e\u200b\u62f7\u8d1d\u200b</li> </ul> <pre><code>import copy\n# Copies from another ndarray with the same size\nb = ti.ndarray(dtype=ti.math.vec3, shape=(4, 4))\nb.copy_from(arr)  # Copies all data from arr to b\n\n# Deep copy\nc = copy.deepcopy(b)  # c is a new ndarray that has a copy of b's data.\n\n# Shallow copy\nd = copy.copy(b)  # d is a shallow copy of b; they share the underlying memory\nd[0, 0][0] = 1.2  # This mutates b as well, so b[0, 0][0] is now 1.2\n</code></pre> <ul> <li>\u200b\u4e0e\u200bNumPy ndarrays\u200b\u7684\u200b\u6570\u636e\u4ea4\u6362\u200b\uff08\u200b\u8fd9\u200b\u4e00\u90e8\u5206\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u770b\u200b \u200b\u4e0e\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u4ea4\u4e92\u200b)</li> </ul> <pre><code># to_numpy returns a NumPy array with the same shape as d and a copy of d's value\ne = d.to_numpy()\n\n# from_numpy copies the data in the NumPy array e to the Taichi ndarray d\ne.fill(10.0)  # Fills in the NumPy array with value 10.0\nd.from_numpy(e)  # Now d is filled in with 10.0\n</code></pre> <p>\u200b\u5728\u200bTaichi kernel\u200b\u4e2d\u200b\u4f20\u5165\u200bTaichi ndarrays\uff0c\u200b\u4f20\u5165\u200b\u7684\u200b\u662f\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b</p> <pre><code>@ti.kernel\ndef foo(A: ti.types.ndarray(dtype=ti.f32, ndim=2)):\n    do_something(A)\n</code></pre> <p>\u200b\u5176\u4e2d\u200b<code>dtype</code>\u200b\u548c\u200b<code>ndim</code>\u200b\u53c2\u6570\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6307\u5b9a\u200b\u7684\u8bdd\u200b\uff0cTaichi\u200b\u4f1a\u200b\u4ece\u200b\u8f93\u5165\u200b\u7684\u200bndarray\u200b\u63a8\u65ad\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u6307\u5b9a\u200b\u4e86\u200b\u90a3\u4e48\u200bTaichi\u200b\u4f1a\u200b\u9a8c\u8bc1\u200b\u4f20\u5165\u200b\u7684\u200bndarray\u200b\u662f\u5426\u200b\u548c\u200b\u53c2\u6570\u200b\u58f0\u660e\u200b\u4e00\u81f4\u200b\uff0c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u4f1a\u200b\u62a5\u9519\u200b</p> <p>\u200b\u5916\u90e8\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u4f20\u5165\u200bTaichi kernel\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u8fdb\u4e00\u6b65\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b</p> <pre><code>ti.init(arch=ti.cuda)\n\n@ti.kernel\ndef add_one(arr : ti.types.ndarray(dtype=ti.f32, ndim=2)):\n    for i in ti.grouped(arr):\n        arr[i] = arr[i] + 1.0\n\narr_np = np.ones((3, 3), dtype=np.float32)\nadd_one(arr_np) # arr_np is updated by taichi kernel\n\narr_torch = torch.tensor([[1, 2, 3], [4, 5, 6], [7, 8, 9]], device='cuda:0')\nadd_one(arr_torch) # arr_torch is updated by taichi kernel\n</code></pre> <p>Kernel\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u7684\u200bndarray\u200b\u6a21\u677f\u200b\u590d\u7528\u200b\uff08\u200b\u4e0d\u200b\u6307\u5b9a\u200bndarray\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u5927\u5c0f\u200b\uff09</p> <pre><code>@ti.kernel\ndef test(arr: ti.types.ndarray()):\n    for I in ti.grouped(arr):\n        arr[I] += 2\n\na = ti.ndarray(dtype=ti.math.vec3, shape=(4, 4))\nb = ti.ndarray(dtype=ti.math.vec3, shape=(5, 5))\nc = ti.ndarray(dtype=ti.f32, shape=(4, 4))\nd = ti.ndarray(dtype=ti.f32, shape=(8, 6))\ne = ti.ndarray(dtype=ti.math.vec3, shape=(4, 4, 4))\ntest(a) # New kernel compilation\ntest(b) # Reuse kernel compiled for a\ntest(c) # New kernel compilation\ntest(d) # Reuse kernel compiled for c\ntest(e) # New kernel compilation\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u7f16\u8bd1\u200b\u89c4\u5219\u200b\u4e5f\u200b\u9002\u7528\u200b\u4e8e\u200bNumPy\u200b\u6216\u200bPyTorch\u200b\u7684\u200b\u6570\u636e\u200b</p>"},{"location":"memo/pl/taichi/04_data_container/#_7","title":"\u7a7a\u95f4\u200b\u7a00\u758f\u200b\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u5728\u200bTaichi\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>SNode</code>\u200b\u7ec4\u6210\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bVDB\u200b\u548c\u200bSPGrid\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0cTaichi\u200b\u7684\u200b\u7a7a\u95f4\u200b\u7a00\u758f\u200b\u6570\u636e\u7ed3\u6784\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u4f18\u70b9\u200b</p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7d22\u5f15\u200b\u8fdb\u884c\u200b\u8bbf\u95ee\u200b</li> <li>\u200b\u8fed\u4ee3\u200b\u65f6\u200b\u81ea\u52a8\u200b\u5e76\u884c\u200b</li> <li>\u200b\u81ea\u52a8\u200b\u4f18\u5316\u200b\u5185\u5b58\u200b\u8bbf\u95ee\u200b</li> </ul> <p>TODO: Field\u200b\u7684\u200b\u7a00\u758f\u200b\u6027\u200b\u6682\u65f6\u200b\u7528\u200b\u4e0d\u5230\u200b\uff0c\u200b\u4e4b\u540e\u200b\u7528\u5230\u200b\u4e86\u200b\u518d\u5b66\u200b</p>"},{"location":"memo/pl/taichi/04_data_container/#_8","title":"\u5750\u6807\u200b\u504f\u79fb","text":"<p>\u200b\u5728\u200b\u5b9a\u4e49\u200bTaichi fiel\u200b\u7684\u200b\u65f6\u5019\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5750\u6807\u200b\u504f\u79fb\u200b\uff0c\u200b\u4f1a\u200b\u6539\u53d8\u200bfield\u200b\u7684\u200b\u8fb9\u754c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4ece\u200b0\u200b\u5f00\u59cb\u200b</p> <pre><code>a = ti.Matrix.field(2, 2, dtype=ti.f32, shape=(32, 64), offset=(-16, 8))\n\na[-16, 8]  # lower left corner\na[16, 8]   # lower right corner\na[-16, 72]  # upper left corner\na[16, 72]   # upper right corner\n</code></pre> <p>\u200b\u5750\u6807\u200b\u504f\u79fb\u200b\u53c2\u6570\u200b<code>offset</code>\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u8981\u200b\u548c\u200bTaichi field\u200b\u7684\u200b\u5f62\u72b6\u200b\u4e00\u81f4\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u62a5\u9519\u200b</p>"},{"location":"memo/pl/taichi/04_data_container/#_9","title":"\u4e0e\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u4ea4\u4e92","text":""},{"location":"memo/pl/taichi/04_data_container/#numpy-ndarray","title":"NumPy ndarray","text":"<p>\u200b\u5c06\u200b\u4e00\u4e2a\u200bNumPy\u200b\u7684\u200barray\u200b\u5bfc\u5165\u5230\u200bTaichi scope\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200bTaichi field <code>f</code>\uff0cshape\u200b\u548c\u200bdtype\u200b\u548c\u200b\u8981\u200b\u5bfc\u5165\u200b\u7684\u200bndarray\u200b\u4e00\u81f4\u200b\uff0c\u200b\u901a\u8fc7\u200b<code>f.from_numpy(arr)</code>\u200b\u5c06\u200bndarray\u200b\u7684\u200b\u503c\u200b\u62f7\u8d1d\u5230\u200b<code>f</code>\u200b\u4e2d\u200b</li> </ul> <pre><code>x = ti.field(float, shape=(3, 3))\na = np.arange(9).reshape(3, 3).astype(np.int32)\nx.from_numpy(a)\nprint(x)\n\n#[[0 1 2]\n# [3 4 5]\n# [6 7 8]]\n\narr = x.to_numpy()\n#array([[0, 1, 2],\n#       [3, 4, 5],\n#       [6, 7, 8]], dtype=int32)\n</code></pre> <ul> <li>\u200b\u4ee5\u200b\u53c2\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5c06\u200bndarray\u200b\u4f20\u5165\u200bTaichi function\u200b\u6216\u8005\u200bkernel\u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>ti.types.ndarray()</code>\u200b\u4f5c\u4e3a\u200b\u7c7b\u578b\u200b\u63d0\u793a\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u5f62\u5f0f\u200b\u4f20\u5165\u200b\u7684\u200b\u662f\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u901a\u5e38\u200b\u8981\u200b\u5bf9\u200bndarray\u200b\u64cd\u4f5c\u200b\u65f6\u624d\u200b\u4f1a\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b</li> </ul> <pre><code>import taichi as ti\nimport numpy as np\nti.init()\n\na = np.zeros((5, 5))\n\n@ti.kernel\ndef test(a: ti.types.ndarray()):\n    for i in range(a.shape[0]):  # a parallel for loop\n        for j in range(a.shape[1]):\n            a[i, j] = i + j\n\ntest(a)\nprint(a)\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#pytorch-tensor","title":"PyTorch tensor","text":"<p>\u200b\u548c\u200bNumPy ndarray\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>x.from_torch()</code>\u200b\u548c\u200b<code>x.to_torch()</code>\u200b\u5bfc\u5165\u200b\u548c\u200b\u5bfc\u51fa\u200btensor\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u8c03\u7528\u200b<code>to_torch()</code>\u200b\u7684\u200b\u65f6\u5019\u200b\u8fd8\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b<code>device</code></p> <pre><code>x = ti.field(float, shape=(3, 3))\nt = x.to_torch(device=\"cuda:0\")\nprint(t.device) # device(type='cuda', index=0)\n</code></pre>"},{"location":"memo/pl/taichi/04_data_container/#_10","title":"\u5916\u90e8\u200b\u6570\u636e\u200b\u7684\u200b\u5f62\u72b6","text":"<p>\u200b\u7528\u200bTaichi field\u200b\u548c\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u4ea4\u4e92\u200b\u65f6\u200b\uff0c\u200b\u5f62\u72b6\u200b\u5339\u914d\u200b\u7684\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u6807\u91cf\u200b field</li> </ul> <pre><code>field = ti.field(int, shape=(256, 512))\narray = field.to_numpy()\n\nfield.shape[0]=array.shape[0]\nfield.shape[1]=array.shape[1]\n</code></pre> <ul> <li>n\u200b\u7ef4\u200b\u5411\u91cf\u200b field</li> </ul> <pre><code>field = ti.Vector.field(3, int, shape=(256, 512))\narray = field.to_numpy()\n\nfield.shape[0]=array.shape[0]\nfield.shape[1]=array.shape[1]\nn=array.shape[1]\n</code></pre> <p>\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u7684\u200b\u5f62\u72b6\u200b\u4e3a\u200b<code>(*field_shape, n)</code></p> <ul> <li>n-by-m (n x m)\u200b\u77e9\u9635\u200b field</li> </ul> <pre><code>field = ti.Matrix.field(3, 4, ti.i32, shape=(256, 512))\narray = field.to_numpy()\narray.shape  # (256, 512, 3, 4)\n</code></pre> <p>\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u7684\u200b\u5f62\u72b6\u200b\u4e3a\u200b<code>(*field_shape, n, m)</code></p> <p>Hint</p> <p>\u200b\u6b64\u5916\u200b\uff0cTaichi kernel\u200b\u4e2d\u200b\u7684\u200b\u5916\u90e8\u200b\u6570\u636e\u200b\u4f7f\u7528\u200b\u5176\u200b\u7269\u7406\u200b\u5185\u5b58\u200b\u5e03\u5c40\u200b\u8fdb\u884c\u200b\u7d22\u5f15\u200b\uff0c\u200b\u5bf9\u4e8e\u200bPyTorch tensor\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5728\u200b\u4f20\u5165\u200b\u5230\u200bTaichi kernel\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5fc5\u987b\u200b\u662f\u200b\u8fde\u7eed\u200b\u7684\u200b(needs to be made contiguous)</p> <pre><code>x = ti.field(dtype=int, shape=(3, 3))\ny = torch.Tensor([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\ny = y.T # Transposing the tensor returns a view of the tensor which is not contiguous\n\n@ti.kernel\ndef copy_scalar(x: ti.template(), y: ti.types.ndarray()):\n    for i, j in x:\n        y[i, j] = x[i, j]\n\n# copy(x, y) # error!\ncopy(x, y.clone()) # correct\ncopy(x, y.contiguous()) # correct\n</code></pre>"},{"location":"memo/pl/taichi/05_differentiable_programming/","title":"Differentiable Programming","text":"<p> \u200b\u7ea6\u200b 209 \u200b\u4e2a\u200b\u5b57\u200b  37 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Taichi\u200b\u901a\u8fc7\u200b<code>ti.ad.Tape()</code>\u200b\u6216\u200b\u66f4\u200b\u7075\u6d3b\u200b\u7684\u200b<code>kernel.grad()</code>\u200b\u8bed\u6cd5\u200b\u6765\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u68af\u5ea6\u200b\u7684\u200b\u8ba1\u7b97\u200b</p>"},{"location":"memo/pl/taichi/05_differentiable_programming/#tiadtape","title":"\u4f7f\u7528\u200bti.ad.Tape()","text":"<p>Example</p> <pre><code>x = ti.field(dtype=ti.f32, shape=(), needs_grad=True)\ny = ti.field(dtype=ti.f32, shape=(), needs_grad=True)\n\n@ti.kernel\ndef compute_y():\n    y[None] = ti.sin(x[None])\n\nwith ti.ad.Tape(y):\n    compute_y()\n\nprint('dy/dx =', x.grad[None], ' at x =', x[None])\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u70b9\u200b\u9700\u8981\u200b\u5173\u6ce8\u200b</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u8981\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5728\u200b\u58f0\u660e\u200b\u7684\u200b\u65f6\u5019\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b<code>needs_grad=True</code>\uff0c\u200b\u624d\u80fd\u200b\u901a\u8fc7\u200b<code>with ti.ad.Tape()</code>\u200b\u8bed\u53e5\u200b\u81ea\u52a8\u200b\u5fae\u5206\u200b</li> </ul> <p>Tip</p> <p>\u200b\u6bcf\u4e2a\u200b\u53d8\u91cf\u200b\u5728\u200b\u58f0\u660e\u200b\u7684\u200b\u65f6\u5019\u200b\u90fd\u200b\u8981\u200b\u5199\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b\u4f1a\u200b\u5f88\u200b\u9ebb\u70e6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200bTaichi\u200b\u7684\u200bAPI<code>ti.root.lazy_grad()</code>\u200b\u6765\u200b\u5b9e\u73b0\u200b</p> <ul> <li><code>ti.ad.Tape()</code>\u200b\u4e2d\u200b\u7684\u200b\u53c2\u6570\u200b\u5fc5\u987b\u200b\u662f\u200b0\u200b\u7ef4\u200b\u7684\u200bfield</li> </ul>"},{"location":"memo/pl/taichi/05_differentiable_programming/#kernelgrad","title":"\u4f7f\u7528\u200bkernel.grad()","text":"<p>\u200b\u548c\u200b\u4f7f\u7528\u200b<code>ti.ad.Tape()</code>\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5728\u200b\u4f7f\u7528\u200b<code>kernel.grad()</code>\u200b\u4e4b\u524d\u200b\u9700\u8981\u200b\u628a\u200b\u8f93\u51fa\u200b\u53d8\u91cf\u200b\u7684\u200b\u68af\u5ea6\u200b\u503c\u200b\u624b\u52a8\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1</p> <p>Example</p> <pre><code>import taichi as ti\nti.init()\n\nN = 16\n\nx = ti.field(dtype=ti.f32, shape=N, needs_grad=True)\nloss = ti.field(dtype=ti.f32, shape=(), needs_grad=True)\nloss2 = ti.field(dtype=ti.f32, shape=(), needs_grad=True)\n\n@ti.kernel\ndef func():\n    for i in x:\n    loss[None] += x[i] ** 2\n    loss2[None] += x[i]\n\nfor i in range(N):\n    x[i] = i\n\n# Set the `grad` of the output variables to `1` before calling `func.grad()`.\nloss.grad[None] = 1\nloss2.grad[None] = 1\n\nfunc()\nfunc.grad()\nfor i in range(N):\n    assert x.grad[i] == i * 2 + 1\n</code></pre> <p>\u200b\u5728\u200b\u4f7f\u7528\u200b\u53cd\u5411\u200b\u7684\u200b<code>kernel.grad()</code>\u200b\u4e4b\u524d\u200b\u5e94\u8be5\u200b\u5148\u200b\u8fd0\u884c\u200b\u524d\u200b\u5411\u200b\u7684\u200b<code>kernel()</code>\uff0c\u200b\u907f\u514d\u200b\u5168\u5c40\u200b\u7684\u200bTaichi field\u200b\u88ab\u200b\u4fee\u6539\u200b\u4e86\u200b\u4f46\u662f\u200b\u6ca1\u6709\u200b\u505a\u524d\u200b\u5411\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u68af\u5ea6\u200b\u9519\u8bef\u200b</p>"},{"location":"memo/tool/","title":"\u5e38\u7528\u5de5\u5177","text":"<p> \u200b\u5de5\u6b32\u5584\u5176\u4e8b\u200b\uff0c\u200b\u5fc5\u5148\u5229\u5176\u5668\u200b\u3002 </p> <p> \u2014\u2014 \u300a\u200b\u8bba\u8bed\u200b\u00b7\u200b\u536b\u7075\u516c\u200b\u300b </p> <p></p> Overview \u200b\u5e38\u7528\u5de5\u5177\u200b  Git  Shell  CMake  Markdown  Docker  LaTeX  MATLAB  NumPy  Neovim  Conda  Tmux  FFmpeg  Pytorch  VScode  Github <p>Icon Source: mkdocs-material-icons</p>"},{"location":"memo/tool/cmake/","title":"CMake","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b CMake \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/conda/","title":"Conda","text":"<p> \u200b\u7ea6\u200b 547 \u200b\u4e2a\u200b\u5b57\u200b  36 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Conda \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/conda/#_1","title":"\u5b89\u88c5","text":"<p>\u200b\u4ee5\u200b Miniconda \u200b\u4e3a\u4f8b\u200b\uff0cAnaconda \u200b\u7684\u200b\u5b89\u88c5\u200b\u6b65\u9aa4\u200b\u5dee\u4e0d\u591a\u200b\uff0c\u200b\u4f46\u662f\u200b Miniconda \u200b\u8981\u200b\u66f4\u200b\u7cbe\u7b80\u200b\u4e00\u4e9b\u200b</p>"},{"location":"memo/tool/conda/#linux","title":"Linux","text":"<pre><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh # \u200b\u4e0b\u8f7d\u5b89\u88c5\u200b\u811a\u672c\u200b\n\nchmod +x Miniconda3-latest-Linux-x86_64.sh # \u200b\u6dfb\u52a0\u200b\u53ef\u200b\u6267\u884c\u200b\u6743\u9650\u200b\n\n./Miniconda3-latest-Linux-x86_64.sh # \u200b\u5b89\u88c5\u200b\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u4e4b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b <code>~/.zshrc</code> \u200b\u6216\u200b <code>~/.bashrc</code> \u200b\u4e2d\u200b\u5199\u5165\u200b Conda \u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b</p> <ol> <li> <p>\u200b\u76f4\u63a5\u200b\u5728\u200b\u7ec8\u7aef\u200b\u4e2d\u200b\u8f93\u5165\u200b <code>conda init zsh</code> \u200b\u6216\u200b <code>conda init bash</code> \u200b\u521d\u59cb\u5316\u200b</p> </li> <li> <p>\u200b\u624b\u52a8\u200b\u5199\u5165\u200b\uff0c \u200b\u5047\u8bbe\u200b miniconda \u200b\u7684\u200b\u5b89\u88c5\u200b\u8def\u5f84\u200b\u4e3a\u200b<code>conda_path</code></p> </li> </ol> <pre><code>__conda_setup=\"$('conda_path/bin/conda' 'shell.zsh' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"conda_path/etc/profile.d/conda.sh\" ]; then\n        . \"conda_path/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"conda_path/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n</code></pre> <p>\u200b\u5199\u5165\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>source ~/.zshrc</code> \u200b\u6216\u200b <code>source ~/.bashrc</code> \u200b\u547d\u4ee4\u200b\u6765\u200b\u4f7f\u200b\u73af\u5883\u53d8\u91cf\u200b\u751f\u6548\u200b\uff0c</p> <p>\u200b\u5728\u200b\u7ec8\u7aef\u200b\u4e2d\u200b\u8f93\u5165\u200b <code>conda info</code> \u200b\u5982\u679c\u200b\u6709\u200b\u4fe1\u606f\u200b\u8f93\u51fa\u200b\u5219\u200b\u8bf4\u660e\u200b\u5df2\u7ecf\u200b\u914d\u7f6e\u200b\u5b8c\u6210\u200b</p>"},{"location":"memo/tool/conda/#macos","title":"macOS","text":"<p>macOS \u200b\u5b89\u88c5\u200b miniconda \u200b\u548c\u200b Linux \u200b\u7684\u200b\u5b89\u88c5\u200b\u6b65\u9aa4\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u901a\u8fc7\u200b shell \u200b\u811a\u672c\u200b\u5b89\u88c5\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5c31\u200b\u4e0d\u200b\u8d58\u8ff0\u200b\u4e86\u200b \u200b\u53e6\u200b\u4e00\u79cd\u200b\u5b89\u88c5\u200b\u65b9\u5f0f\u200b\u662f\u200b\u901a\u8fc7\u200b Homebrew \u200b\u5b89\u88c5\u200b</p> <pre><code>brew install --cask miniconda\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u540e\u200b\u540c\u6837\u200b\u9700\u8981\u200b\u6309\u7167\u200b Linux\u200b\u5b89\u88c5\u200b \u200b\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b\u6765\u200b\u914d\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b</p>"},{"location":"memo/tool/conda/#_2","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"memo/tool/conda/#1","title":"1. \u200b\u67e5\u770b\u200b\u4fe1\u606f","text":"<ul> <li><code>conda info</code>: \u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u73af\u5883\u200b\u4e0b\u200b\u7684\u200b conda \u200b\u4fe1\u606f\u200b</li> <li><code>conda env list</code>: \u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u5df2\u200b\u5b89\u88c5\u200b\u7684\u200b\u73af\u5883\u200b</li> <li><code>conda --version or conda -V</code>: \u200b\u67e5\u770b\u200b conda \u200b\u7684\u200b\u7248\u672c\u200b</li> </ul>"},{"location":"memo/tool/conda/#2","title":"2. \u200b\u73af\u5883\u200b\u7ba1\u7406","text":"<ul> <li><code>conda activate env_name</code>: \u200b\u6fc0\u6d3b\u200b env_name \u200b\u73af\u5883\u200b</li> <li><code>conda deactivate</code>: \u200b\u9000\u51fa\u200b\u5f53\u524d\u200b\u73af\u5883\u200b</li> <li><code>conda create -n env_name [python=3.x]</code>: \u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u73af\u5883\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b Python \u200b\u7248\u672c\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09</li> <li><code>conda remove -n env_name --all</code>: \u200b\u5220\u9664\u200b env_name \u200b\u73af\u5883\u200b</li> </ul>"},{"location":"memo/tool/conda/#3","title":"3. \u200b\u5305\u200b\u7ba1\u7406","text":"<ul> <li><code>conda list</code>: \u200b\u5217\u51fa\u200b\u5f53\u524d\u200b\u73af\u5883\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200bPackage</li> <li><code>conda install package_name</code>: \u200b\u5728\u200b\u5f53\u524d\u200b\u73af\u5883\u200b\u4e2d\u200b\u5b89\u88c5\u200bPackage</li> <li><code>conda search [-c channel_address] [-f] [packages]</code>: \u200b\u641c\u7d22\u200b\u6307\u5b9a\u200b\u7684\u200b\u5305\u200b</li> </ul>"},{"location":"memo/tool/conda/#4","title":"4. \u200b\u5176\u4ed6","text":"<ul> <li><code>conda clean -a</code>: \u200b\u6e05\u9664\u200b\u7f13\u5b58\u200b\u548c\u200b\u6ca1\u6709\u200b\u4f9d\u8d56\u200b\u7684\u200b\u5305\u200b</li> <li><code>conda update conda</code>: \u200b\u66f4\u65b0\u200b conda</li> <li><code>conda env export &gt; environment.yaml</code>: \u200b\u5bfc\u51fa\u200b\u5f53\u524d\u200b\u73af\u5883\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u6587\u4ef6\u540d\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b</li> <li><code>conda env create -f environment.yml</code>: \u200b\u6839\u636e\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u73af\u5883\u200b</li> </ul>"},{"location":"memo/tool/conda/#5","title":"5. \u200b\u73af\u5883\u200b\u6253\u5305","text":"<p>\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200bconda-pack\u200b\u6765\u200b\u6253\u5305\u200b\u73af\u5883\u200b</p> <ul> <li>\u200b\u5b89\u88c5\u200b\uff1a<code>conda install conda-pack</code> or <code>pip install conda-pack</code></li> <li>\u200b\u6253\u5305\u200b\u73af\u5883\u200b\uff1a<code>conda pack -n env_name [-o pack_name.tar.gz]</code></li> <li>\u200b\u5b89\u88c5\u200b\u73af\u5883\u200b\uff1a<code>cd conda_env_path &amp; tar -xzf pack_name.tar.gz -C env_name</code></li> </ul>"},{"location":"memo/tool/conda/#_3","title":"\u5e38\u7528\u200b\u914d\u7f6e","text":"<p>Windows \u200b\u7cfb\u7edf\u200b\u7684\u200b Conda \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b<code>C:\\Users\\username\\.condarc</code>\uff0cLinux \u200b\u6216\u8005\u200b Mac \u200b\u7cfb\u7edf\u200b Conda \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b<code>~/.condarc</code>\u200b\u6216\u200b<code>~/.conda/.condarc</code>\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>conda config --set ...</code>\u200b\u6307\u4ee4\u200b\u6765\u200b\u6dfb\u52a0\u200b\u6216\u200b\u66f4\u6539\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u4fee\u6539\u200b\u4e0b\u8f7d\u200b\u6e90\u200b\u4ece\u800c\u200b\u52a0\u5feb\u200b\u4e0b\u8f7d\u200b\u7684\u200b\u901f\u5ea6\u200b</p> <p>\u200b\u6211\u200b\u7684\u200b\u5e38\u7528\u200b\u914d\u7f6e\u200b(\u200b\u7528\u200b\u7684\u200b\u662f\u200b\u6d59\u5927\u200b\u6e90\u200b )\uff1a</p> <pre><code>report_errors: true\nauto_activate_base: false\nssl_verify: true\nshow_channel_urls: true\nchannels:\n  - defaults\ndefault_channels:\n  - https://mirrors.zju.edu.cn/anaconda/pkgs/main\n  - https://mirrors.zju.edu.cn/anaconda/pkgs/r\n  - https://mirrors.zju.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  - conda-forge: https://mirrors.zju.edu.cn/anaconda/cloud\n  - msys2: https://mirrors.zju.edu.cn/anaconda/cloud\n  - bioconda: https://mirrors.zju.edu.cn/anaconda/cloud\n  - menpo: https://mirrors.zju.edu.cn/anaconda/cloud\n  - pytorch: https://mirrors.zju.edu.cn/anaconda/cloud\n  - pytorch-lts: https://mirrors.zju.edu.cn/anaconda/cloud\n  - simpleitk: https://mirrors.zju.edu.cn/anaconda/cloud\n  - nvidia: https://mirrors.zju.edu.cn/anaconda-r\n</code></pre>"},{"location":"memo/tool/docker/","title":"Docker","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Docker \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/ffmpeg/","title":"FFmpeg","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b FFmpeg \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/git/","title":"Git","text":"<p> \u200b\u7ea6\u200b 26 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Git \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/git/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/tool/git/#_2","title":"\u57fa\u672c\u200b\u914d\u7f6e","text":""},{"location":"memo/tool/git/#_3","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"memo/tool/git/#cli","title":"CLI \u200b\u5de5\u5177","text":""},{"location":"memo/tool/github/","title":"Github","text":"<p> \u200b\u7ea6\u200b 22 \u200b\u4e2a\u200b\u5b57\u200b  14 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Github \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/github/#basic","title":"Basic","text":"<p>TODO</p>"},{"location":"memo/tool/github/#code-snippets","title":"Code snippets","text":""},{"location":"memo/tool/github/#github-callouts","title":"Github callouts","text":"<pre><code>&gt; [!NOTE]  \n&gt; Highlights information that users should take into account, even when skimming.\n\n&gt; [!TIP]\n&gt; Optional information to help a user be more successful.\n\n&gt; [!IMPORTANT]  \n&gt; Crucial information necessary for users to succeed.\n\n&gt; [!WARNING]  \n&gt; Critical content demanding immediate user attention due to potential risks.\n\n&gt; [!CAUTION]\n&gt; Negative potential consequences of an action.\n</code></pre> <p> Community link</p>"},{"location":"memo/tool/latex/","title":"LaTeX","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b LaTeX \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/markdown/","title":"Markdown","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Markdown \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/matlab/","title":"MATLAB","text":"<p> \u200b\u7ea6\u200b 286 \u200b\u4e2a\u200b\u5b57\u200b  60 \u200b\u884c\u200b\u4ee3\u7801\u200b  3 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u4fe1\u53f7\u200b\u8bfe\u200b\u7684\u200b\u65f6\u5019\u200b\u6b63\u597d\u200b\u9700\u8981\u200b\u7528\u5230\u200b MATLAB\uff0c\u200b\u5728\u200b\u8fd9\u91cc\u200b\u8bb0\u200b\u4e00\u4e9b\u200b\u5185\u5bb9\u200b</p> <p>\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1a</p> <ul> <li>English</li> <li>Cninese</li> </ul>"},{"location":"memo/tool/matlab/#_1","title":"\u57fa\u7840\u200b\u8bed\u6cd5","text":"<p>MATLAB \u200b\u7528\u200b <code>%</code> \u200b\u6765\u200b\u8868\u793a\u200b\u6ce8\u91ca\u200b</p>"},{"location":"memo/tool/matlab/#_2","title":"\u6570\u636e\u200b\u5bf9\u8c61","text":""},{"location":"memo/tool/matlab/#_3","title":"\u6d41\u7a0b\u200b\u63a7\u5236","text":""},{"location":"memo/tool/matlab/#if","title":"if \u200b\u8bed\u53e5","text":"<pre><code>if expression1\n  statements1\nelseif expression2\n  statements2\nelse\n  statements3\nend\n</code></pre>"},{"location":"memo/tool/matlab/#while","title":"while \u200b\u8bed\u53e5","text":"<pre><code>while expression\n  statements\nend\n</code></pre>"},{"location":"memo/tool/matlab/#for","title":"for \u200b\u8bed\u53e5","text":"<pre><code>for index = initval:step:endval\n  statements\nend\n</code></pre>"},{"location":"memo/tool/matlab/#_4","title":"\u7ed8\u56fe","text":""},{"location":"memo/tool/matlab/#plot","title":"plot \u200b\u51fd\u6570","text":"<p><code>plot</code> \u200b\u51fd\u6570\u200b\u662f\u200b\u7ed8\u5236\u200b\u4e8c\u7ef4\u200b\u66f2\u7ebf\u200b\u7684\u200b\u51fd\u6570\u200b</p> <pre><code>x = linspace(0,4*pi,300);\ny = sin(x);\nplot(x,y);\n</code></pre> <p></p> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u5728\u200b\u540c\u4e00\u200b\u56fe\u4e2d\u200b\u753b\u51fa\u200b\u591a\u6761\u200b\u66f2\u7ebf\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u5750\u6807\u200b\u4f9d\u6b21\u200b\u653e\u5165\u200b <code>plot</code> \u200b\u51fd\u6570\u200b\u5373\u53ef\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u6539\u53d8\u200b\u6bcf\u6761\u200b\u66f2\u7ebf\u200b\u7684\u200b\u989c\u8272\u200b\u3001\u200b\u7ebf\u578b\u200b\u7b49\u200b</p> <pre><code>plot(x,sin(x),'c',x,cos(x),'r:');\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u56fe\u7247\u200b\u52a0\u4e0a\u200b\u6807\u6ce8\u200b\u3001\u200b\u56fe\u6ce8\u200b\u3001\u200b\u6807\u9898\u200b</p> <pre><code>xlabel('x'); ylabel('y');\nlegend('sin(x)','cos(x)');\ntitle('Sine and Cosine Functions');\n</code></pre> <p>title\u3001legend\u3001label \u200b\u90fd\u200b\u662f\u200b\u652f\u6301\u200b \\(LaTeX\\) \u200b\u8bed\u6cd5\u200b\u7684\u200b</p> <pre><code>title('$y_1=\\sin(4\\pi t+\\pi /3)$','interpreter','latex')\n</code></pre> <p>\u200b\u8fd8\u200b\u53ef\u200b\u8bbe\u5b9a\u200b\u5408\u9002\u200b\u7684\u200b\u5750\u6807\u8f74\u200b\u8303\u56f4\u200b</p> <pre><code>axis([0 4*pi -1.2 1.2]);\n</code></pre> <p></p> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7ed8\u56fe\u200b\u7a97\u53e3\u200b\u4e2d\u200b\u7ed8\u5236\u200b\u591a\u4e2a\u200b\u56fe\u5f62\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>subplot(m,n,p)</code> \u200b\u547d\u4ee4\u200b\uff0c\u200b\u5176\u200b \u200b\u4e2d\u200b\u53c2\u6570\u200b m \u200b\u548c\u200b n \u200b\u7ed9\u5b9a\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7a97\u53e3\u200b\u4e2d\u200b\u663e\u793a\u200b m \u200b\u884c\u200b n \u200b\u5217\u4e2a\u200b\u56fe\u5f62\u200b\uff0cp \u200b\u8868\u793a\u200b\u9009\u5b9a\u200b\u7b2c\u200b p \u200b\u4e2a\u200b\u56fe\u5f62\u200b\u533a\u57df\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u7b2c\u200b p \u200b\u4e2a\u200b\u533a\u57df\u200b\u4f5c\u56fe\u200b</p> <pre><code>t = linspace(0,10,5001);\nA1 = 1.; w1 = 2*pi*2; p1=pi/3;\nA2 = 1.2; w2 = 2*pi*2.2; p2=-2*pi/3;\nsnr = 10; %Signal-to-noise ratio in dB.\ny1 = A1*sin(w1*t+p1);\ny2 = A2*sin(w2*t+p2);\ny = y1+y2;\nyn = awgn(y,snr,'measured'); % Add white Gaussian noise.\n\nsubplot(2,2,1); plot(t,y1); axis([0,2,-1.5,1.5]);\ntitle('$y_1=\\sin(4\\pi t+\\pi /3)$','interpreter','latex')\n\nsubplot(2,2,2); plot(t,y2,'red'); axis([0,2,-1.5,1.5]);\ntitle('$y_2=\\sin(4.4\\pi t-2\\pi /3)$','interpreter','latex')\n\nsubplot(2,2,3); plot(t,y);\ntitle('$y=y_1+y_2$','interpreter','latex');\n\nsubplot(2,2,4); plot(t,yn);\ntitle('Noisy Signal');\n</code></pre> <p></p>"},{"location":"memo/tool/matlab/#stem","title":"stem \u200b\u51fd\u6570","text":"<p><code>stem</code> \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u753b\u51fa\u200b\u6746\u72b6\u56fe\u200b\u6765\u200b\u663e\u793a\u200b\u79bb\u6563\u200b\u65f6\u95f4\u200b\u4fe1\u53f7\u200b</p> <p><code>clear</code> \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u6e05\u9664\u200b\u5f53\u524d\u5de5\u4f5c\u200b\u533a\u200b\u6240\u6709\u200b\u53d8\u91cf\u200b\uff0c<code>clf</code> \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u6e05\u7a7a\u200b\u5f53\u524d\u200b\u56fe\u7a97\u200b</p> <pre><code>clear;\nk1 = -3; k2 = 6; k = k1:k2;\naxisscaling=[k1,k2,-.1,1.1];\nn = 0;\nx = +(k==n); %impulse series\nx1 = +(k&gt;=n); %step series\n\nsubplot(1,2,1);\nstem(k,x,'filled');\ntitle('Discrete Impulse Function')\naxis(axisscaling); xlabel('$n$','interpreter','latex');\nylabel('$\\delta[n]$','interpreter','latex');\n\nsubplot(1,2,2);\nstem(k,x1,'filled');\ntitle('Discrete Step Function')\naxis(axisscaling); xlabel('$n$','interpreter','latex');\nylabel('$u\\left[n\\right]$','interpreter','latex');\n</code></pre>"},{"location":"memo/tool/numpy/","title":"NumPy","text":"<p> \u200b\u7ea6\u200b 13 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b NumPy \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/nvim/","title":"Neovim","text":"<p> \u200b\u7ea6\u200b 64 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Neovim \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/nvim/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/tool/nvim/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"memo/tool/nvim/#layout","title":"Layout","text":"<ul> <li><code>Buffer</code>: A buffer is the in-memory text of a file.</li> <li><code>Window</code>: A window is a viewport on a buffer.</li> <li><code>Tab</code>: A tab page is a collection of windows.</li> </ul> <p>\u200b\u8fd9\u4e2a\u200b\u6587\u6863\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u5f88\u200b\u8be6\u7ec6\u200b</p>"},{"location":"memo/tool/nvim/#_3","title":"\u914d\u7f6e","text":""},{"location":"memo/tool/nvim/#options","title":"Options","text":""},{"location":"memo/tool/nvim/#keymaps","title":"Keymaps","text":""},{"location":"memo/tool/nvim/#autocmds","title":"Autocmds","text":""},{"location":"memo/tool/nvim/#plugins","title":"Plugins","text":""},{"location":"memo/tool/pytorch/","title":"PyTorch","text":"<p> \u200b\u7ea6\u200b 748 \u200b\u4e2a\u200b\u5b57\u200b  36 \u200b\u884c\u200b\u4ee3\u7801\u200b  1 \u200b\u5f20\u200b\u56fe\u7247\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 3 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b PyTorch \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u4ee5\u53ca\u200b\u4e00\u4e9b\u200b\u6709\u7528\u200b\u7684\u200b tricks</p> <ul> <li>PyTorch Tutorial</li> <li>PyTorch Documentation</li> <li>PyTorch Cheet Sheet</li> </ul>"},{"location":"memo/tool/pytorch/#_1","title":"\u5b89\u88c5","text":"<p>\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b Anaconda/Miniconda \u200b\u521b\u5efa\u200b\u865a\u62df\u73af\u5883\u200b\u5b89\u88c5\u200b PyTorch</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u53ea\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b CPU \u200b\u7248\u672c\u200b\u7684\u200b PyTorch\uff0c\u200b\u90a3\u4e48\u200b\u540e\u7eed\u200b\u7684\u200b\u590d\u6742\u200b\u6b65\u9aa4\u200b\u90fd\u200b\u4e0d\u200b\u9700\u8981\u200b\u505a\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u4e24\u6761\u200b\u6307\u4ee4\u200b\u4e2d\u200b\u7684\u200b\u4e00\u6761\u200b\u5373\u53ef\u200b</p> <pre><code>pip3 install torch torchvision torchaudio               # pip\nconda install pytorch torchvision torchaudio cpuonly    # conda\n</code></pre> <p>GPU \u200b\u7248\u672c\u200b\u7684\u200b PyTorch \u200b\u7684\u200b\u5b89\u88c5\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b:</p> <ul> <li>\u200b\u5728\u200b\u7ec8\u7aef\u200b\u8f93\u5165\u200b<code>nvidia-smi</code>\u200b\u67e5\u770b\u200b NVIDIA \u200b\u9a71\u52a8\u200b\u7684\u200b\u7248\u672c\u200b\u548c\u200b\u652f\u6301\u200b\u7684\u200b CUDA \u200b\u7684\u200b\u6700\u9ad8\u200b\u7248\u672c\u200b</li> </ul> <p> </p> <ul> <li>\u200b\u5728\u200b\u7ec8\u7aef\u200b\u8f93\u5165\u200b <code>nvcc -V</code> \u200b\u67e5\u770b\u200b\u672c\u200b\u673a\u200b\u5b89\u88c5\u200b\u7684\u200b CUDA \u200b\u7248\u672c\u200b\uff0c\u200b\u5982\u679c\u200b\u63d0\u793a\u200b\u8be5\u200b\u547d\u4ee4\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u53bb\u200b NVIDIA \u200b\u5b98\u7f51\u200b \u200b\u4e0b\u8f7d\u200b CUDA</li> </ul> <pre><code>$ nvcc -V\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2021 NVIDIA Corporation\nBuilt on Fri_Dec_17_18:28:54:_Pacific_Standard_Time_2021\nCuda compilation tools, release 11.2, V11.2.152\nBuild cuda_11.2.r11.2/compiler.30794723_0\n</code></pre> <ul> <li>\u200b\u5b89\u88c5\u200b\u5bf9\u5e94\u200b CUDA \u200b\u7248\u672c\u200b\u7684\u200b cudnn\uff0c\u200b\u5b98\u65b9\u200b\u4e0b\u8f7d\u200b\u5730\u5740\u200b\u4e3a\u200b cudnn download</li> <li>\u200b\u4e0b\u8f7d\u200b Anaconda/Miniconda\uff0c\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u73af\u5883\u200b\uff08e.g. pytorch)\uff0cConda \u200b\u7684\u200b\u914d\u7f6e\u200b\u548c\u200b\u4f7f\u7528\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b Conda \u200b\u5907\u5fd8\u5f55\u200b</li> <li>\u200b\u5728\u200b PyToch \u200b\u5b98\u7f51\u200b \u200b\u627e\u5230\u200b\u5bf9\u5e94\u200b\u5e73\u53f0\u200b\u548c\u200b CUDA \u200b\u7248\u672c\u200b\u7684\u200b\u5b89\u88c5\u200b\u6307\u4ee4\u200b(e.g. cuda11.1)</li> </ul> <pre><code>conda install pytorch torchvision torchaudio pytorch-cuda=11.2 -c pytorch -c nvidia\n</code></pre> <ul> <li>\u200b\u5b89\u88c5\u200b\u5b8c\u200b PyTorch \u200b\u540e\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u68c0\u9a8c\u200b\u5b89\u88c5\u200b\u662f\u5426\u200b\u6210\u529f\u200b\uff0c\u200b\u4e14\u200b <code>CUDA DEVICE</code> \u200b\u662f\u5426\u200b\u53ef\u7528\u200b</li> </ul> <pre><code>&gt;&gt;&gt; import torch\n&gt;&gt;&gt; torch.__version__\n'1.12.1'\n&gt;&gt;&gt; torch.cuda.is_available()\nTrue\n&gt;&gt;&gt; torch.cuda.get_device_name()\n'NVIDIA GeForce GTX 1660 Ti'\n&gt;&gt;&gt; from torch.backends import cudnn\n&gt;&gt;&gt; cudnn.is_available()\nTrue\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6267\u884c\u200b\u4e0a\u8ff0\u200b\u6307\u4ee4\u200b\u770b\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e00\u81f4\u200b\uff0c\u200b\u90a3\u4e48\u200b PyTorch \u200b\u5df2\u7ecf\u200b\u6210\u529f\u200b\u5b89\u88c5\u200b</p> <p>\u200b\u6700\u540e\u200b\u53ef\u4ee5\u200b\u5b89\u88c5\u200b\u4e00\u4e9b\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u5e38\u7528\u200b\u7684\u200b Package</p> <pre><code>pyyaml\ntqdm\nplyfile\ntensorboardX\njupyter\npandas\nmatplotlib\nnumpy\nscipy\n</code></pre>"},{"location":"memo/tool/pytorch/#_2","title":"\u57fa\u672c\u200b\u8bed\u6cd5","text":"<p>TODO: placeholder</p>"},{"location":"memo/tool/pytorch/#_3","title":"\u5e38\u7528\u200b\u6a21\u5757","text":"<p>TODO: placeholder</p>"},{"location":"memo/tool/pytorch/#tensorboard","title":"TensorBoard","text":"<p>\u200b\u73b0\u5728\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b lanpa \u200b\u5927\u4f6c\u200b\u5f00\u53d1\u200b\u7684\u200btensorboardX\uff0c\u200b\u4e00\u4e2a\u200b\u5b8c\u5168\u200b\u652f\u6301\u200b PyTorch \u200b\u7684\u200b tensorboard \u200b\u5de5\u5177\u5305\u200b\uff0c\u200b\u4ece\u800c\u200b\u8ba9\u200b PyTorch \u200b\u5f88\u200b\u597d\u200b\u5730\u200b\u8c03\u7528\u200b tensorboard \u200b\u7684\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\u5de5\u5177\u200b\u6765\u200b\u76d1\u89c6\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u8bad\u7ec3\u200b\u7684\u200b\u8fc7\u7a0b\u200b</p> <p>\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1atensorboardX\u2019s documentation</p> <p>\u200b\u5b98\u65b9\u200b\u4ed3\u5e93\u200b\uff1aGithub repo</p>"},{"location":"memo/tool/pytorch/#_4","title":"\u5b89\u88c5","text":"<pre><code>pip install tensorboardX\n</code></pre>"},{"location":"memo/tool/pytorch/#_5","title":"\u4f7f\u7528","text":"<p>\u200b\u9700\u8981\u200b\u7528\u5230\u200b tensorboardX \u200b\u4e2d\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b <code>SummaryWriter</code> \u200b\u7684\u200b\u7c7b\u200b</p>"},{"location":"memo/tool/pytorch/#_6","title":"\u521d\u59cb\u5316","text":"<pre><code>from tensorboardX import SummaryWriter\n\n# \u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u8def\u5f84\u200b\nwriter1 = SummaryWriter()\nwriter2 = SummaryWriter(\"./logs\")\n</code></pre>"},{"location":"memo/tool/pytorch/#_7","title":"\u8bb0\u5f55\u200b\u6570\u636e","text":"<pre><code>writer.add_scalar(tag, scalar_value, global_step=None, walltime=None)\n</code></pre> <ul> <li>tag: \u200b\u6570\u636e\u200b\u6807\u7b7e\u200b\uff0c\u200b\u4e0d\u540c\u200b\u6807\u7b7e\u200b\u7684\u200b\u6570\u636e\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u66f2\u7ebf\u200b\u7ed8\u5236\u200b</li> <li>scalar_value: \u200b\u5e38\u91cf\u200b\u503c\u200b</li> <li>global_step: \u200b\u8bad\u7ec3\u200b\u7684\u200b step</li> <li>walltime: \u200b\u8bb0\u5f55\u65f6\u95f4\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b time.time()</li> </ul> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b scalar_value \u200b\u5fc5\u987b\u200b\u4e3a\u200b float \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b scalar tensor\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u8c03\u7528\u200b<code>tensor.item()</code>\u200b\u65b9\u6cd5\u200b\u83b7\u53d6\u200b\u5176\u200b\u6570\u503c\u200b</p> <p>\u200b\u4e00\u822c\u200b\u4f1a\u200b\u4f7f\u7528\u200b<code>add_scalar</code>\u200b\u65b9\u6cd5\u200b\u6765\u200b\u8bb0\u5f55\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u7684\u200b loss\u3001accuracy\u3001learning rate \u200b\u7b49\u200b\u53c2\u6570\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c\u200b\u76f4\u89c2\u200b\u5730\u200b\u76d1\u89c6\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b</p> <pre><code>writer.add_scalar('Train/Loss', loss.data[0], niter)\nwriter.add_scalar('Test/Accu', correct/total, niter)\n</code></pre>"},{"location":"memo/tool/pytorch/#_8","title":"\u8fd0\u884c\u56fe","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>add_graph</code>\u200b\u65b9\u6cd5\u200b\u6765\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u8fd0\u884c\u56fe\u200b\uff0c\u200b\u53ef\u89c6\u5316\u200b\u4e00\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b</p> <pre><code>writer.add_graph(model, input_to_model=None, verbose=False, **kwargs)\n</code></pre> <ul> <li>model: \u200b\u5f85\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b\u7f51\u7edc\u200b\u6a21\u578b\u200b</li> <li>input_to_model: \u200b\u5f85\u200b\u8f93\u5165\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7684\u200b\u53d8\u91cf\u200b</li> </ul>"},{"location":"memo/tool/pytorch/#_9","title":"\u6dfb\u52a0\u200b\u56fe\u7247","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>add_image</code>\u200b\u65b9\u6cd5\u200b\u53ef\u89c6\u5316\u200b\u56fe\u7247\u200b</p> <pre><code>writer.add_image(tag, img_tensor, global_step=None, walltime=None, dataformats='CHW')\n</code></pre> <ul> <li>tag: \u200b\u6570\u636e\u200b\u6807\u7b7e\u200b</li> <li>img_tensor: \u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\uff0c\u200b\u662f\u200b\u591a\u7ef4\u200b tensor</li> <li>global_step: \u200b\u8bad\u7ec3\u200b\u7684\u200b step</li> <li>walltime: \u200b\u8bb0\u5f55\u65f6\u95f4\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b time.time()</li> </ul>"},{"location":"memo/tool/pytorch/#_10","title":"\u5d4c\u5165\u200b\u5411\u91cf","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>add_embedding</code>\u200b\u65b9\u6cd5\u200b\u5728\u200b\u4e8c\u7ef4\u200b\u6216\u200b\u4e09\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u53ef\u89c6\u5316\u200b embedding \u200b\u5411\u91cf\u200b</p> <pre><code>writer.add_embedding(mat, metadata=None, label_img=None, global_step=None, tag='default', metadata_header=None)\n</code></pre> <ul> <li>mat: \u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b\uff0c\u200b\u6bcf\u884c\u200b\u4ee3\u8868\u200b\u7279\u5f81\u200b\u7a7a\u95f4\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u70b9\u200b</li> <li>metadata: \u200b\u4e00\u7ef4\u200b\u5217\u8868\u200b\uff0c\u200b\u8868\u793a\u200b mat \u200b\u4e2d\u200b\u6bcf\u884c\u200b\u6570\u636e\u200b\u7684\u200b label\uff0c\u200b\u5927\u5c0f\u200b\u5e94\u200b\u548c\u200b mat \u200b\u884c\u200b\u6570\u200b\u76f8\u540c\u200b</li> <li>label_img: \u200b\u5f62\u200b\u5982\u200b NxCxHxW \u200b\u7684\u200b\u56db\u7ef4\u200b tensor\uff0c\u200b\u5bf9\u5e94\u200b mat \u200b\u4e2d\u200b\u6bcf\u200b\u4e00\u884c\u200b\u6570\u636e\u200b\u663e\u793a\u200b\u51fa\u200b\u7684\u200b\u56fe\u50cf\u200b\uff0cN \u200b\u5e94\u200b\u548c\u200b mat \u200b\u884c\u200b\u6570\u200b\u76f8\u540c\u200b</li> <li>global_step: \u200b\u8bad\u7ec3\u200b\u7684\u200b step</li> <li>tag: \u200b\u6570\u636e\u200b\u6807\u7b7e\u200b</li> </ul>"},{"location":"memo/tool/pytorch/#_11","title":"\u5bfc\u51fa","text":"<pre><code># export scalar data to JSON for external processing\nwriter.export_scalars_to_json(\"./all_scalars.json\")\nwriter.close()\n</code></pre>"},{"location":"memo/tool/pytorch/#_12","title":"\u767b\u9646","text":"<p>\u200b\u5728\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u6307\u4ee4\u200b\u5373\u53ef\u200b\u6253\u5f00\u200b tensorboard</p> <pre><code># --port \u200b\u6307\u5b9a\u200b\u6253\u5f00\u200b\u7684\u200b\u7aef\u53e3\u200b\ntensorboard --logdir=dir_name --port=6007\n</code></pre>"},{"location":"memo/tool/shell/","title":"Shell","text":"<p> \u200b\u7ea6\u200b 69 \u200b\u4e2a\u200b\u5b57\u200b  21 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Shell \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/shell/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/tool/shell/#_2","title":"\u57fa\u672c\u200b\u914d\u7f6e","text":""},{"location":"memo/tool/shell/#_3","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"memo/tool/shell/#_4","title":"\u4ee3\u7801\u200b\u7247\u6bb5","text":"xargs: \u200b\u4e00\u6b21\u200b\u6267\u884c\u200b\u591a\u4e2a\u200bShell\u200b\u811a\u672c\u200b test.sh<pre><code>echo 1\necho 3\necho 5\necho 7\necho 9\n</code></pre> <pre><code>cat test.sh | xargs -I {} bash -c \"{}\"\n</code></pre> crontab: \u200b\u81ea\u5b9a\u4e49\u200b\u5b9a\u65f6\u200b\u811a\u672c\u200b crontab format<pre><code>* * * * *\n- - - - -\n| | | | |\n| | | | +----- day of the week (0 - 6) (Sunday=0)\n| | | +---------- month (1 - 12)\n| | +--------------- day of the month (1 - 31)\n| +-------------------- hour (0 - 23)\n+------------------------- minute (0 - 59)\n</code></pre> crontab example<pre><code># example: \u200b\u6bcf\u5468\u65e5\u200b 12 \u200b\u70b9\u200b\u6267\u884c\u200b\n0 12 * * 0 echo \"Hello World\"\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u5728\u7ebf\u200b\u5de5\u5177\u200b\u6765\u200b\u751f\u6210\u200b crontab \u200b\u7684\u200b\u65f6\u95f4\u200b\u914d\u7f6e\u200b</p> <p>crontab \u200b\u547d\u4ee4\u200b\uff1a <pre><code>crontab -e # \u200b\u7f16\u8f91\u200b\u5f53\u524d\u200b\u7528\u6237\u200b\u7684\u200b\u5b9a\u65f6\u200b\u4efb\u52a1\u200b\n\ncrontab -l # \u200b\u5217\u51fa\u200b\u5f53\u524d\u200b\u7528\u6237\u200b\u7684\u200b\u6240\u6709\u200b\u4efb\u52a1\u200b\n\ncrontab -r # \u200b\u5220\u9664\u200b\u6240\u6709\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5305\u62ec\u200b\u91cd\u8981\u200b\u7684\u200b\u7cfb\u7edf\u200b\u4efb\u52a1\u200b\n</code></pre></p>"},{"location":"memo/tool/tmux/","title":"Tmux","text":"<p> \u200b\u7ea6\u200b 32 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b Tmux \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p> <ul> <li>Tmux Tutorial</li> <li>Tmux Cheetsheet </li> </ul>"},{"location":"memo/tool/tmux/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/tool/tmux/#linux","title":"Linux","text":""},{"location":"memo/tool/tmux/#macos","title":"macOS","text":""},{"location":"memo/tool/tmux/#_2","title":"\u57fa\u672c\u200b\u914d\u7f6e","text":""},{"location":"memo/tool/tmux/#_3","title":"\u5feb\u6377\u952e","text":""},{"location":"memo/tool/tmux/#1","title":"1","text":""},{"location":"memo/tool/tmux/#2","title":"2","text":""},{"location":"memo/tool/tmux/#_4","title":"\u63d2\u4ef6","text":""},{"location":"memo/tool/vscode/","title":"VSCode","text":"<p> \u200b\u7ea6\u200b 136 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b\u4e0d\u5230\u200b 1 \u200b\u5206\u949f\u200b</p> <p>Abstract</p> <p>\u200b\u8bb0\u5f55\u200b\u4e00\u4e9b\u200b VSCode \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b</p>"},{"location":"memo/tool/vscode/#_1","title":"\u5b89\u88c5","text":""},{"location":"memo/tool/vscode/#_2","title":"\u57fa\u672c\u200b\u914d\u7f6e","text":""},{"location":"memo/tool/vscode/#_3","title":"\u4e3b\u9898","text":"<ul> <li>Catppuccin: \ud83e\udd8c Soothing pastel theme for VSCode. ( My favorite color scheme!!!)<ul> <li>Find more ports of Catppuccin here .</li> </ul> </li> <li>Everforest: Comfortable &amp; Pleasant Color Scheme for VSCode.</li> <li>Nord: Darker version of the awesome Nord theme.</li> <li>Tokyo Night: A clean VSCode theme that celebrates the lights of Downtown Tokyo at night.</li> <li>Kanagawa: Dark theme inspired by the colors of the famous painting by Katsushika Hokusai.</li> <li>Ros\u00e9 Pine: All natural pine, faux fur and a bit of soho vibes for the classy minimalist.</li> <li>Evro Dark: Immerse yourself in the enchanting glow of Evro Dark and let your creativity soar under the stars of the digital night sky. \u2728</li> <li>Lucy: A re-upload of a soft but clear syntax theme.</li> </ul>"},{"location":"memo/tool/vscode/#_4","title":"\u63d2\u4ef6","text":""},{"location":"others/","title":"\u6742\u9879","text":"<p>Info</p> <p>\u200b\u6742\u9879\u200b\u7684\u200b\u5185\u5bb9\u200b\u8bb0\u5f55\u200b</p> Funny tools <ul> <li>Web Fluid Simulator</li> <li>\u200b\u751f\u6210\u200b\u68d2\u68d2\u200b\u7f51\u5740\u200b</li> <li>GAN Lab</li> </ul>"},{"location":"research/","title":"\u79d1\u7814","text":"<p>Info</p> <p>\u200b\u8bb0\u5f55\u200b\u79d1\u7814\u200b\uff0c\u200b\u6db5\u76d6\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\uff1a</p> <ul> <li> <p>\u200b\u8bba\u6587\u200b\u9605\u8bfb\u200b</p> </li> <li> <p>\u200b\u79d1\u7814\u200b\u7ecf\u9a8c\u200b</p> </li> </ul>"},{"location":"research/learning_research/","title":"\u79d1\u7814\u200b\u7ecf\u9a8c","text":""},{"location":"research/learning_research/#references","title":"References","text":"<ul> <li> <p>Sida Peng - Learning Research</p> </li> <li> <p>Jason Wei - Practicing AI research</p> </li> <li> <p>Andrej Karpathy - A Survival Guide to a PhD</p> </li> <li> <p>Richard Hamming - You and Your Research</p> </li> <li> <p>John Schulman - An Opinionated Guide to ML Research</p> </li> <li> <p>Michael Neilsen - Principles of Effective Research</p> </li> </ul>"},{"location":"research/paper_reading/","title":"\u8bba\u6587\u200b\u9605\u8bfb","text":""},{"location":"research/paper_reading/#references","title":"References","text":"<ul> <li>NeRF\u200b\u8bba\u6587\u200b\u5408\u96c6\u200b\uff1aAwesome NeRF</li> <li>\u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\u8d44\u6e90\u200b\u5408\u96c6\u200b\uff1aAwesome Computer Vision</li> </ul>"},{"location":"research/paper_reading/#papers","title":"Papers","text":"<ul> <li>NeRF<ul> <li>\u200b\u8bba\u6587\u200b\u7b14\u8bb0\u200b</li> <li>\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u5b66\u4e60\u200b</li> </ul> </li> <li>K-Planes</li> <li>IBRNet</li> <li>INV</li> <li>StreamRF</li> <li>Plenoxels</li> <li>NeuralLift-360</li> <li>TensoRF</li> <li>Instant-NGP</li> <li>Tensor4D</li> <li>NeRFPlayer</li> <li>ENeRF</li> <li>HyperReel</li> <li>MERF</li> <li>MLP-Maps</li> </ul>"},{"location":"research/paper_reading/intro_template/","title":"Title","text":"<p>Abstract</p> <p> Paper |  Code |  Project Page |  Data</p> <p>Other informations:</p> <ul> <li>...</li> <li>...</li> </ul>"},{"location":"research/paper_reading/nerf/","title":"NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis","text":"<p>Abstract</p> <p> Paper |  Code |  Project Page |  Data</p> <p>Other implementations:</p> <ul> <li> TensorFlow version</li> <li> Pytorch version</li> <li> Pytorch-lightning version</li> <li> My Reproduction</li> </ul> <p>\u200b\u6211\u200b\u5728\u200bTaichi\u200b\u793e\u533a\u200b\u5206\u4eab\u200b\u4f1a\u4e0a\u200b\u7684\u200b\u7ecf\u9a8c\u200b\u5206\u4eab\u200b\uff1a</p> <ul> <li> Bilibili \u200b\u56de\u653e\u200b\u94fe\u63a5\u200b</li> <li> \u200b\u5206\u4eab\u200b\u4f1a\u200b\u7684\u200b slides \u200b\u94fe\u63a5\u200b</li> </ul>"},{"location":"research/paper_reading/nerf/code/","title":"NeRF \u200b\u4ee3\u7801\u200b\u5b66\u4e60","text":"<p>Abstract</p> <p>NeRF \u200b\u7684\u200b\u4ee3\u7801\u200b\u5b66\u4e60\u200b(\u200b\u5b66\u4e60\u200b\u7684\u200b\u662f\u200bPytorch\u200b\u5b9e\u73b0\u200b\u7248\u672c\u200b)</p> <p>\u200b\u6e90\u4ee3\u7801\u200b:  nerf-pytorch</p> <p>Pytorch\u200b\u7248\u672c\u200b\u4ee3\u7801\u200b\u89e3\u8bfb\u200b: Blog</p> <p>\u200b\u6211\u200b\u7684\u200b\u590d\u73b0\u200b\u4ee3\u7801\u200b:  Learning NeRF</p> <p><p>-- By @Zicx</p></p>"},{"location":"research/paper_reading/nerf/code/#_1","title":"\u6570\u636e\u200b\u96c6","text":"<pre><code>./scene/\n\u251c\u2500\u2500 train\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_0.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_1.png\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 val\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_0.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_1.png\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_0.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 r_1.png\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 transforms_train.json\n\u251c\u2500\u2500 transforms_val.json\n\u2514\u2500\u2500 transforms_test.json\n</code></pre> <p>cameraanglex: \u200b\u6c34\u5e73\u200b\u89c6\u573a\u200b\u89d2\u200b</p> <p>frames</p> <ul> <li>file_path: \u200b\u6bcf\u200b\u4e00\u5f20\u200b\u7167\u7247\u200b\u7684\u200b\u8def\u5f84\u200b</li> <li>rotation: \u200b\u65cb\u8f6c\u200b\u89d2\u200b\uff0c\u200b\u7528\u6765\u200b\u8ba1\u7b97\u200b\u7126\u8ddd\u200b</li> <li>transform_matrix: \u200b\u4ece\u200b\u76f8\u673a\u200b\u5750\u6807\u7cfb\u200b\u5230\u200b\u4e16\u754c\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u53d8\u6362\u200b\u77e9\u9635\u200b</li> </ul> <p>\u200b\u5750\u6807\u7cfb\u200b</p> <ul> <li>\u200b\u76f8\u673a\u200b\u5750\u6807\u7cfb\u200b\uff1a[right, up, backward] \u200b\u5373\u200b [x, y, z]</li> <li>COLMAP \u200b\u5750\u6807\u7cfb\u200b\uff1a[right, down, forward] \u200b\u5373\u200b [x, -y, -z]</li> </ul>"},{"location":"research/paper_reading/nerf/code/#_2","title":"\u4ee3\u7801\u200b\u7ed3\u6784","text":"<pre><code>.\n\u251c\u2500\u2500 configs                     # \u200b\u5404\u4e2a\u200b scene \u200b\u7684\u200b\u914d\u7f6e\u200b\u53c2\u6570\u200b\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 chair.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 drums.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 trex.txt\n\u251c\u2500\u2500 download_example_data.sh    # \u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u811a\u672c\u200b\n\u251c\u2500\u2500 load_LINEMOD.py             # \u200b\u52a0\u8f7d\u200b LINEMOD \u200b\u6570\u636e\u200b\u96c6\u200b\n\u251c\u2500\u2500 load_blender.py             # \u200b\u52a0\u8f7d\u200b blender \u200b\u6570\u636e\u200b\u96c6\u200b\n\u251c\u2500\u2500 load_deepvoxels.p           # \u200b\u52a0\u8f7d\u200b deepvoxels \u200b\u6570\u636e\u200b\u96c6\u200b\n\u251c\u2500\u2500 load_llff.py                # \u200b\u52a0\u8f7d\u200b LLFF \u200b\u6570\u636e\u200b\u96c6\u200b\n\u251c\u2500\u2500 requirements.txt            # Python \u200b\u73af\u5883\u200b\u914d\u7f6e\u200b\n\u251c\u2500\u2500 nerf_configs                # NeRF \u200b\u4efb\u52a1\u200b\u53c2\u6570\u200b*\n\u251c\u2500\u2500 nerf_models                 # NeRF \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b*\n\u251c\u2500\u2500 nerf_render                 # NeRF \u200b\u8bad\u7ec3\u200b\u7f51\u7edc\u200b\uff0c\u200b\u6e32\u67d3\u200b\u8fc7\u7a0b\u200b*\n\u251c\u2500\u2500 nerf_inference              # NeRF \u200b\u63a8\u7406\u200b*\n\u251c\u2500\u2500 run_nerf.py                 # NeRF \u200b\u6838\u5fc3\u200b\u4ee3\u7801\u200b*\n\u2514\u2500\u2500 run_nerf_helpers.py         # NeRF \u200b\u8f85\u52a9\u200b\u4ee3\u7801\u200b\n</code></pre>"},{"location":"research/paper_reading/nerf/code/#_3","title":"\u5b9e\u73b0\u200b\u8fc7\u7a0b","text":"<ol> <li> <p>\u200b\u5728\u200b <code>nerf_configs</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u914d\u7f6e\u200b\u597d\u200b\u6240\u6709\u200b\u7684\u200b\u4efb\u52a1\u200b\u53c2\u6570\u200b     \u200b\u5bf9\u4e8e\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u573a\u666f\u200b\uff0c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5355\u72ec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b(./configs/scene.txt)\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u5199\u5165\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7684\u200b\u53c2\u6570\u200b</p> </li> <li> <p>\u200b\u5728\u200b <code>load_blender</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5982\u4f55\u200b\u52a0\u8f7d\u200b\u5408\u6210\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u65b9\u5f0f\u200b</p> <ol> <li>\u200b\u8bfb\u53d6\u200b\u56fe\u7247\u200b(<code>imgs</code>)\u200b\u548c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u53d8\u6362\u200b\u77e9\u9635\u200b(<code>poses</code>)</li> <li>\u200b\u8ba1\u7b97\u200b\u76f8\u673a\u200b\u53c2\u6570\u200b(<code>H, W, focal</code>)</li> <li>\u200b\u8ba1\u7b97\u200b\u6e32\u67d3\u200b\u4f4d\u59ff\u200b(<code>render_poses</code>) [-180, 180] \u200b\u95f4\u9694\u200b 9 \u200b\u5ea6\u200b\u91c7\u6837\u200b</li> <li>\u200b\u5212\u5206\u200b\u6570\u636e\u200b\u96c6\u200b\u8303\u56f4\u200b(<code>i_split</code>: train/val/test)</li> </ol> </li> <li> <p>\u200b\u5728\u200b <code>nerf_models</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>NeRF</code> \u200b\u7f51\u7edc\u200b\u7684\u200b\u7c7b\u200b</p> <ol> <li>\u200b\u7f51\u7edc\u7ed3\u6784\u200b</li> <li>\u200b\u524d\u5411\u200b\u4f20\u64ad\u200b</li> </ol> </li> <li> <p>\u200b\u5728\u200b <code>run_nerf_helper</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5f88\u591a\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b NeRF \u200b\u4f7f\u7528\u200b</p> <ol> <li>\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>Embedder</code> \u200b\u8fd9\u4e2a\u200b\u7528\u4e8e\u200b\u7f16\u7801\u200b\u7684\u200b\u7c7b\u200b</li> <li><code>get_embedder</code> \u200b\u83b7\u5f97\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7f16\u7801\u200b\u51fd\u6570\u200b\u548c\u200b\u8f93\u51fa\u200b\u7ef4\u5ea6\u200b</li> <li><code>get_rays</code> \u200b\u83b7\u5f97\u200b\u6240\u6709\u200b\u5149\u7ebf\u200b\u7684\u200b\u4fe1\u606f\u200b: <code>rays_o</code>, <code>rays_d</code></li> <li><code>sample_pdf</code> \u200b\u7528\u4e8e\u200b\u5206\u5c42\u200b\u91c7\u6837\u200b\uff0c\u200b\u6839\u636e\u200b\u7d2f\u79ef\u200b\u5bc6\u5ea6\u200b\u51fd\u6570\u200b\u83b7\u5f97\u200b\u5206\u5e03\u200b\u5bc6\u5ea6\u200b\u9ad8\u200b\u7684\u200b\u91c7\u6837\u200b\u70b9\u200b\u96c6\u5408\u200b</li> <li><code>ndc_rays</code> \u200b\u7528\u4e8e\u200b\u5c06\u200b\u5149\u7ebf\u200b\u4ece\u200b 3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\u8f6c\u6362\u200b\u5230\u200b NDC \u200b\u5750\u6807\u7cfb\u200b</li> </ol> </li> <li> <p>\u200b\u5728\u200b <code>run_nerf</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b NeRF \u200b\u5982\u4f55\u200b\u8bad\u7ec3\u200b</p> <ol> <li>\u200b\u5728\u200b <code>create_nerf</code> \u200b\u4e2d\u200b\uff0c\u200b\u521b\u5efa\u200b NeRF \u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff0c\u200b\u83b7\u5f97\u200b\u7f16\u7801\u200b\u51fd\u6570\u200b\uff0c\u200b\u8bbe\u5b9a\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b lambda \u200b\u51fd\u6570\u200b <code>network_query_fn</code> \u200b\u4f5c\u4e3a\u200b\u63a5\u6536\u200b\u53c2\u6570\u200b\uff0c\u200b\u5f00\u59cb\u200b\u8bad\u7ec3\u200b\u7684\u200b\u5165\u53e3\u200b\uff0c\u200b\u6b64\u65f6\u200b\u8fd8\u200b\u6ca1\u200b\u8bad\u7ec3\u200b</li> <li><code>run_network</code> \u200b\u88ab\u200b lambda \u200b\u51fd\u6570\u8c03\u7528\u200b\u540e\u200b\u5f00\u59cb\u200b\u8bad\u7ec3\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5bf9\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u7f16\u7801\u200b\uff0c\u200b\u4f20\u9012\u200b\u7ed9\u200b MLP\uff0c\u200b\u83b7\u5f97\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b</li> </ol> </li> <li> <p>\u200b\u5728\u200b <code>nerf_render</code> \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u6e32\u67d3\u200b\u548c\u200b\u8f93\u51fa\u200b\u7684\u200b\u8fc7\u7a0b\u200b</p> <ol> <li>\u200b\u5148\u200b\u901a\u8fc7\u200b <code>get_rays</code> \u200b\u51fd\u6570\u200b\u83b7\u5f97\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5149\u7ebf\u200b</li> <li><code>batchify_rays</code> \u200b\u5bf9\u200b\u5149\u7ebf\u200b\u5206\u6279\u200b\u5904\u7406\u200b</li> <li><code>render_rays</code> \u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u4f53\u200b\u6e32\u67d3\u200b</li> <li><code>raw2outputs</code> \u200b\u51fd\u6570\u200b\u4f1a\u200b\u5c06\u4f53\u200b\u6e32\u67d3\u200b\u7684\u200b\u7ed3\u679c\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4e00\u4e9b\u200b\u6570\u503c\u200b\uff08rgb \u200b\u503c\u200b\uff0c\u200b\u89c6\u5dee\u200b\uff0c\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u6743\u91cd\u200b\uff09\u200b\u8f93\u51fa\u200b</li> </ol> </li> </ol>"},{"location":"research/paper_reading/nerf/code/#_4","title":"\u7f51\u7edc\u200b\u6a21\u578b","text":"<p>\u200b\u4e00\u5171\u200b\u6709\u200b\u4e24\u4e2a\u200b MLP \u200b\u6a21\u578b\u200b\uff1acoarse\u3001fine</p> <ul> <li> <p>coarse</p> <ul> <li>input: rays, view_dirs</li> <li>output: \\(\\sigma\\), \\(RGB_{coarse}\\)</li> </ul> </li> <li> <p>fine</p> <ul> <li>input: \\(\\sigma\\), \\(RGB_{coarse}\\)</li> <li>output: \\(RGB_{fine}\\)</li> </ul> </li> </ul> <p> </p> Fig1. MLP architecture of NeRF <pre><code>1. pts_linears (256 + 63 = 319)\nModuleList(\n  (0): Linear(in_features=63, out_features=256, bias=True)\n  (1): Linear(in_features=256, out_features=256, bias=True)\n  (2): Linear(in_features=256, out_features=256, bias=True)\n  (3): Linear(in_features=256, out_features=256, bias=True)\n  (4): Linear(in_features=256, out_features=256, bias=True)\n  (5): Linear(in_features=319, out_features=256, bias=True)  # combine 256+63\n  (6): Linear(in_features=256, out_features=256, bias=True)\n  (7): Linear(in_features=256, out_features=256, bias=True)\n)\n\n2. alpha_linear\nLinear(in_features=256, out_features=1, bias=True)\n\n3. feature_linear\nLinear(in_features=256, out_features=256, bias=True)\n\n4. views_linears (256 + 27 = 283)\nModuleList(\n  (0): Linear(in_features=283, out_features=128, bias=True)\n)\n\n5. rgb_linear\nLinear(in_features=128, out_features=3, bias=True)\n</code></pre>"},{"location":"research/paper_reading/nerf/math/","title":"NeRF \u200b\u6570\u5b66\u200b\u63a8\u5bfc","text":"<p>Abstract</p> <p>NeRF \u200b\u8bba\u6587\u200b\u4e2d\u200b\u6709\u5173\u200b\u6570\u5b66\u516c\u5f0f\u200b\u7684\u200b\u63a8\u5bfc\u200b</p> <p>\u200b\u53c2\u8003\u200b\u7684\u200bBlog: NeRF: A Volume Rendering Perspective</p> <p><p>-- By @Zicx</p></p> <p>\u200b\u5173\u4e8e\u200bvolume rendering\u200b\u7684\u200b\u8bb2\u89e3\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u200b\u8fd9\u4e2a\u200b\u89c6\u9891\u200b </p>"},{"location":"research/paper_reading/nerf/math/#_1","title":"\u900f\u5c04\u7387\u200b\u7684\u200b\u63a8\u5bfc","text":"<p>\u200b\u8bbe\u200b\u5bc6\u5ea6\u200b\u573a\u4e3a\u200b \\(\\sigma(\\mathbf{x})\\)\uff0c\u200b\u5176\u4e2d\u200b \\(\\mathbf{x} \\in \\mathbb{R}^3\\)\uff0c\u200b\u7531\u4e8e\u200b\u6cbf\u200b\u5c04\u7ebf\u200b\u4f20\u64ad\u200b\u7684\u200b\u4efb\u4f55\u200b\u7a7a\u95f4\u200b\u70b9\u200b \\(\\mathbf{x}\\) \u200b\u90fd\u200b\u53ef\u4ee5\u200b\u5199\u6210\u200b\u4ee5\u4e0b\u200b\u5c04\u7ebf\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ \\mathbf{r}(t) = \\mathbf{o} + t \\mathbf{d} \\] <p>\u200b\u4e8e\u662f\u200b\u53ef\u4ee5\u200b\u91cd\u65b0\u200b\u53c2\u6570\u200b\u5316\u6cbf\u200b\u7ed9\u5b9a\u200b\u5c04\u7ebf\u200b \\(\\mathbf{r}=\\left(\\mathbf{o}, \\mathbf{d}\\right)\\) \u200b\u7684\u200b\u5bc6\u5ea6\u200b\u51fd\u6570\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6807\u91cf\u200b\u51fd\u6570\u200b \\(\\sigma(t)\\) \u200b\u5bc6\u5ea6\u200b\u4e0e\u200b\u900f\u5c04\u7387\u200b\u51fd\u6570\u200b \\(T(t)\\) \u200b\u5bc6\u5207\u76f8\u5173\u200b\uff0c\u200b\u5b83\u200b\u8868\u793a\u200b\u5149\u7ebf\u200b\u5728\u200b\u533a\u95f4\u200b \\([0,t)\\) \u200b\u4e0a\u200b\u4f20\u64ad\u200b\u800c\u200b\u6ca1\u6709\u200b\u51fb\u4e2d\u200b\u4efb\u4f55\u200b\u7c92\u5b50\u200b (\u200b\u6ca1\u6709\u200b\u53d1\u751f\u200b\u78b0\u649e\u200b) \u200b\u7684\u200b\u6982\u7387\u200b</p> <p>\u200b\u73b0\u5728\u200b\u8003\u8651\u200b\u5149\u7ebf\u200b\u4ece\u200b\u4f4d\u7f6e\u200b \\(t\\) \u200b\u4f20\u64ad\u200b\u4e86\u200b \\(d t\\) \u200b\u8ddd\u79bb\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u82e5\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u51fb\u4e2d\u200b\u7c92\u5b50\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\u4e0b\u5f0f\u200b\u6210\u7acb\u200b\uff1a</p> \\[ T(t+dt) = T(t)\\cdot \\left(1-dt \\cdot \\sigma(t)\\right) \\] <ul> <li>\\(T(t+dt)\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b\u533a\u95f4\u200b \\([0,t+dt)\\) \u200b\u5185\u200b\u6ca1\u6709\u200b\u78b0\u649e\u200b\u7684\u200b\u6982\u7387\u200b</li> <li>\\(T(t)\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b\u533a\u95f4\u200b \\([0,t)\\) \u200b\u5185\u200b\u6ca1\u6709\u200b\u78b0\u649e\u200b\u7684\u200b\u6982\u7387\u200b</li> <li>\\(1-dt \\cdot \\sigma(t)\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b\u533a\u95f4\u200b \\([t,t+dt)\\) \u200b\u5185\u200b\u6ca1\u6709\u200b\u78b0\u649e\u200b\u7684\u200b\u6982\u7387\u200b</li> <li>\u200b\u7b26\u5408\u200b\u4e58\u6cd5\u200b\u539f\u7406\u200b</li> </ul> <p>\u200b\u79fb\u9879\u200b\u5316\u7b80\u200b\u4e0a\u9762\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u5fae\u5206\u65b9\u7a0b\u200b\uff1a</p> \\[ T^{\\prime}(t)=-T(t) \\cdot \\sigma(t) \\] <p>\u200b\u6c42\u89e3\u200b\u5f97\u5230\u200b\uff1a</p> \\[ T(a \\rightarrow b) \\equiv \\frac{T(b)}{T(a)}=\\exp \\left(-\\int_a^b \\sigma(t) d t\\right) \\] <p>\\(T(a \\rightarrow b)\\) \u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5149\u7ebf\u200b\u4ece\u200b\u8ddd\u79bb\u200b \\(a\\) \u200b\u5230\u200b\u8ddd\u79bb\u200b \\(b\\) \u200b\u800c\u200b\u6ca1\u6709\u200b\u78b0\u5230\u200b\u7c92\u5b50\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\u200b\u4e0e\u200b NeRF \u200b\u4e2d\u200b\u7684\u200b\u900f\u8fc7\u200b\u7387\u200b\u7684\u200b\u6982\u5ff5\u200b\u5bf9\u5e94\u200b</p> <p>\u200b\u4e00\u822c\u200b\u628a\u200b \\(1-T(t)\\) \u200b\u79f0\u4e3a\u200b\u4e0d\u200b\u900f\u660e\u5ea6\u200b\uff0c\u200b\u89e3\u91ca\u200b\u4e3a\u200b\u7d2f\u79ef\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\uff08CDF\uff09\uff0c\u200b\u8868\u793a\u200b\u5c04\u7ebf\u200b\u5728\u200b\u67d0\u200b\u65f6\u523b\u200b\u524d\u200b\u5230\u8fbe\u200b\u8ddd\u79bb\u200b \\(t\\) \u200b\u5904\u200b\u5e76\u200b\u5728\u200b\u9014\u4e2d\u200b\u51fb\u4e2d\u200b\u8fc7\u200b\u7c92\u5b50\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\\(T(t) \\cdot \\sigma(t)\\) \u200b\u662f\u200b\u76f8\u5e94\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\uff08PDF\uff09\uff0c\u200b\u5b83\u200b\u8868\u793a\u200b\u5c04\u7ebf\u200b\u5728\u200b\u8ddd\u79bb\u200b \\(t\\) \u200b\u5904\u200b\u521a\u597d\u200b\u505c\u6b62\u200b\u7684\u200b\u6982\u7387\u200b</p> Tips <p>\u200b\u4e0b\u6587\u200b\u7684\u200b \u201c\u200b\u989c\u8272\u200b\u79ef\u5206\u200b\u63a8\u5bfc\u200b\u201d \u200b\u90e8\u5206\u200b\u4e2d\u200b\u4e5f\u200b\u6d89\u53ca\u200b\u5230\u200b\u900f\u5c04\u7387\u200b \\(T(t)\\) \u200b\u7684\u200b\u63a8\u5bfc\u200b\uff08\u200b\u6839\u636e\u200b Max \u200b\u7684\u200b\u8bba\u6587\u200b\uff09\uff0c\u200b\u4f46\u200b\u6211\u200b\u89c9\u5f97\u200b\u4e0a\u8ff0\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u6a21\u578b\u200b\u66f4\u52a0\u200b\u5bb9\u6613\u200b\u7406\u89e3\u200b\uff0c\u200b\u4e14\u200b\u66f4\u52a0\u200b\u51c6\u786e\u200b\u4e00\u70b9\u200b</p>"},{"location":"research/paper_reading/nerf/math/#_2","title":"\u989c\u8272\u200b\u79ef\u5206\u200b\u7684\u200b\u63a8\u5bfc","text":"<p>\u200b\u53c2\u8003\u200b 1995 \u200b\u5e74\u200b Max \u200b\u7684\u200b\u8bba\u6587\u200b</p>"},{"location":"research/paper_reading/nerf/math/#_3","title":"\u4e00\u200b\u3001\u200b\u4ec5\u200b\u8003\u8651\u200b\u5438\u6536\u200b\u5149\u200b\uff08\u200b\u65e0\u200b\u6563\u5c04\u200b\u3001\u200b\u53cd\u5c04\u200b\uff09","text":"Fig1. A slab of base area E and thickness \u2206s. <p>\u200b\u5047\u8bbe\u200b\u7c92\u5b50\u200b\u90fd\u200b\u662f\u200b\u534a\u5f84\u200b\u4e3a\u200b \\(r\\) \uff0c\u200b\u6295\u5f71\u200b\u9762\u79ef\u200b \\(A = \\pi r^2\\) \u200b\u7684\u200b\u76f8\u540c\u200b\u7403\u4f53\u200b\uff0c\\(\\rho\\)  \u200b\u8868\u793a\u200b\u5355\u4f4d\u200b\u4f53\u79ef\u200b\u5185\u200b\u7684\u200b\u7c92\u5b50\u200b\u6570\u200b \u200b\u8003\u8651\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u5706\u67f1\u5f62\u200b\u7684\u200b\u5e95\u677f\u200b\uff0c\u200b\u5e95\u90e8\u200b\u7684\u200b\u9762\u79ef\u200b\u4e3a\u200b \\(E\\) \uff0c\u200b\u5e95\u677f\u200b\u7684\u200b\u539a\u5ea6\u200b\u4e3a\u200b \\(\\Delta s\\)\uff0c\u200b\u5149\u200b\u6cbf\u7740\u200b\u5782\u76f4\u200b\u5e95\u9762\u200b\u7684\u200b\u65b9\u5411\u200b \\(\\Delta s\\)  \u200b\u6d41\u52a8\u200b\u3002\u200b\u5e95\u677f\u200b\u7684\u200b\u4f53\u79ef\u200b \\(V=E \\Delta s\\)\uff0c\u200b\u81f3\u5c11\u200b\u5305\u542b\u200b\u7684\u200b\u7c92\u5b50\u200b\u6570\u76ee\u200b \\(N = \\rho E \\Delta s\\)\uff0c\u200b\u5982\u679c\u200b\u5e95\u677f\u200b\u8db3\u591f\u200b\u8584\u200b\u4f7f\u5f97\u200b\u5e95\u9762\u200b\u4e0a\u200b\u7684\u200b\u7c92\u5b50\u200b\u6295\u5f71\u200b\u5f88\u5c11\u200b\u91cd\u53e0\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e9b\u200b\u7c92\u5b50\u200b\u5728\u200b\u5e95\u677f\u200b\u4e0a\u200b\u906e\u6321\u200b\u7684\u200b\u603b\u9762\u79ef\u200b\u53ef\u4ee5\u200b\u7528\u200b \\(NA = \\rho AE \\Delta s\\) \u200b\u8868\u793a\u200b</p> <p>\u200b\u5219\u200b\u88ab\u200b\u906e\u6321\u200b\u7684\u200b\u5149\u7ebf\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\uff1a</p> \\[ \\eta = \\frac{\\rho AE \\Delta s}{E} = \\rho A \\Delta s \\] <p>\u200b\u8fdb\u4e00\u6b65\u200b\u4f30\u8ba1\u200b\uff0c\u200b\u5f53\u200b \\(\\Delta s \\rightarrow 0\\) \u200b\u65f6\u200b\uff0c\u200b\u4e14\u200b\u7c92\u5b50\u200b\u7684\u200b\u91cd\u53e0\u200b\u6982\u7387\u200b\u4e3a\u200b 0 \u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u5fae\u5206\u65b9\u7a0b\u200b\u6210\u7acb\u200b\uff1a</p> \\[ \\frac{d I}{d s}=-\\rho(s) A I(s)=-\\tau(s) I(s) \\] <p>\u200b\u4e0a\u5f0f\u200b\u4e2d\u200b\uff0c\\(s\\) \u200b\u662f\u200b\u6cbf\u7740\u200b\u5149\u6d41\u200b\u65b9\u5411\u200b\u7684\u200b\u4e00\u6761\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\u7684\u200b\u957f\u5ea6\u200b\u53c2\u6570\u200b\uff0c\\(I(s)\\) \u200b\u662f\u200b\u8ddd\u79bb\u200b\u4e3a\u200b \\(s\\) \u200b\u5904\u200b\u7684\u200b\u5149\u200b\u5f3a\u5ea6\u200b \\(\\tau(s) = \\rho(s) A\\) \u200b\u662f\u200b\u6d88\u5149\u7cfb\u6570\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5149\u7ebf\u200b\u88ab\u200b\u906e\u6321\u200b\u7684\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u4e0a\u8ff0\u200b\u5fae\u5206\u65b9\u7a0b\u200b\u7684\u200b\u89e3\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ I(s)=I_0 \\exp \\left(-\\int_0^s \\tau(t) d t\\right) \\] <p>\\(I(0)\\) \u200b\u662f\u200b \\(s = 0\\) \u200b\u5904\u200b\u7684\u200b\u5149\u200b\u5f3a\u5ea6\u200b\uff0c\u200b\u662f\u200b\u5149\u7ebf\u200b\u521a\u200b\u63a5\u89e6\u200b\u7269\u4f53\u200b\u65f6\u200b\u7684\u200b\u521d\u59cb\u200b\u5f3a\u5ea6\u200b</p> <p>\u200b\u4ece\u200b\u4e0a\u5f0f\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u63d0\u53d6\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u91cf\u200b\uff1a</p> \\[ T(s) = \\exp \\left(-\\int_0^s \\tau(t) d t\\right) \\] <p>\u200b\u8fd9\u4e2a\u200b\u91cf\u200b\u662f\u4ece\u200b\u8ddd\u79bb\u200b \\(0 \\rightarrow s\\) \u200b\u7684\u200b\u900f\u5c04\u7387\u200b</p> <p>\u200b\u4ece\u200b\u900f\u5c04\u7387\u200b\u5f15\u51fa\u200b\u4e86\u200b\u4f53\u7d20\u200b\u7684\u200b\u4e0d\u200b\u900f\u660e\u5ea6\u200b \\(\\alpha\\)\uff0c\u200b\u5047\u8bbe\u200b\u4f53\u7d20\u200b\u7684\u200b\u8fb9\u957f\u200b\u4e3a\u200b \\(l\\) \uff0c\u200b\u5f53\u200b\u6cbf\u7740\u200b\u4e00\u6761\u200b\u8fb9\u200b\u5e73\u884c\u200b\u89c2\u5bdf\u200b\u65f6\u200b\uff1a</p> \\[ \\alpha = 1 - T(l) = 1 - \\exp\\left(-\\int_0^l \\tau(t) d t\\right) \\]"},{"location":"research/paper_reading/nerf/math/#_4","title":"\u4e8c\u200b\u3001\u200b\u4ec5\u200b\u8003\u8651\u200b\u53d1\u5c04\u200b\u5149\u200b\uff08\u200b\u65e0\u200b\u5438\u6536\u200b\uff09","text":"<p>\u200b\u5982\u679c\u200b Fig1 \u200b\u4e2d\u200b\u7684\u200b\u7c92\u5b50\u200b\u662f\u200b\u900f\u660e\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u4ee5\u200b\u6bcf\u200b\u5355\u4f4d\u200b\u6295\u5f71\u200b\u9762\u79ef\u200b\u5f3a\u5ea6\u200b\u4e3a\u200b \\(C\\) \u200b\u5728\u200b\u53d1\u5149\u200b\uff0c\u200b\u5219\u200b\u524d\u6587\u200b\u63a8\u5bfc\u200b\u5f97\u51fa\u200b\u7684\u200b\u6295\u5f71\u200b\u9762\u79ef\u200b \\(\\rho A E \\Delta s\\) \u200b\u5c06\u4f1a\u200b\u4e3a\u200b\u5e95\u9762\u200b \\(E\\) \u200b\u8d21\u732e\u200b\u4e00\u4e2a\u200b\u53d1\u200b\u5149\u901a\u91cf\u200b \\(C \\rho A E \\Delta s\\)\uff0c\u200b\u5bf9\u4e8e\u200b\u5e95\u9762\u200b\u4e0a\u200b\u6bcf\u200b\u5355\u4f4d\u200b\u9762\u79ef\u200b\uff0c\u200b\u589e\u52a0\u200b\u7684\u200b\u901a\u5149\u91cf\u200b\u4e3a\u200b \\(C \\rho A \\Delta s\\)\uff0c\u200b\u5219\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u5fae\u5206\u65b9\u7a0b\u200b\u6210\u7acb\u200b\uff1a</p> \\[ \\frac{d I}{d s}=C(s) \\rho(s) A=C(s) \\tau(s)=g(s) \\] <p>\u200b\u8fd9\u91cc\u200b\u7684\u200b \\(g(s)\\) \u200b\u88ab\u200b\u79f0\u4e3a\u200b\u6e90\u9879\u200b\uff0c\u200b\u540e\u9762\u200b\u8fd8\u4f1a\u200b\u7ee7\u7eed\u200b\u8ba8\u8bba\u200b\u5b83\u200b\uff0c\u200b\u5305\u62ec\u200b\u53cd\u5c04\u200b\u3001\u200b\u53d1\u5c04\u200b\u7b49\u200b\uff0c\u200b\u4e0a\u8ff0\u200b\u5fae\u5206\u65b9\u7a0b\u200b\u7684\u200b\u89e3\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ I(s)=I_0+\\int_0^s g(t) d t \\]"},{"location":"research/paper_reading/nerf/math/#_5","title":"\u4e09\u200b\u3001\u200b\u8003\u8651\u200b\u5438\u6536\u200b\u548c\u200b\u53d1\u5c04","text":"<p>\u200b\u5408\u5e76\u200b\u4e00\u200b\u3001\u200b\u4e8c\u200b\u4e24\u4e2a\u200b\u6a21\u578b\u200b\u4e2d\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5fae\u5206\u65b9\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u4ee5\u4e0b\u200b\u5fae\u5206\u65b9\u7a0b\u200b\uff1a</p> \\[ \\frac{d I}{d s} =g(s)-\\tau(s) I(s) \\] <p>\u200b\u8fd9\u91cc\u200b\u6e90\u9879\u200b \\(g(s)\\) \u200b\u662f\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4efb\u610f\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0d\u518d\u200b\u662f\u200b\u4e4b\u524d\u200b\u7684\u200b\u5f62\u5f0f\u200b\u4e86\u200b</p> <p>\u200b\u5728\u200b\u4e0a\u5f0f\u200b\u5de6\u53f3\u200b\u540c\u4e58\u200b\u4e00\u4e2a\u200b\u5f0f\u5b50\u200b\uff0c\u200b\u5f97\u5230\u200b\u5982\u4e0b\u200b\u65b9\u7a0b\u200b\uff1a</p> \\[ \\left(\\frac{d I}{d s}+\\tau(s) I(s)\\right) \\exp \\left(\\int_0^s \\tau(t) d t\\right)=g(s) \\exp \\left(\\int_0^s \\tau(t) d t\\right) \\] <p>\u200b\u4e0a\u200b\u5f0f\u200b\u5de6\u8fb9\u200b\u662f\u200b\u4e24\u4e2a\u200b\u4e58\u79ef\u200b\u7684\u200b\u5fae\u5206\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5408\u5e76\u200b\uff1a</p> \\[ \\frac{d}{d s}\\left(I(s) \\exp \\left(\\int_0^s \\tau(t) d t\\right)\\right)=g(s) \\exp \\left(\\int_0^s \\tau(t) d t\\right) \\] <p>\u200b\u4ece\u200b \\(s = 0\\) \u200b\u79ef\u5206\u200b\u5230\u200b \\(s = D\\)\uff1a</p> \\[ I(D) \\exp \\left(\\int_0^D \\tau(t) d t\\right)-I_0=\\int_0^D\\left(g(s) \\exp \\left(\\int_0^s \\tau(t) d t\\right)\\right) d s \\] <p>\u200b\u79fb\u9879\u200b\u540e\u200b\u5316\u7b80\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\uff1a</p> \\[ I(D)=I_0 \\exp \\left(-\\int_0^D \\tau(t) d t\\right)+\\int_0^D g(s) \\exp \\left(-\\int_s^D \\tau(t) d t\\right) d s \\] <p>\u200b\u4e0a\u5f0f\u200b\u7684\u200b\u7b2c\u4e00\u9879\u200b\u662f\u200b\u80cc\u666f\u200b\u5149\u6e90\u200b\u7684\u200b\u5149\u5f3a\u200b\uff0c\u200b\u7b2c\u4e8c\u9879\u200b\u662f\u200b\u6e90\u9879\u200b \\(g(s)\\) \u200b\u5728\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u8d21\u732e\u200b\u79ef\u5206\u200b</p> <p>\u200b\u5199\u6210\u200b\u900f\u5c04\u7387\u200b\u76f8\u5173\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> \\[ I(D)=I_0 T(D)+\\int_0^D g(s) T(s) d s \\] <p>\u200b\u5bf9\u6bd4\u200b NeRF \u200b\u4e2d\u200b\u7684\u200b\u989c\u8272\u200b\u79ef\u5206\u200b\u516c\u5f0f\u200b</p> \\[ C(\\mathbf{r})=\\int_{t_n}^{t_f} T(t) \\sigma(\\mathbf{r}(t)) \\mathbf{c}(\\mathbf{r}(t), \\mathbf{d}) d t, \\text{ where } T(t)=\\exp \\left(-\\int_{t_n}^t \\sigma(\\mathbf{r}(s)) d s\\right) \\] <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff1a</p> <ul> <li>NeRF \u200b\u5ffd\u7565\u200b\u4e86\u200b\u80cc\u666f\u200b\u5149\u6e90\u200b\u5e26\u6765\u200b\u7684\u200b\u5149\u5f3a\u200b\u5f71\u54cd\u200b</li> <li>NeRF \u200b\u628a\u200b\u6e90\u9879\u200b \\(g(s)\\) \u200b\u5199\u6210\u200b\u4e86\u200b \\(\\sigma(\\mathbf{r}(t))\\cdot\\mathbf{c}(\\mathbf{r}(t),\\mathbf{d})\\) \u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5176\u4e2d\u200b \\(\\sigma\\) \u200b\u662f\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b</li> </ul> <p>\u200b\u6b64\u5916\u200b\u8fd9\u4e2a\u200b\u516c\u5f0f\u200b\u548c\u200b NeRF \u200b\u4e2d\u200b\u7684\u200b\u516c\u5f0f\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u91cd\u8981\u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200b\u5750\u6807\u7cfb\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5728\u200b NeRF \u200b\u4e2d\u200b\u76f8\u673a\u200b\u4e2d\u5fc3\u200b\u4e3a\u200b\u5750\u6807\u200b\u539f\u70b9\u200b</p> Note <p>\u200b\u4ece\u200b\u6982\u7387\u200b\u7684\u200b\u89d2\u5ea6\u200b\u89e3\u91ca\u200b\uff0c\\(T(t) \\cdot \\sigma(t)\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b\u8ddd\u79bb\u200b \\(t\\) \u200b\u5904\u200b\u505c\u4e0b\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\\(c(t)dt\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b\u8ddd\u79bb\u200b \\(t\\) \u200b\u5904\u200b\u7684\u200b\u989c\u8272\u200b</p>"},{"location":"research/paper_reading/nerf/math/#_6","title":"\u5206\u6bb5\u200b\u4f53\u79ef\u200b\u6e32\u67d3\u200b\u63a8\u5bfc","text":""},{"location":"research/paper_reading/nerf/math/#_7","title":"\u4e00\u200b\u3001\u200b\u8ba1\u7b97\u200b\u5206\u6bb5\u200b\u4f53\u79ef\u200b\u7684\u200b\u989c\u8272","text":"<p>\u200b\u6587\u4e2d\u200b\u5047\u8bbe\u200b\u4e86\u200b\u573a\u666f\u200b\u5728\u200b\u4e00\u5c0f\u5757\u200b\u5c04\u7ebf\u200b\u6bb5\u200b \\([a,b]\\) \u200b\u5185\u4e3a\u200b\u540c\u8d28\u200b\u5747\u5300\u200b\u4ecb\u8d28\u200b\uff0c\u200b\u5177\u6709\u200b\u6052\u5b9a\u200b\u989c\u8272\u200b \\(\\mathbf{c}_a\\) \u200b\u548c\u200b \u200b\u5bc6\u5ea6\u200b \\(\\sigma_a\\) \u200b\u4f53\u79ef\u200b\u4ecb\u8d28\u200b\u7684\u200b\u989c\u8272\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u8ba1\u7b97\u200b\uff1a</p> \\[ \\begin{aligned} \\boldsymbol{C}(a \\rightarrow b) &amp; =\\int_a^b T(a \\rightarrow t) \\cdot \\sigma(t) \\cdot \\mathbf{c}(t) d t \\\\ &amp; =\\sigma_a \\cdot \\mathbf{c}_a \\int_a^b T(a \\rightarrow t) d t \\\\ &amp; =\\sigma_a \\cdot \\mathbf{c}_a \\int_a^b \\exp \\left(-\\int_a^t \\sigma(u) d u\\right) d t \\\\ &amp; =\\sigma_a \\cdot \\mathbf{c}_a \\int_a^b \\exp \\left(-\\left.\\sigma_a u\\right|_a ^t\\right) d t \\\\ &amp; =\\sigma_a \\cdot \\mathbf{c}_a \\int_a^b \\exp \\left(-\\sigma_a(t-a)\\right) d t \\\\ &amp; =\\left.\\sigma_a \\cdot \\mathbf{c}_a \\cdot \\frac{\\exp \\left(-\\sigma_a(t-a)\\right)}{-\\sigma_a}\\right|_a ^b \\\\ &amp; =\\mathbf{c}_a \\cdot\\left(1-\\exp \\left(-\\sigma_a(b-a)\\right)\\right) \\end{aligned} \\] <p>\u200b\u8fd9\u4e2a\u200b\u5f0f\u5b50\u200b\u8bf4\u660e\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\u5206\u6bb5\u200b\u8fde\u7eed\u200b\u7684\u200b\u4ecb\u8d28\u200b\uff0c\u200b\u5b83\u200b\u5728\u200b\u67d0\u200b\u4e00\u6bb5\u200b\u5185\u200b\u6700\u7ec8\u200b\u7684\u200b\u989c\u8272\u200b\u7b49\u4e8e\u200b\u521d\u59cb\u200b\u989c\u8272\u200b\u4e0e\u200b\u4e00\u4e2a\u200b\u5bc6\u5ea6\u200b\u76f8\u5173\u200b\u7684\u200b\u5e38\u6570\u200b\u7684\u200b\u4e58\u79ef\u200b\uff08\u200b\u8fd9\u200b\u4e5f\u200b\u4e3a\u200b\u540e\u7eed\u200b\u7684\u200b\u53ef\u5fae\u200b\u4f18\u5316\u200b\u5960\u5b9a\u200b\u4e86\u200b\u57fa\u7840\u200b\uff09</p>"},{"location":"research/paper_reading/nerf/math/#_8","title":"\u4e8c\u200b\u3001\u200b\u8ba1\u7b97\u200b\u5206\u6bb5\u200b\u4f53\u79ef\u200b\u7684\u200b\u900f\u5c04\u7387","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u7ec4\u200b\u533a\u95f4\u200b \\(\\{[t_i,t_{i+1}]\\}_{i=1}^{N}\\)\uff0c\u200b\u5047\u8bbe\u200b\u5728\u200b\u7b2c\u200b \\(i\\) \u200b\u6bb5\u200b\u533a\u95f4\u200b\u5185\u200b\u4ecb\u8d28\u200b\u5177\u6709\u200b\u6052\u5b9a\u200b\u5bc6\u5ea6\u200b \\(\\sigma_i\\)\uff0c\u200b\u8bbe\u200b \\(t_{1}=0\\) \u200b\u548c\u200b \\(\\delta_{i} = t_{i+1} - t_{i}\\)\uff0c\u200b\u5219\u200b\u900f\u5c04\u7387\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ T_i=T\\left(t_i\\right)=T\\left(0 \\rightarrow t_i\\right)=\\exp \\left(-\\int_0^{t_i} \\sigma(t) d t\\right)=\\exp \\left(\\sum_{j=1}^{i-1}-\\sigma_j \\delta_j\\right) \\] <p>\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\u4e86\u200b\u5fae\u5206\u200b\u7684\u200b\u601d\u60f3\u200b\u79bb\u6563\u200b\u5730\u200b\u8ba1\u7b97\u200b\u8fd9\u4e2a\u200b\u79ef\u5206\u200b\u503c\u200b</p>"},{"location":"research/paper_reading/nerf/math/#_9","title":"\u4e09\u200b\u3001\u200b\u5206\u6bb5\u200b\u4f53\u79ef\u200b\u7684\u200b\u6e32\u67d3","text":"<p>\u200b\u7ed3\u5408\u200b\u7b2c\u4e00\u200b\u90e8\u5206\u200b\u548c\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u7684\u200b\u8ba1\u7b97\u7ed3\u679c\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5177\u6709\u200b\u5206\u6bb5\u200b\u5e38\u6570\u200b\u989c\u8272\u200b\u548c\u200b\u5bc6\u5ea6\u200b\u7684\u200b\u4ecb\u8d28\u200b\u6765\u200b\u8fdb\u884c\u200b\u7acb\u4f53\u200b\u6e32\u67d3\u200b\u8ba1\u7b97\u200b\u6700\u540e\u200b\u7684\u200b\u989c\u8272\u200b\uff1a</p> \\[ \\begin{aligned} \\boldsymbol{C}\\left(t_{N+1}\\right) &amp; =\\sum_{i=1}^N \\int_{t_i}^{t_{i+1}} T(t) \\cdot \\sigma_i \\cdot \\mathbf{c}_i d t \\\\ &amp; =\\sum_{i=1}^N \\int_{t_i}^{t_{i+1}} T\\left(0 \\rightarrow t_i\\right) \\cdot T\\left(t_i \\rightarrow t\\right) \\cdot \\sigma_i \\cdot \\mathbf{c}_i d t \\\\ &amp; =\\sum_{i=1}^N T\\left(0 \\rightarrow t_i\\right) \\int_{t_i}^{t_{i+1}} T\\left(t_i \\rightarrow t\\right) \\cdot \\sigma_i \\cdot \\mathbf{c}_i d t \\\\ &amp; =\\sum_{i=1}^N T\\left(0 \\rightarrow t_i\\right) \\cdot\\left(1-\\exp \\left(-\\sigma_i\\left(t_{i+1}-t_i\\right)\\right)\\right) \\cdot \\mathbf{c}_{i}\\\\ &amp; =\\sum_{i=1}^N T\\left(0 \\rightarrow t_i\\right) \\cdot\\left(1-\\exp \\left(-\\sigma_{i} \\delta_{i}\\right)\\right) \\cdot \\mathbf{c}_i \\end{aligned} \\] <p>\u200b\u5bf9\u200b\u8fd9\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u4e00\u4e9b\u200b\u8865\u5145\u200b\u8bf4\u660e\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u200b\u533a\u95f4\u200b \\([t_{i},t_{i+1}]\\)\uff1a</p> <ul> <li>\\(T(0 \\rightarrow t_{i})\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b\u8fd9\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u6982\u7387\u200b</li> <li>\\(1-\\exp(-\\sigma_{i} \\delta_{i})\\) \u200b\u662f\u200b\u5149\u7ebf\u200b\u7ecf\u8fc7\u200b\u8fd9\u200b\u6bb5\u200b\u533a\u95f4\u200b\u7684\u200b\u6298\u635f\u7387\u200b</li> <li>\\(c_i\\) \u200b\u662f\u200b\u8ddd\u79bb\u200b \\(t_{i}\\) \u200b\u5904\u200b (\u200b\u533a\u95f4\u200b\u5165\u5c04\u70b9\u200b)\u200b\u7684\u200b\u989c\u8272\u200b</li> </ul> <p>\u200b\u7b80\u5355\u200b\u7406\u89e3\u200b\uff1a\u200b\u4e00\u675f\u200b\u5149\u200b\u9996\u5148\u200b\u8981\u200b\u5230\u8fbe\u200b\u8fd9\u4e2a\u200b\u533a\u57df\u200b\uff0c\u200b\u7136\u540e\u200b\u7ecf\u8fc7\u200b\u8fd9\u4e2a\u200b\u533a\u57df\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u6709\u200b\u4e00\u4e9b\u200b\u6298\u635f\u200b\uff0c\u200b\u6700\u540e\u200b\u8981\u200b\u8ba1\u7b97\u200b\u51fa\u5c04\u200b\u7684\u200b\u65f6\u5019\u200b\u7684\u200b\u989c\u8272\u200b</p> <p>\u200b\u539f\u6587\u4e2d\u200b NeRF \u200b\u4e2d\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a</p> \\[ \\hat{C}(\\mathbf{r})=\\sum_{i=1}^N T_i\\left(1-\\exp \\left(-\\sigma_i \\delta_i\\right)\\right) \\mathbf{c}_i, \\text { where } T_i=\\exp \\left(-\\sum_{j=1}^{i-1} \\sigma_j \\delta_j\\right) \\] <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b Alpha \u200b\u5408\u6210\u200b\u6743\u91cd\u200b \\(\\alpha_{i}=1-\\exp({-\\sigma_{i} \\delta_{i})}\\) \u200b\u6765\u200b\u91cd\u5199\u200b\u4e0a\u8ff0\u200b\u5f0f\u5b50\u200b\uff1a</p> \\[ \\boldsymbol{C}\\left(t_{N+1}\\right)=\\sum_{n=i}^N T_i \\cdot \\alpha_i \\cdot \\mathbf{c}_i, \\quad \\text { where } \\quad T_i=\\prod_{i=1}^{N-1}\\left(1-\\alpha_i\\right) \\]"},{"location":"research/paper_reading/nerf/math/#ndc","title":"\u5c04\u7ebf\u200b\u7a7a\u95f4\u200bNDC \u200b\u5750\u6807\u7cfb\u200b\u63a8\u5bfc","text":"<p>NDC (Normalized Device Coordinate\uff0c\u200b\u5f52\u4e00\u5316\u200b\u8bbe\u5907\u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b)</p> <p>\u200b\u8fd9\u4e2a\u200b\u5750\u6807\u7cfb\u200b\u662f\u200b\u4ee5\u200b\u76f8\u673a\u200b\u4e3a\u200b\u539f\u70b9\u200b\u7684\u200b[-1, 1]\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e09\u7ef4\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u4e0d\u518d\u200b\u533a\u522b\u200b perspective \u200b\u548c\u200b orthographics \u200b\u6295\u5f71\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5750\u6807\u7cfb\u200b\u5c06\u200b\u771f\u5b9e\u4e16\u754c\u200b near--far \u200b\u7684\u200b\u7a7a\u95f4\u200b\u538b\u7f29\u200b\u7684\u200b\u4e00\u4e2a\u200b\u76f8\u5bf9\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u5750\u6807\u503c\u200b\u4e0d\u200b\u5177\u6709\u200b\u7a7a\u95f4\u200b\u7684\u200b\u7269\u7406\u200b\u610f\u4e49\u200b</p> <p>\u200b\u4ece\u200b\u76f8\u673a\u200b\u7a7a\u95f4\u200b\u5230\u200b NDC \u200b\u7a7a\u95f4\u200b\u7684\u200b\u53d8\u6362\u200b\uff0c\u200b\u7528\u4e8e\u200b\u9f50\u6b21\u200b\u5750\u6807\u200b\u7684\u200b 3D \u200b\u900f\u89c6\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b\uff1a</p> \\[ M=\\left(\\begin{array}{cccc} \\frac{n}{r} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{n}{t} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(f+n)}{f-n} &amp; \\frac{-2 f n}{f-n} \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right) \\] <ul> <li>\\(n\\) \u200b\u548c\u200b \\(f\\) \u200b\u662f\u200b\u8fd1\u573a\u200b\u548c\u200b\u8fdc\u573a\u200b\u88c1\u526a\u200b\u5e73\u9762\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> <li>\\(r\\) \u200b\u548c\u200b \\(t\\) \u200b\u662f\u200b\u573a\u666f\u200b\u5728\u200b\u8fd1\u573a\u200b\u88c1\u526a\u200b\u5e73\u9762\u200b\u53f3\u4fa7\u200b\u548c\u200b\u9876\u90e8\u200b\u7684\u200b\u8fb9\u754c\u200b</li> <li>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u76f8\u673a\u200b\u4e2d\u5fc3\u200b\u671d\u5411\u200b \\(-z\\) \u200b\u65b9\u5411\u200b\u4e0b\u200b\u7684\u200b\u89c4\u5b9a\u200b</li> </ul> <p>\u200b\u5982\u4f55\u200b\u63a8\u5bfc\u200b\u51fa\u200b M \u200b\u77e9\u9635\u200b\uff08\u200b\u900f\u89c6\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b\uff09\uff1f</p> <p>\u200b\u53c2\u8003\u200b OpenGL Projection Matrix</p> <p> </p> Fig2. Perspective Frustum and NDC. <p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u660e\u786e\u200b\u7684\u200b\u662f\u200b\uff0cM \u200b\u77e9\u9635\u200b\u96c6\u6210\u200b\u4e86\u200b\u88c1\u526a\u200b 3D \u200b\u5750\u6807\u7cfb\u200b\u548c\u200b\u8f6c\u5316\u200b\u5230\u200b NDC \u200b\u7a7a\u95f4\u200b\u7684\u200b\u529f\u80fd\u200b</p> <p>\u200b\u6240\u4ee5\u200b\u73b0\u5728\u200b\u7684\u200b\u5750\u6807\u7cfb\u200b\u6709\u200b\u4e09\u4e2a\u200b\uff0c\u200b\u4f9d\u6b21\u200b\u4e3a\u200b\uff1a3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b \u2192 \u200b\u88c1\u526a\u200b\u5750\u6807\u7cfb\u200b \u2192 NDC \u200b\u5750\u6807\u7cfb\u200b</p> <p>3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\u53c8\u200b\u53ef\u4ee5\u200b\u53eb\u505a\u200b\u4eba\u773c\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u4e09\u4e2a\u200b\u5750\u6807\u7cfb\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned} \\left(\\begin{array}{c} x_{\\text {clip }} \\\\ y_{\\text {clip }} \\\\ z_{\\text {clip }} \\\\ w_{\\text {clip }} \\end{array}\\right)=M_{p r o j e c t i o n} \\cdot\\left(\\begin{array}{c} x_{\\text {eye }} \\\\ y_{\\text {eye }} \\\\ z_{\\text {eye }} \\\\ w_{\\text {eye }} \\end{array}\\right) \\\\ \\\\ \\left(\\begin{array}{l} x_{n d c} \\\\ y_{n d c} \\\\ z_{n d c} \\end{array}\\right)=\\left(\\begin{array}{l} x_{\\text {clip }} / w_{c l i p} \\\\ y_{c l i p} / w_{c l i p} \\\\ z_{c l i p} / w_{c l i p} \\end{array}\\right) \\end{aligned} \\] <p>\u200b\u8fd9\u91cc\u200b\u4eba\u773c\u200b\u5750\u6807\u7cfb\u200b\u548c\u200b\u88c1\u526a\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u5750\u6807\u200b\u90fd\u200b\u7528\u200b\u9f50\u6b21\u200b\u5750\u6807\u200b\u6765\u200b\u8868\u793a\u200b</p> <p>3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\u662f\u200b\u53f3\u624b\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u800c\u200b NDC \u200b\u7a7a\u95f4\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u5de6\u624b\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b z \u200b\u8f74\u200b\u65b9\u5411\u200b\u662f\u200b\u76f8\u53cd\u200b\u7684\u200b\uff0c\u200b\u5728\u200b 3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\uff0c\u200b\u76f8\u673a\u200b\u4e2d\u5fc3\u200b\u5728\u200b\u539f\u70b9\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u65b9\u5411\u200b\u4e3a\u200b z \u200b\u8f74\u200b\u7684\u200b\u8d1f\u200b\u65b9\u5411\u200b</p> <p>3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b 3D \u200b\u70b9\u4f1a\u200b\u88ab\u200b\u6295\u5f71\u200b\u5728\u200b\u8fd1\u200b\u5e73\u9762\u200b(near plane\uff0c\u200b\u53c8\u200b\u53eb\u200b\u6295\u5f71\u200b\u5e73\u9762\u200b\uff09\u200b\u4e0a\u200b</p> <p>\u200b\u4e0b\u56fe\u200b\u5c55\u793a\u200b\u4e86\u200b 3D \u200b\u7a7a\u95f4\u200b\u70b9\u200b \\((x_{e},y_{e},z_{e})\\) \u200b\u5982\u4f55\u200b\u6295\u5f71\u200b\u5230\u200b\u8fd1\u200b\u5e73\u9762\u200b\u4e0a\u200b\u53d8\u6210\u200b\u70b9\u200b \\((x_{p},y_{p})\\)</p> <p> </p> Fig3. 3D Projection. <p>\u200b\u4ece\u200b\u4e0d\u540c\u200b\u5750\u6807\u8f74\u200b\u89c6\u89d2\u200b\u6765\u770b\u200b\uff0c\u200b\u6839\u636e\u200b\u76f8\u4f3c\u200b\u4e09\u89d2\u5f62\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u5982\u4e0b\u200b\u7684\u200b\u5750\u6807\u200b\uff1a</p> \\[ \\begin{aligned} x_p=\\frac{-n \\cdot x_e}{z_e}=\\frac{n \\cdot x_e}{-z_{e}}\\\\ y_p=\\frac{-n \\cdot y_e}{z_e}=\\frac{n \\cdot y_e}{-z_{e}} \\end{aligned} \\] <p>\u200b\u6211\u4eec\u200b\u5c06\u200b\u88c1\u526a\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u7b2c\u56db\u4e2a\u200b\u5206\u91cf\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b \\(-z_{e}\\)\uff0c\u200b\u8fd9\u6837\u200b M \u200b\u77e9\u9635\u200b\u7684\u200b\u7b2c\u56db\u884c\u200b\u53d8\u6210\u200b\u4e86\u200b \\((0,0,-1,0)\\)</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u5c06\u200b \\(x_{p}\\) \u200b\u548c\u200b \\(y_{p}\\) \u200b\u6620\u5c04\u200b\u5230\u200b NDC \u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\u7684\u200b \\(x_{n}\\) \u200b\u548c\u200b \\(y_{n}\\)\uff0c\u200b\u5229\u7528\u200b\u7684\u200b\u6620\u5c04\u200b\u5173\u7cfb\u200b\u662f\u200b\uff1a</p> \\[ [l, r] \\rightarrow [-1, 1] \\quad \\text{and} \\quad [b, t] \\rightarrow [-1, 1] \\] <p> </p> Fig4. Formula deduction for mapping. <p>\u200b\u4ee3\u5165\u200b\u4e4b\u524d\u200b\u6c42\u5f97\u200b\u7684\u200b \\(x_{p}\\) \u200b\u548c\u200b \\(y_{p}\\) \u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b \\((x_{n},y_{n})\\) \u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff1a</p> \\[ \\begin{aligned} x_{n} = (\\underbrace{\\frac{2 n}{r-l} \\cdot x_e+\\frac{r+l}{r-l} \\cdot z_e}_{x_c}) /-z_{e}\\\\ y_{n} = (\\underbrace{\\frac{2 n}{t-b} \\cdot y_e+\\frac{t+b}{t-b} \\cdot z_e}_{y_c}) /-z_e \\end{aligned} \\] <p>\u200b\u7531\u4e8e\u200b\u4e4b\u524d\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u8bbe\u200b\u88c1\u526a\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u7b2c\u56db\u4e2a\u200b\u5206\u91cf\u200b\u4e3a\u200b \\(-z_{e}\\)\uff0c\u200b\u4e8e\u662f\u200b\u8fd9\u91cc\u200b\u76f4\u63a5\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u8003\u8651\u200b\u5206\u6bcd\u200b\uff0c\u200b\u5f97\u5230\u200b M \u200b\u77e9\u9635\u200b\u7684\u200b\u7b2c\u4e00\u884c\u200b\u548c\u200b\u7b2c\u4e8c\u884c\u200b\u5206\u522b\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned} \\left(\\begin{array}{cccc} \\frac{2 n}{r-l} &amp; 0 &amp; \\frac{r+l}{r-l} &amp; 0 \\\\ 0 &amp; \\frac{2 n}{t-b} &amp; \\frac{t+b}{t-b} &amp; 0 \\\\ . &amp; . &amp; . &amp; . \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right) \\end{aligned} \\] <p>\u200b\u6700\u540e\u200b\u53ea\u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u7b2c\u4e09\u884c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b M \u200b\u77e9\u9635\u200b\u7684\u200b\u5b8c\u6574\u200b\u8868\u8fbe\u5f0f\u200b</p> <p>\u200b\u56e0\u4e3a\u200b \\(z\\) \u200b\u4e0e\u200b \\(x\\) \u200b\u548c\u200b \\(y\\) \u200b\u65e0\u5173\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u501f\u52a9\u200b \\(w\\) \u200b\u5206\u91cf\u200b\u6765\u200b\u5bfb\u627e\u200b \\(z_{n}\\) \u200b\u548c\u200b \\(z_{e}\\) \u200b\u7684\u200b\u5173\u7cfb\u200b</p> <p>\u200b\u5229\u7528\u200b\u5f85\u5b9a\u200b\u7cfb\u6570\u200b\u6cd5\u200b\uff0c\u200b\u8bbe\u200b M \u200b\u77e9\u9635\u200b\u4e3a\u200b\uff1a</p> \\[ \\left(\\begin{array}{l} x_c \\\\ y_c \\\\ z_c \\\\ w_c \\end{array}\\right)=\\left(\\begin{array}{cccc} \\frac{2 n}{r-l} &amp; 0 &amp; \\frac{r+l}{r-l} &amp; 0 \\\\ 0 &amp; \\frac{2 n}{t-b} &amp; \\frac{t+b}{t-b} &amp; 0 \\\\ 0 &amp; 0 &amp; A &amp; B \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right)\\left(\\begin{array}{l} x_e \\\\ y_e \\\\ z_e \\\\ w_e \\end{array}\\right) \\] <p>\u200b\u5176\u4e2d\u200b \\(A, B\\) \u200b\u662f\u200b\u5f85\u89e3\u200b\u7684\u200b\u53c2\u6570\u200b</p> <p>\u200b\u5728\u200b\u4eba\u773c\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b \\(w_{e} = 1\\)\uff0c\u200b\u4ee3\u5165\u200b\u89e3\u5f97\u200b\uff1a</p> \\[ z_n=\\frac{A z_e+B}{-z_e} \\] <p>\u200b\u4e3a\u4e86\u200b\u8ba1\u7b97\u200b\u53c2\u6570\u200b \\(A\\) \u200b\u548c\u200b \\(B\\), \u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b \\(z_{e}, z_{n}\\) \u200b\u7684\u200b\u5173\u7cfb\u200b\uff1a\\((-n, -1)\\) \u200b\u548c\u200b \\((-f, 1)\\)</p> <p>\u200b\u4ee3\u5165\u200b\u53ef\u200b\u5217\u51fa\u200b\u65b9\u7a0b\u7ec4\u200b\uff1a</p> \\[ \\left\\{\\begin{array} { l }  { \\frac { - A n + B } { n } = - 1 } \\\\ { \\frac { - A f + B } { f } = 1 } \\end{array} \\rightarrow \\left\\{\\begin{array}{l} -A n+B=-n \\\\ -A f+B=f \\end{array}\\right.\\right. \\] <p>\u200b\u89e3\u5f97\u200b\u53c2\u6570\u200b \\(A\\) \u200b\u548c\u200b \\(B\\) \u200b\u540e\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u5b8c\u6574\u200b\u7684\u200b M \u200b\u77e9\u9635\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\left(\\begin{array}{cccc} \\frac{2 n}{r-l} &amp; 0 &amp; \\frac{r+l}{r-l} &amp; 0 \\\\ 0 &amp; \\frac{2 n}{t-b} &amp; \\frac{t+b}{t-b} &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(f+n)}{f-n} &amp; \\frac{-2 f n}{f-n} \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right) \\] <p>\u200b\u5982\u679c\u200b\u4eba\u773c\u200b\u7a7a\u95f4\u200b\u662f\u200b\u5bf9\u79f0\u200b\u7684\u200b\uff0c\u200b\u5373\u200b \\(l = -r, b = -t\\)\uff0c\u200b\u5219\u200b M \u200b\u77e9\u9635\u200b\u53ef\u4ee5\u200b\u5199\u6210\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ \\left(\\begin{array}{cccc} \\frac{n}{r} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{n}{t} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(f+n)}{f-n} &amp; \\frac{-2 f n}{f-n} \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right) \\] <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u548c\u200b NeRF \u200b\u4e2d\u200b\u7ed9\u51fa\u200b\u7684\u200b\u516c\u5f0f\u200b\u662f\u200b\u4e00\u81f4\u200b\u7684\u200b</p> <p>\u200b\u6709\u200b\u4e86\u200b\u900f\u89c6\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b M \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b3D \u200b\u9f50\u6b21\u200b\u5750\u6807\u200b\u6295\u5f71\u200b\u5230\u200b NDC \u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\uff1a</p> \\[ \\begin{aligned} &amp;\\left(\\begin{array}{cccc} \\frac{n}{r} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{n}{t} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(f+n)}{f-n} &amp; \\frac{-2 f n}{f-n} \\\\ 0 &amp; 0 &amp; -1 &amp; 0 \\end{array}\\right)\\left(\\begin{array}{l} x \\\\ y \\\\ z \\\\ 1 \\end{array}\\right)=\\left(\\begin{array}{c} \\frac{n}{r} x \\\\ \\frac{n}{t} y \\\\ \\frac{-(f+n)}{f-n} z-\\frac{-2 f n}{f-n} \\\\ -z \\end{array}\\right) \\\\ &amp; \\text { project } \\rightarrow\\left(\\begin{array}{c} \\frac{n}{r} \\frac{x}{-z} \\\\ \\frac{n}{t} \\frac{y}{-z} \\\\ \\frac{(f+n)}{f-n}-\\frac{2 f n}{f-n} \\frac{1}{-z} \\end{array}\\right) \\end{aligned} \\] <p>\u200b\u6295\u5f71\u200b\u4e4b\u540e\u200b\u5f97\u5230\u200b\u7684\u200b\u70b9\u200b\u662f\u200b\u4f4d\u4e8e\u200b NDC \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\uff0c\u200b\u4e14\u200b\u539f\u59cb\u200b\u89c6\u200b\u9525\u4f53\u200b\u5df2\u200b\u88ab\u200b\u6620\u5c04\u200b\u5230\u200b\u7acb\u65b9\u4f53\u200b \\(\\left[-1,1 \\right]^3\\) \u200b\u4e0a\u200b\uff08\u200b\u56e0\u4e3a\u200b\u505a\u200b\u4e86\u200b\u88c1\u526a\u200b\uff09</p> <p>\u200b\u73b0\u5728\u200b\u5c06\u200b 3D \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u5c04\u7ebf\u200b \\(\\mathbf{r} = \\mathbf{o} + t \\mathbf{d}\\) \u200b\u6295\u5f71\u200b\u5230\u200b NDC \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u4e3a\u200b \\(\\mathbf{r}^{\\prime} = \\mathbf{o}^{\\prime} + t^{\\prime} \\mathbf{d}^{\\prime}\\) </p> <p>\u200b\u5c06\u200b\u5f97\u5230\u200b\u7684\u200b NDC \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u6295\u5f71\u200b\u70b9\u200b\u5750\u6807\u200b\u5199\u6210\u200b\u8fd9\u4e2a\u200b\u5f62\u5f0f\u200b\uff1a\\(\\left(a_x x / z, a_y y / z, a_z+b_z / z\\right)^{\\top}\\) </p> <p>\\(a_{x},a_{y},a_{z},b_{z}\\) \u200b\u90fd\u200b\u662f\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4e66\u5199\u200b\u8868\u8fbe\u5f0f\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u540e\u7eed\u200b\u4f1a\u200b\u4ee3\u5165\u200b\u5177\u4f53\u200b\u7684\u200b\u5ba2\u89c2\u200b\u503c\u200b</p> <p>NDC \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5149\u7ebf\u200b \\(\\mathbf{r}^{\\prime}\\) \u200b\u7684\u200b\u53c2\u6570\u200b\u5206\u91cf\u200b \\((r_{x},r_{y},r_{z})\\) \u200b\u6ee1\u8db3\u200b\u4e0b\u200b\u5f0f\u200b\uff1a</p> \\[ \\left(\\begin{array}{c} a_x \\frac{o_x+t d_x}{o_z+t d_z} \\\\ a_y \\frac{o_y+t d_y}{o_z+t d_z} \\\\ a_z+\\frac{b_z}{o_z+t d_z} \\end{array}\\right)=\\left(\\begin{array}{c} o_x^{\\prime}+t^{\\prime} d_x^{\\prime} \\\\ o_y^{\\prime}+t^{\\prime} d_y^{\\prime} \\\\ o_z^{\\prime}+t^{\\prime} d_z^{\\prime} \\end{array}\\right) \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(\\mathbf{r}_{i} = o_{i}+t\\textbf{d}_{i},\\quad \\mathbf{r}^{\\prime}_{i} = \\mathbf{o}^{\\prime}_{i} + t^{\\prime} \\mathbf{d}^{\\prime}_{i}, \\quad i=x,y,z\\) </p> <p>\u200b\u4e3a\u4e86\u200b\u6d88\u9664\u200b\u4e00\u4e2a\u200b\u81ea\u7531\u5ea6\u200b\uff0c\u200b\u5c06\u200b \\(t^{\\prime}=0\\) \u200b\u548c\u200b \\(t=0\\) \u200b\u6620\u5c04\u200b\u5230\u200b\u540c\u200b\u4e00\u70b9\u200b\uff0c\u200b\u5219\u200b\u5728\u200b NDC \u200b\u5750\u6807\u7cfb\u200b\u4e0b\u200b\u5149\u7ebf\u200b\u4e2d\u5fc3\u200b\u7684\u200b\u5750\u6807\u200b\u4e3a\u200b\uff1a</p> \\[ \\mathbf{o}^{\\prime}=\\left(\\begin{array}{c} o_x^{\\prime} \\\\ o_y^{\\prime} \\\\ o_z^{\\prime} \\end{array}\\right)=\\left(\\begin{array}{c} a_x \\frac{o_x}{o_z} \\\\ a_y \\frac{o_y}{o_z} \\\\ a_z+\\frac{b_z}{o_z} \\end{array}\\right) \\] <p>\u200b\u5c06\u200b\u5149\u7ebf\u200b\u4e2d\u5fc3\u200b\u7684\u200b\u5750\u6807\u200b\u4ee3\u5165\u200b\u5230\u200b\u4e4b\u524d\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\uff0c\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\begin{aligned} \\left(\\begin{array}{c} t^{\\prime} d_x^{\\prime} \\\\ t^{\\prime} d_y^{\\prime} \\\\ t^{\\prime} d_z^{\\prime} \\end{array}\\right) &amp; =\\left(\\begin{array}{c} a_x \\frac{o_x+t d_x}{o_z+t d_z}-a_x \\frac{o_x}{o_z} \\\\ a_y \\frac{o_y+t d_y}{o_z+t d_z}-a_y \\frac{o_y}{o_z} \\\\ a_z+\\frac{b_z}{o_z+t d_z}-a_z-\\frac{b_z}{o_z} \\end{array}\\right) \\\\ &amp;=\\left(\\begin{array}{c} a_x \\frac{t d_z}{o_z+t d_z}\\left(\\frac{d_x}{d_z}-\\frac{o_x}{o_z}\\right) \\\\ a_y \\frac{t d_z}{o_z+t d_z}\\left(\\frac{d_y}{d_z}-\\frac{o_y}{o_z}\\right) \\\\ -b_z \\frac{t d_z}{o_z+t d_z} \\frac{1}{o_z} \\end{array}\\right) \\end{aligned} \\] <p>\u200b\u89c2\u5bdf\u200b\u4e09\u4e2a\u200b\u5206\u91cf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b \\(t^{\\prime}\\) \u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ t^{\\prime}=\\frac{t d_z}{o_z+t d_z}=1-\\frac{o_z}{o_z+t d_z} \\] <p>\u200b\u540c\u9664\u200b \\(t^{\\prime}\\) \u200b\u4e4b\u540e\u200b\u4e5f\u200b\u5f97\u5230\u200b\u4e86\u200b \\(\\mathbf{d}^{\\prime}\\) \u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\mathbf{d}^{\\prime}=\\left(\\begin{array}{c} a_x\\left(\\frac{d_x}{d_z}-\\frac{o_x}{o_z}\\right) \\\\ a_y\\left(\\frac{d_y}{d_z}-\\frac{o_y}{o_z}\\right) \\\\ -b_z \\frac{1}{o_z} \\end{array}\\right) \\] <p>\u200b\u5728\u200b\u63a8\u5bfc\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u5e38\u6570\u200b\u6700\u540e\u200b\u9700\u8981\u200b\u786e\u5b9a\u200b\u4e0b\u6765\u200b\uff0c\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned} a_x &amp; =-\\frac{n}{r} \\\\ a_y &amp; =-\\frac{n}{t} \\\\ a_z &amp; =\\frac{f+n}{f-n} \\\\ b_z &amp; =\\frac{2 f n}{f-n} \\end{aligned} \\] <p>\u200b\u57fa\u4e8e\u200b\u6807\u51c6\u200b\u9488\u5b54\u200b\u76f8\u673a\u200b\u6a21\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b \\(a_{x},a_{y}\\) \u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u4e0b\u200b\u53c2\u6570\u200b\u5316\u200b\uff1a</p> \\[ \\begin{aligned} &amp; a_x=-\\frac{f_{c a m}}{W / 2} \\\\ &amp; a_y=-\\frac{f_{c a m}}{H / 2} \\end{aligned} \\] <ul> <li>\\(W\\) \u200b\u548c\u200b \\(H\\) \u200b\u662f\u200b\u4ee5\u200b\u50cf\u7d20\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u7684\u200b\u56fe\u50cf\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u9ad8\u5ea6\u200b</li> <li>\\(f_{cam}\\) \u200b\u662f\u200b\u76f8\u673a\u200b\u7684\u200b\u7126\u8ddd\u200b</li> </ul> <p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u7684\u200b\u573a\u666f\u200b\u6355\u83b7\u200b\u4e2d\u200b\uff0c\u200b\u5047\u8bbe\u200b\u8fdc\u573a\u200b\u7684\u200b\u8fb9\u754c\u200b\u4e3a\u200b\u65e0\u7a77\u5927\u200b\uff0c\u200b\u57fa\u4e8e\u200b\u8fd9\u6837\u200b\u7684\u200b\u5047\u8bbe\u200b\uff0c\\(a_{z}\\) \u200b\u548c\u200b \\(b_{z}\\) \u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned} a_z &amp; =1 \\\\ b_z &amp; =2 n \\end{aligned} \\] <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u4ee3\u5165\u200b\u4e0a\u8ff0\u200b\u5e38\u91cf\u200b\u53c2\u6570\u200b\uff0c\u200b\u6211\u4eec\u200b\u6700\u540e\u200b\u6c42\u5f97\u200b\u7684\u200b NDC \u200b\u5ea7\u6807\u200b\u7cfb\u4e0b\u200b\u7684\u200b\u5149\u7ebf\u200b\u5750\u6807\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned} &amp; \\mathbf{o}^{\\prime}=\\left(\\begin{array}{c} -\\frac{f_{c a m}}{W / 2} \\frac{o_x}{o_z} \\\\ -\\frac{f_{c a m}}{H / 2} \\frac{o_y}{o_z} \\\\ 1+\\frac{2 n}{o_z} \\end{array}\\right) \\\\ &amp; \\mathbf{d}^{\\prime}=\\left(\\begin{array}{c} -\\frac{f_{c a m}}{W / 2}\\left(\\frac{d_x}{d_z}-\\frac{o_x}{o_z}\\right) \\\\ -\\frac{f_{c a m}}{H / 2}\\left(\\frac{d_y}{d_z}-\\frac{o_y}{o_z}\\right) \\\\ -2 n \\frac{1}{o_z} \\end{array}\\right) \\end{aligned} \\] <p>\u200b\u81f3\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b8c\u6210\u200b\u4e86\u200b NDF \u200b\u5750\u6807\u7cfb\u200b\u4e0b\u200b\u5149\u7ebf\u200b\u5750\u6807\u200b\u7684\u200b\u63a8\u5bfc\u200b \u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u7406\u200b\u6e05\u695a\u200b\u5404\u4e2a\u200b\u5750\u6807\u7cfb\u200b\u4e4b\u95f4\u200b\u7684\u200b\u51e0\u4f55\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u54ea\u4e9b\u200b\u91cf\u200b\u662f\u200b\u5e38\u91cf\u200b\uff0c\u200b\u54ea\u4e9b\u200b\u91cf\u200b\u662f\u200b\u53d8\u91cf\u200b\u53c2\u6570\u200b</p> Supplementary materials <p>\u200b\u4e00\u70b9\u200b\u8865\u5145\u200b\uff1a</p> <p>NeRF \u200b\u7684\u200b\u539f\u6587\u4e2d\u200b\u8fd8\u200b\u63d0\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7ec6\u8282\u200b\uff1a\u200b\u5728\u200b\u5c06\u200b\u5149\u7ebf\u200b\u8f6c\u6362\u200b\u5230\u200b NDC \u200b\u5750\u6807\u7cfb\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5c06\u200b \\(\\mathbf{o}\\) \u200b\u505a\u200b\u4e86\u200b\u504f\u79fb\u200b\uff0c\u200b\u79fb\u52a8\u200b\u5230\u200b\u4e86\u200b\u5c04\u7ebf\u200b\u4e0e\u200b \\(z=-n\\) \u200b\u7684\u200b\u8fd1\u200b\u5e73\u9762\u200b\u7684\u200b\u4ea4\u70b9\u200b\u5904\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u597d\u5904\u200b\u662f\u200b\uff0c\u200b\u5f53\u200b\u5149\u7ebf\u200b\u8f6c\u6362\u200b\u5230\u200b NDC \u200b\u5750\u6807\u7cfb\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b \\([0,1]\\) \u200b\u533a\u95f4\u200b\u5185\u200b\u7ebf\u6027\u200b\u91c7\u6837\u200b \\(t^{\\prime}\\)\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b\u539f\u59cb\u200b\u7684\u200b 3D \u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u83b7\u5f97\u200b\u4ece\u200b \\(n\\) \u200b\u5230\u200b \\(\\infty\\) \u200b\u7684\u200b\u89c6\u5dee\u200b\u7ebf\u6027\u200b\u91c7\u6837\u200b</p> <p>\u200b\u5177\u4f53\u200b\u53d6\u503c\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned} \\mathbf{o}_{n} = \\mathbf{o} + t_{n} \\mathbf{d} \\\\ t_{n} = \\frac{n+o_{z}}{d_{z}} \\end{aligned} \\]"},{"location":"research/paper_reading/nerf/note/","title":"NeRF \u200b\u8bba\u6587\u200b\u7b14\u8bb0","text":"<p>Abstract</p> <p>NeRF \u200b\u8bba\u6587\u200b\u7684\u200b\u9605\u8bfb\u200b\u7b14\u8bb0\u200b</p> <p> \u200b\u53c2\u8003\u8d44\u6599\u200b</p> <ul> <li>https://yconquesty.github.io/blog/ml/nerf/</li> </ul> <p><p>-- By @Zicx</p></p>"},{"location":"research/paper_reading/nerf/note/#nerf_1","title":"NeRF \u200b\u662f\u200b\u505a\u200b\u4ec0\u4e48\u200b\u7684","text":"<p>\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b\u7a00\u758f\u200b\u7684\u200b\u8f93\u5165\u200b\u89c6\u56fe\u200b\u4f18\u5316\u200b\u5e95\u5c42\u200b\u7684\u200b\u7684\u200b\u8fde\u7eed\u200b\u8f90\u5c04\u200b\u4f53\u79ef\u200b\u573a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u590d\u6742\u200b\u573a\u666f\u200b\u7684\u200b\u65b0\u89c6\u89d2\u200b\u5408\u6210\u200b</p>"},{"location":"research/paper_reading/nerf/note/#nerf_2","title":"NeRF \u200b\u662f\u200b\u600e\u4e48\u200b\u505a\u200b\u7684","text":"Fig1. NeRF Pipeline"},{"location":"research/paper_reading/nerf/note/#pipeline","title":"\u4e00\u200b\u3001Pipeline","text":"<ul> <li>a).\u200b\u6cbf\u7740\u200b\u76f8\u673a\u200b\u5149\u7ebf\u200b\u7684\u200b\u65b9\u5411\u200b\u91c7\u6837\u200b 5D \u200b\u5750\u6807\u200b</li> <li>b).\u200b\u5c06\u200b\u5750\u6807\u200b\u4fe1\u606f\u200b\u8f93\u5165\u200b\u5230\u200b MLP \u200b\u4e2d\u200b\uff0c\u200b\u4ea7\u751f\u200b\u989c\u8272\u200b\u548c\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b</li> <li>c).\u200b\u4f7f\u7528\u200b\u7acb\u4f53\u200b\u6e32\u67d3\u200b\u5c06\u200b\u989c\u8272\u200b\u548c\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b\u5408\u6210\u200b\u4e3a\u200b\u56fe\u50cf\u200b</li> <li>d).\u200b\u6e32\u67d3\u200b\u51fd\u6570\u200b\u662f\u200b\u53ef\u200b\u5fae\u5206\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6700\u5c0f\u5316\u200b\u5408\u6210\u200b\u56fe\u50cf\u200b\u548c\u200b\u5b9e\u9645\u200b\u89c2\u5bdf\u200b\u5230\u200b\u7684\u200b\u56fe\u50cf\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6b8b\u5dee\u200b\u6765\u200b\u4f18\u5316\u200b\u573a\u666f\u200b\u8868\u793a\u200b</li> </ul>"},{"location":"research/paper_reading/nerf/note/#_1","title":"\u4e8c\u200b\u3001\u200b\u9759\u6001\u200b\u573a\u666f\u200b\u7684\u200b\u8868\u793a","text":"<ul> <li>\u200b\u4f7f\u7528\u200b\u5168\u200b\u8fde\u63a5\u200b\uff08\u200b\u975e\u200b\u5377\u79ef\u200b\uff09\u200b\u6df1\u5ea6\u200b\u7f51\u7edc\u200b(\u200b\u591a\u5c42\u200b\u611f\u77e5\u673a\u200b\uff0cMLP)\u200b\u6765\u200b\u8868\u793a\u200b\u573a\u666f\u200b</li> <li>\u200b\u8f93\u5165\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8fde\u7eed\u200b\u7684\u200b5D\u200b\u5750\u6807\u200b\uff1a\u200b\u7a7a\u95f4\u200b\u4f4d\u7f6e\u200b \\((x,y,z)\\) \u200b\u548c\u200b 2D \u200b\u89c2\u5bdf\u200b\u65b9\u5411\u200b\\((\\theta, \\phi)\\)</li> <li>\u200b\u8f93\u51fa\u200b\u662f\u200b\u8be5\u200b\u7a7a\u95f4\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b \\(\\sigma\\) \u200b\u548c\u200b\u89c6\u89d2\u200b\u76f8\u5173\u200b\u7684\u200b\u989c\u8272\u200b \\(\\textbf{c} = (r,g,b)\\)</li> </ul> Note <p>\u200b\u8fd9\u91cc\u200b\u7684\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b\u53ea\u200b\u5bf9\u200b\u67d0\u200b\u4e00\u4e2a\u200b\u7a7a\u95f4\u200b\u70b9\u200b\\((x,y,z)\\) \u200b\u800c\u8a00\u200b\uff0c\u200b\u5b83\u200b\u8868\u793a\u200b\u4e00\u6761\u200b\u7a7f\u8fc7\u200b\u7a7a\u95f4\u200b\u70b9\u200b\\((x,y,z)\\) \u200b\u7684\u200b\u5c04\u7ebf\u200b\u7d2f\u8ba1\u200b\u4e86\u200b\u591a\u5c11\u200b\u8f90\u5c04\u200b(radiance)\uff0c\u200b\u540e\u9762\u200b\u4f1a\u200b\u5c06\u200b\u5b83\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6982\u7387\u5bc6\u5ea6\u200b</p> <p>\u200b\u591a\u200b\u89c6\u56fe\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8fde\u7eed\u200b\u4e00\u81f4\u6027\u200b</p> <ul> <li>\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b \\(\\sigma\\) \u200b\u51fd\u6570\u200b\u53ea\u200b\u4e0e\u200b\u7a7a\u95f4\u200b\u4f4d\u7f6e\u200b \\(\\mathbf{x}\\) \u200b\u6709\u5173\u200b \u2192 \\(\\sigma(\\mathbf{x})\\)</li> <li>\u200b\u989c\u8272\u200b \\(c\\) \u200b\u51fd\u6570\u200b\u4e0e\u200b\u7a7a\u95f4\u200b\u4f4d\u7f6e\u200b \\(\\mathbf{x}\\) \u200b\u548c\u200b\u89c6\u89d2\u200b \\(\\mathbf{d}\\) \u200b\u90fd\u200b\u6709\u5173\u200b \u2192 \\(c(\\mathbf{x},\\mathbf{d})\\)</li> </ul> <p>MLP \u200b\u7684\u200b\u8bbe\u8ba1\u200b</p> <ul> <li>\u200b\u7528\u200b 8 \u200b\u4e2a\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u6765\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u7684\u200b\u7a7a\u95f4\u200b\u5750\u6807\u200b \\(x\\) (\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u4e3a\u200b ReLU\uff0c\u200b\u6bcf\u5c42\u200b256\u200b\u4e2a\u200b\u901a\u9053\u200b)</li> <li>\u200b\u8f93\u51fa\u200b \\(\\sigma\\) \u200b\u548c\u200b\u4e00\u4e2a\u200b 256 \u200b\u7ef4\u200b\u7684\u200b\u7279\u5f81\u5411\u91cf\u200b</li> <li>\u200b\u5c06\u200b\u7279\u5f81\u5411\u91cf\u200b\u548c\u200b\u89c6\u89d2\u200b\u65b9\u5411\u200b \\(d\\) \u200b\u8fde\u63a5\u8d77\u6765\u200b</li> <li>\u200b\u4f20\u9012\u200b\u5230\u200b\u4e00\u4e2a\u200b\u989d\u5916\u200b\u7684\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b (\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u4e3a\u200b ReLU\uff0c128\u200b\u4e2a\u200b\u901a\u9053\u200b)</li> <li>\u200b\u8f93\u51fa\u200b\u4f9d\u8d56\u4e8e\u200b\u89c6\u56fe\u200b\u7684\u200b RGB \u200b\u989c\u8272\u200b</li> </ul> <p>MLP \u200b\u7684\u200b Loss \u200b\u8ba1\u7b97\u200b</p> \\[ \\mathcal{L}=\\sum_{\\mathbf{r} \\in \\mathcal{R}}\\left[\\left\\|\\hat{C}_c(\\mathbf{r})-C(\\mathbf{r})\\right\\|_2^2+\\left\\|\\hat{C}_f(\\mathbf{r})-C(\\mathbf{r})\\right\\|_2^2\\right] \\] <ul> <li>\u200b\u7528\u200b\u4e86\u200b\u4e24\u4e2a\u200b MLP \u200b\u7f51\u7edc\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b\u7c97\u200b(coarse) \u200b\u7f51\u7edc\u200b\u548c\u200b\u7ec6\u200b(fine) \u200b\u7f51\u7edc\u200b</li> </ul> <p>\u200b\u540e\u7eed\u200b\u4f18\u5316\u200b\u7684\u200b\u90e8\u5206\u200b\u4f1a\u200b\u5177\u4f53\u200b\u89e3\u91ca\u200b\u7c97\u200b\u7f51\u7edc\u200b\u548c\u200b\u7ec6\u200b\u7f51\u7edc\u200b</p> <ul> <li>\\(\\mathcal{R}\\) \u200b\u662f\u200b\u6bcf\u4e2a\u200b batch \u200b\u91cc\u9762\u200b\u5149\u7ebf\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\\(\\mathbf{r}\\) \u200b\u662f\u200b\u6307\u200b\u96c6\u5408\u200b\u91cc\u9762\u200b\u7684\u200b\u6bcf\u200b\u4e00\u6761\u200b\u5149\u7ebf\u200b</li> <li>\\(C(\\mathbf{r})\\)\uff0c\\(\\hat{C}_c(\\mathbf{r})\\)\uff0c\\(\\hat{C}_f(\\mathbf{r})\\) \u200b\u5206\u522b\u200b\u662f\u200b\u5b9e\u666f\u200b\uff0c\u200b\u7c97\u200b\u7f51\u7edc\u200b\uff0c\u200b\u7ec6\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u8f93\u51fa\u200b\u7684\u200b\u5149\u7ebf\u200b RGB \u200b\u989c\u8272\u200b</li> <li>\u200b\u540c\u65f6\u200b\u8fd8\u200b\u5c06\u200b \\(\\hat{C}_c(\\mathbf{r})\\) \u200b\u7684\u200b\u635f\u5931\u200b\u6700\u5c0f\u5316\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u7c97\u200b\u7f51\u7edc\u200b\u7684\u200b\u6743\u91cd\u200b\u5206\u5e03\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec6\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u5206\u914d\u200b\u6837\u672c\u200b</li> </ul>"},{"location":"research/paper_reading/nerf/note/#_2","title":"\u4e09\u200b\u3001\u200b\u795e\u7ecf\u200b\u6e32\u67d3","text":"<ul> <li>\u200b\u6cbf\u7740\u200b\u76f8\u673a\u200b\u5149\u7ebf\u200b\u67e5\u8be2\u200b 5D \u200b\u5750\u6807\u200b\u6765\u200b\u5408\u6210\u200b\u89c6\u56fe\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u7acb\u4f53\u200b\u6e32\u67d3\u200b\u5c06\u200b\u8f93\u51fa\u200b\u989c\u8272\u200b\u548c\u200b\u5bc6\u5ea6\u200b\u6295\u5f71\u200b\u5230\u200b 2D \u200b\u56fe\u50cf\u200b\u4e2d\u200b</li> </ul> <p>\u200b\u4ece\u200b\u7279\u5b9a\u200b\u7684\u200b\u89c6\u89d2\u200b\u6e32\u67d3\u200b NeRF \u200b\u7684\u200b\u8fc7\u7a0b\u200b</p> <ul> <li>\u200b\u5229\u7528\u200b\u7a7f\u8fc7\u200b\u573a\u666f\u200b\u7684\u200b\u76f8\u673a\u200b\u5149\u7ebf\u200b\uff0c\u200b\u751f\u6210\u200b\u4e00\u7ec4\u200b\u91c7\u6837\u200b\u7684\u200b\u4e09\u7ef4\u200b\u70b9\u200b \\(P_{3D}\\)</li> <li>\u200b\u5229\u7528\u200b\u4e09\u7ef4\u200b\u70b9\u200b\u548c\u200b\u5bf9\u5e94\u200b\u7684\u200b 2D \u200b\u89c6\u89d2\u200b\u65b9\u5411\u200b\u4f5c\u4e3a\u200b MLP \u200b\u7684\u200b\u8f93\u5165\u200b\uff0c\u200b\u8f93\u51fa\u200b\u5bc6\u5ea6\u200b\u548c\u200b\u989c\u8272\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u7acb\u4f53\u200b\u6e32\u67d3\u200b\u6280\u672f\u200b\u5c06\u200b\u8f93\u51fa\u200b\u989c\u8272\u200b\u548c\u200b\u5bc6\u5ea6\u200b\u7d2f\u79ef\u5230\u200b\u4e00\u4e2a\u4e8c\u7ef4\u200b\u56fe\u50cf\u200b \\(I_{2D}\\) \u200b\u4e2d\u200b</li> </ul> <p>\u200b\u7531\u4e8e\u200b\u5177\u6709\u200b\u53ef\u5fae\u6027\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u4f18\u5316\u200b MLP \u200b\u7f51\u7edc\u200b\uff0c\u200b\u6700\u5c0f\u5316\u200b\u6bcf\u4e2a\u200b\u89c2\u5bdf\u200b\u56fe\u50cf\u200b\u548c\u200b NeRF \u200b\u6e32\u67d3\u200b\u51fa\u6765\u200b\u7684\u200b\u76f8\u5e94\u200b\u89c6\u56fe\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8bef\u5dee\u200b</p> <p>\u200b\u8be5\u200b\u90e8\u5206\u200b\u8be6\u7ec6\u200b\u5185\u5bb9\u200b\u53c2\u89c1\u200b NeRF \u200b\u7684\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b</p> <p>\u200b\u5149\u7ebf\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\u4e00\u4e2a\u200b 3D \u200b\u7a7a\u95f4\u200b\u5750\u6807\u200b</p> \\[ \\mathbf{r}(t) = \\mathbf{o} + t \\mathbf{d} \\] Attention <p>\u200b\u539f\u6587\u4e2d\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5047\u8bbe\u200b\uff1a</p> <ol> <li>\u200b\u573a\u666f\u200b\u662f\u200b\u7531\u200b\u4e00\u56e2\u200b\u53d1\u5149\u200b\u7c92\u5b50\u200b\u7ec4\u6210\u200b\u7684\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7c92\u5b50\u200b\u5bc6\u5ea6\u200b\u7684\u200b\u7a7a\u95f4\u200b\u5206\u5e03\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b**</li> <li>\u200b\u53d1\u5c04\u200b\u7684\u200b\u5149\u200b\uff08\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4f53\u7d20\u200b\u90fd\u200b\u4f1a\u200b\u5411\u200b\u56db\u5468\u200b\u5747\u5300\u200b\u53d1\u51fa\u200b\u5149\u200b\uff09\u200b\u4e0d\u968f\u200b\u89c2\u5bdf\u200b\u89c6\u89d2\u200b\u800c\u200b\u6539\u53d8\u200b**</li> </ol> <p>\u200b\u5047\u8bbe\u200b\u8ddd\u79bb\u200b \\(t\\) \u200b\u7684\u200b\u8fd1\u573a\u200b\u8fb9\u754c\u200b\u548c\u200b\u8fdc\u573a\u200b\u8fb9\u754c\u200b\u5206\u522b\u200b\u4e3a\u200b \\(t_n\\) \u200b\u548c\u200b \\(t_f\\) \uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u4e8e\u200b\u4e00\u6761\u200b\u5c04\u7ebf\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u671f\u671b\u200b\u989c\u8272\u200b\u8868\u8fbe\u5f0f\u200b\u5e94\u8be5\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ C(\\mathbf{r})=\\int_{t_n}^{t_f} T(t) \\sigma(\\mathbf{r}(t)) \\mathbf{c}(\\mathbf{r}(t), \\mathbf{d}) d t, \\text{ where } T(t)=\\exp \\left(-\\int_{t_n}^t \\sigma(\\mathbf{r}(s)) d s\\right) \\] <p>\u200b\u51fd\u6570\u200b \\(T(t)\\) \u200b\u8868\u793a\u200b\u7684\u200b\u662f\u200b\u5149\u7ebf\u200b\u5728\u200b \\(t_n\\) \u200b\u5230\u200b \\(t\\) \u200b\u8ddd\u79bb\u200b\u5185\u200b\u7684\u200b\u900f\u5c04\u7387\u200b\uff0c\u200b\u5373\u200b\u5149\u7ebf\u200b\u5728\u200b\u4e0d\u200b\u78b0\u5230\u200b\u4efb\u4f55\u200b\u5176\u4ed6\u200b\u7c92\u5b50\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u80fd\u591f\u200b\u4f20\u64ad\u200b\u7684\u200b\u6982\u7387\u200b</p> <p>\u200b\u4e00\u5f20\u200b\u793a\u4f8b\u200b\u56fe\u200b\uff1a</p> <p> </p> Fig2. Light Sampling in 3D Space. <p>\u200b\u4ece\u200b\u8fde\u7eed\u200b\u7684\u200b NeRF \u200b\u4e2d\u200b\u6e32\u67d3\u200b\u89c6\u56fe\u200b\u9700\u8981\u200b\u4f30\u8ba1\u200b\u76f8\u673a\u200b\u5149\u7ebf\u200b\u8ffd\u8e2a\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u50cf\u7d20\u200b\u7684\u200b\u79ef\u5206\u200b \\(C(\\mathbf{r})\\)</p> <p>\u200b\u8fd9\u4e2a\u200b\u5f88\u200b\u597d\u200b\u7406\u89e3\u200b\uff0c\u200b\u56e0\u4e3a\u200b 2D \u200b\u56fe\u50cf\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u50cf\u7d20\u200b\u503c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u76f8\u673a\u200b\u53d1\u51fa\u200b\u7684\u200b\u4e00\u6761\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u70b9\u200b\u7d2f\u79ef\u200b\u53e0\u52a0\u200b\u7684\u200b\u7ed3\u679c\u200b</p> <p>\u200b\u6587\u4e2d\u200b\u4f30\u8ba1\u200b\u79ef\u5206\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b \u200b\u6570\u503c\u79ef\u5206\u200b(Quadrature) \u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5c31\u662f\u200b\u5206\u5c42\u62bd\u6837\u200b\uff0c\u200b\u628a\u200b \\([t_n, t_f]\\) \u200b\u7b49\u200b\u5206\u6210\u200b \\(\\mathbf{N}\\) \u200b\u4e2a\u200b\u533a\u95f4\u200b\uff0c\u200b\u7136\u540e\u200b\u4ece\u200b\u6bcf\u4e2a\u200b\u533a\u95f4\u200b\u5185\u200b\u5747\u5300\u200b\u968f\u673a\u200b\u5730\u200b\u62bd\u53d6\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b</p> \\[ t_i \\sim \\mathcal{U}\\left[t_n+\\frac{i-1}{N}\\left(t_f-t_n\\right), t_n+\\frac{i}{N}\\left(t_f-t_n\\right)\\right] \\quad i =1,2,...N \\] <p>\u200b\u8fd9\u91cc\u200b\u5f97\u5230\u200b\u7684\u200b \\(t_i\\) \u200b\u662f\u200b\u6bcf\u4e2a\u200b\u5c0f\u200b\u533a\u95f4\u200b\u5185\u200b\u7684\u200b\u968f\u673a\u200b\u62bd\u53d6\u200b\u6837\u672c\u200b\u70b9\u200b\u7684\u200b\u7a7a\u95f4\u200b\u5750\u6807\u200b</p> <p>\u200b\u6839\u636e\u200b\u6570\u503c\u79ef\u5206\u200b\u65b9\u6cd5\u200b\u4f30\u8ba1\u200b\u7684\u200b\u989c\u8272\u200b\u79ef\u5206\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> \\[ \\hat{C}(\\mathbf{r})=\\sum_{i=1}^N T_i\\left(1-\\exp \\left(-\\sigma_i \\delta_i\\right)\\right) \\mathbf{c}*i, \\text { where } T_i=\\exp \\left(-\\sum*{j=1}^{i-1} \\sigma_j \\delta_j\\right) \\] <p>\u200b\u901a\u8fc7\u200b\u5206\u5c42\u62bd\u6837\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5c06\u200b\u8fde\u7eed\u200b\u7684\u200b\u79ef\u5206\u200b\u53d8\u6210\u200b\u4e86\u200b\u79bb\u6563\u200b\u7684\u200b\u6c42\u548c\u200b\uff0c\\(\\delta_i = t_{i+1} - t_i\\) \u200b\u662f\u200b\u6837\u672c\u200b\u95f4\u9694\u200b(\u200b\u8ddd\u79bb\u200b) \u200b\u6587\u4e2d\u200b\u8fd8\u200b\u63d0\u5230\u200b\u4e86\u200b\u53ef\u4ee5\u200b\u7b80\u5316\u200b\u4e3a\u200b\u4f20\u7edf\u200b\u7684\u200b Alpha \u200b\u5408\u6210\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b alpha value \u200b\u662f\u200b</p> \\[ \\alpha_i = 1 - exp(-\\sigma_i \\delta_i) \\]"},{"location":"research/paper_reading/nerf/note/#_3","title":"\u56db\u200b\u3001\u200b\u5982\u4f55\u200b\u4f18\u5316","text":"<p>\u200b\u8f93\u5165\u200b\u4e3a\u200b\u4e00\u7cfb\u5217\u200b\u5df2\u77e5\u200b\u76f8\u673a\u200b\u4f4d\u59ff\u200b\u7684\u200b\u56fe\u50cf\u200b</p> <p>\u200b\u4e24\u200b\u65b9\u9762\u200b\u7684\u200b\u4f18\u5316\u200b\uff1a</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u6765\u200b\u8f6c\u6362\u200b\u8f93\u5165\u200b\u7684\u200b 5D \u200b\u5750\u6807\u200b\uff0c\u200b\u5c06\u200b\u5750\u6807\u200b\u6620\u5c04\u200b\u5230\u200b\u66f4\u200b\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b MLP \u200b\u80fd\u591f\u200b\u8868\u793a\u200b\u66f4\u200b\u9ad8\u9891\u7387\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u7269\u4f53\u200b\u8868\u9762\u200b\u7684\u200b\u51e0\u4f55\u200b\u548c\u200b\u7eb9\u7406\u200b\u66f4\u52a0\u200b\u903c\u771f\u200b</li> <li>\u200b\u91c7\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7531\u200b\u7c97\u5230\u200b\u7ec6\u200b\u7684\u200b\u5206\u5c42\u200b\u91c7\u6837\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u989c\u8272\u200b\u8d21\u732e\u200b\u5927\u200b\u7684\u200b\u70b9\u200b\u9644\u8fd1\u200b\u91c7\u6837\u200b\u5bc6\u96c6\u200b\uff0c\u200b\u8d21\u732e\u200b\u5c0f\u200b\u7684\u200b\u70b9\u200b\u9644\u8fd1\u200b\u91c7\u6837\u200b\u7a00\u758f\u200b\uff0c\u200b\u4ee5\u200b\u51cf\u5c11\u200b\u5fc5\u8981\u200b\u7684\u200b\u91c7\u6837\u200b\u6b21\u6570\u200b\uff0c\u200b\u5145\u5206\u200b\u91c7\u6837\u200b\u6574\u4e2a\u200b\u9ad8\u9891\u200b\u573a\u666f\u200b\u8868\u793a\u200b</li> </ul> <p>\u200b\u8fd9\u4e2a\u200b\u91c7\u6837\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u5e94\u8be5\u200b\u662f\u200b\u6307\u200b\u76f8\u673a\u200b\u5149\u7ebf\u200b\u5bf9\u200b\u771f\u5b9e\u200b 3D \u200b\u573a\u666f\u200b\u7684\u200b\u91c7\u6837\u200b\uff0c\u200b\u5728\u200b\u8f93\u5165\u200b\u5230\u200b MLP \u200b\u4e4b\u524d\u200b</p>"},{"location":"research/paper_reading/nerf/note/#positional-encoding","title":"\u4f4d\u7f6e\u200b\u7f16\u7801\u200b(Positional encoding)","text":"<p>\u200b\u6df1\u5ea6\u200b\u7f51\u7edc\u200b\u66f4\u200b\u504f\u5411\u200b\u4e8e\u200b\u5b66\u4e60\u200b\u4f4e\u9891\u200b\u51fd\u6570\u200b\uff0c\u200b\u7814\u7a76\u200b\u8868\u660e\u200b\uff0c\u200b\u5728\u200b\u5c06\u200b\u8f93\u5165\u200b\u901a\u8fc7\u200b\u9ad8\u9891\u200b\u51fd\u6570\u200b\u6620\u5c04\u200b\u5230\u200b\u66f4\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\u540e\u200b\u518d\u200b\u4f20\u9012\u200b\u7ed9\u200b\u7f51\u7edc\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u66f4\u597d\u200b\u5730\u200b\u62df\u5408\u200b\u5305\u542b\u200b\u9ad8\u9891\u200b\u53d8\u5316\u200b\u7684\u200b\u6570\u636e\u200b</p> <p>\u200b\u5c06\u200b\u539f\u5148\u200b\u7684\u200b\u8868\u793a\u200b\u51fd\u6570\u200b\u53d8\u6210\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u7ec4\u5408\u200b\uff1a</p> \\[ F_{\\Theta}=F_{\\Theta}^{\\prime} \\circ \\gamma \\] <p>\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\uff0c\\(F_{\\Theta}^{\\prime}\\) \u200b\u51fd\u6570\u200b\u9700\u8981\u200b\u7f51\u7edc\u200b\u5b66\u4e60\u200b\u7684\u200b\uff0c\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u666e\u901a\u200b\u7684\u200b MLP\uff0c\\(\\gamma\\) \u200b\u51fd\u6570\u200b\u5219\u200b\u4e0d\u200b\u9700\u8981\u200b\u5b66\u4e60\u200b \\(\\gamma\\) \u200b\u5728\u200b\u8fd9\u91cc\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6620\u5c04\u200b(mapping) \u200b\u51fd\u6570\u200b\uff0c\u200b\u4ece\u200b\u7a7a\u95f4\u200b \\(\\mathbf{R}\\) \u200b\u6620\u5c04\u200b\u5230\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b \\(\\mathbf{R}^{2L}\\) \u200b\u539f\u6587\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u7f16\u7801\u200b\u65b9\u7a0b\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\gamma(p)=\\left(\\sin \\left(2^0 \\pi p\\right), \\cos \\left(2^0 \\pi p\\right), \\cdots, \\sin \\left(2^{L-1} \\pi p\\right), \\cos \\left(2^{L-1} \\pi p\\right)\\right) \\] <p>\\(\\gamma(\\cdot)\\) \u200b\u5206\u522b\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u7a7a\u95f4\u200b\u5750\u6807\u200b \\(\\mathbf{x}\\) \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5206\u91cf\u200b(x,y,z) \u200b\u548c\u200b \u200b\u89c6\u89d2\u200b\u65b9\u5411\u200b\u7684\u200b\u5355\u4f4d\u5411\u91cf\u200b \\(\\mathbf{d}\\) \u200b\u7684\u200b\u4e09\u4e2a\u200b\u5206\u91cf\u200b\uff0c\u200b\u6700\u540e\u200b\u4f1a\u200b\u88ab\u200b\u5f52\u4e00\u5316\u200b\u5230\u200b\u533a\u95f4\u200b [-1, 1] \u200b\u4e4b\u95f4\u200b(sinh \u200b\u51fd\u6570\u200b)</p> <p>\u200b\u6587\u4e2d\u200b\u7528\u5230\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b</p> <ul> <li>\\(L = 10 \\quad \\text{for} \\quad \\gamma(\\mathbf{x})\\)</li> <li>\\(L = 4 \\quad \\text{for} \\quad \\gamma(\\mathbf{d})\\)</li> </ul> <p>\u200b\u7ef4\u5ea6\u200b \\(L\\) \u200b\u7684\u200b\u9009\u62e9\u200b\u548c\u200b\u573a\u666f\u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\u4ee5\u53ca\u200b\u7b97\u529b\u200b\u6709\u5173\u200b\uff0c\u200b\u4e5f\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u80fd\u200b\u5b66\u4e60\u200b\u5230\u200b\u7684\u200b\u6700\u9ad8\u200b\u9891\u7387\u200b\u7684\u200b\u5927\u5c0f\u200b</p>"},{"location":"research/paper_reading/nerf/note/#hierarchical-volume-sampling","title":"\u5206\u5c42\u200b\u91c7\u6837\u200b(Hierarchical volume sampling)","text":"<p>\u200b\u901a\u8fc7\u200b\u6309\u7167\u200b\u6837\u672c\u200b\u5bf9\u200b\u6700\u7ec8\u200b\u6e32\u67d3\u200b\u7684\u200b\u9884\u671f\u200b\u5f71\u54cd\u200b\u8fdb\u884c\u200b\u6bd4\u4f8b\u200b\u5206\u914d\u200b\u63d0\u9ad8\u200b\u6e32\u67d3\u200b\u6548\u7387\u200b \u200b\u540c\u65f6\u200b\u4f18\u5316\u200b\u4e24\u4e2a\u200b MLP \u200b\u7f51\u7edc\u200b\uff1a\"coarse\" \u200b\u548c\u200b \"fine\"</p> <ol> <li>\u200b\u5c06\u200b\u5728\u200b\u76f8\u673a\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\uff0c\u200b\u7531\u200b near \u200b\u548c\u200b far \u200b\u6784\u6210\u200b\u7684\u200b\u533a\u95f4\u200b\u8303\u56f4\u200b\u7b49\u200b\u5206\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u5c0f\u200b\u533a\u95f4\u200b\u5185\u200b\u5747\u5300\u200b\u91c7\u6837\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u91c7\u6837\u200b\u70b9\u200b\uff0c\u200b\u4e00\u5171\u200b \\(N_c\\)  \u200b\u4e2a\u200b\u91c7\u6837\u200b\u70b9\u200b</li> <li>\u200b\u5229\u7528\u200b\u8fd9\u4e9b\u200b\u7a7a\u95f4\u200b\u70b9\u6765\u200b\u8bc4\u4f30\u200b\u7c97\u200b\u7f51\u7edc\u200b</li> <li>\u200b\u518d\u200b\u5728\u200b\u6bcf\u6761\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\u751f\u6210\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u7684\u200b\u91c7\u6837\u200b\u70b9\u200b (\u200b\u731c\u60f3\u200b\u662f\u200b\u7c97\u200b\u7f51\u7edc\u200b\u7684\u200b\u7ed3\u679c\u200b\u8f93\u51fa\u200b\u4e86\u200b\u6837\u672c\u200b\u70b9\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u5206\u5e03\u200b\uff0c\u200b\u4e3a\u200b\u7b2c\u4e8c\u6b21\u200b\u91c7\u6837\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53c2\u8003\u200b)</li> <li>\u200b\u4f7f\u7528\u200b\u53cd\u6f14\u200b\u53d8\u6362\u200b\u91c7\u6837\u200b\u7b2c\u4e8c\u7ec4\u200b \\(N_f\\) \u200b\u4e2a\u200b\u7a7a\u95f4\u200b\u4f4d\u7f6e\u200b\u70b9\u200b\uff0c\u200b\u7528\u200b\u4e24\u7ec4\u200b\u7a7a\u95f4\u200b\u70b9\u200b\u8bc4\u4f30\u200b\u7ec6\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u4e24\u7ec4\u200b\u7a7a\u95f4\u200b\u70b9\u6765\u200b\u8ba1\u7b97\u200b\u5c04\u7ebf\u200b\u6700\u540e\u200b\u7684\u200b\u989c\u8272\u200b \\(\\hat{C}_f(\\mathbf{r})\\)</li> </ol> <p>\u200b\u7b2c\u4e09\u6b65\u200b\u5177\u4f53\u200b\u662f\u200b\u600e\u4e48\u200b\u505a\u200b\u7684\u200b</p> <p>\u200b\u9996\u5148\u200b\u5c06\u200b\u539f\u200b\u65b9\u7a0b\u200b\u4e2d\u200b\u7c97\u200b\u7f51\u7edc\u200b \\(\\hat{C_c}(\\mathbf{r})\\) \u200b\u7684\u200b Alpha \u200b\u5408\u6210\u200b\u7684\u200b\u989c\u8272\u200b\u91cd\u5199\u200b\u4e3a\u200b\u6cbf\u7740\u200b\u5149\u7ebf\u200b\u91c7\u6837\u200b\u5230\u200b\u7684\u200b\u6240\u6709\u200b\u989c\u8272\u200b \\(c_i\\) \u200b\u7684\u200b\u52a0\u6743\u200b\u548c\u200b</p> \\[ \\hat{C}*c(\\mathbf{r})=\\sum*{i=1}^{N_c} w_i c_i, \\quad w_i=T_i\\left(1-\\exp \\left(-\\sigma_i \\delta_i\\right)\\right) \\] <p>\u200b\u8fd9\u4e2a\u200b\u6743\u503c\u200b \\(w_i\\) \u200b\u548c\u200b\u900f\u8fc7\u200b\u7387\u200b\u4ee5\u53ca\u200b\u4f53\u79ef\u200b\u5bc6\u5ea6\u200b\u6709\u5173\u200b</p> <p>\u200b\u5c06\u200b\u6743\u503c\u200b\u5f52\u4e00\u5316\u200b\u540e\u200b\u53ef\u4ee5\u200b\u5316\u4e3a\u200b\u6cbf\u200b\u5c04\u7ebf\u200b\u5206\u5e03\u200b\u7684\u200b\u5206\u6bb5\u200b\u5e38\u6570\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b(Piecewise-constant PDF), \u200b\u76ee\u7684\u200b\u662f\u200b\u7c97\u7565\u200b\u4f30\u8ba1\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\u7684\u200b\u7269\u4f53\u200b\u5206\u5e03\u200b\u60c5\u51b5\u200b</p> \\[ \\hat{w_i} = \\frac{w_i}{\\sum_{j=1}^{N_c}w_j} \\]"},{"location":"research/paper_reading/nerf/note/#_4","title":"\u7ec6\u8282\u200b\u8bf4\u660e","text":"<p>\u200b\u4f53\u79ef\u200b\u8fb9\u754c\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u5408\u6210\u200b\u56fe\u50cf\u200b\uff0c\u200b\u7f29\u653e\u200b\u573a\u666f\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u4f4d\u4e8e\u200b\u4ee5\u200b\u539f\u70b9\u200b\u4e3a\u200b\u4e2d\u5fc3\u200b\u3001\u200b\u8fb9\u957f\u200b\u4e3a\u200b 2 \\(([-1,1])\\)\u200b\u7684\u200b\u7acb\u65b9\u4f53\u200b\u5185\u200b\uff0c\u200b\u5e76\u200b\u4ec5\u200b\u67e5\u8be2\u200b\u8fd9\u4e2a\u200b\u8fb9\u754c\u200b\u4f53\u79ef\u200b\u5185\u200b\u7684\u200b NeRF \u200b\u8868\u793a\u200b \u200b\u5bf9\u4e8e\u200b\u771f\u5b9e\u200b\u56fe\u50cf\u200b\uff0c\u200b\u6570\u636e\u200b\u96c6\u200b\u5305\u542b\u200b\u53ef\u4ee5\u200b\u5b58\u5728\u200b\u4e8e\u200b\u6700\u8fd1\u200b\u70b9\u200b\u548c\u200b\u65e0\u7a77\u8fdc\u200b\u70b9\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u7528\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u70b9\u200b\u7684\u200b\u6df1\u5ea6\u200b\u8303\u56f4\u200b\u6620\u5c04\u200b\u5230\u200b\u533a\u95f4\u200b [-1, 1] \u200b\u8fd9\u200b\u5c06\u200b\u6240\u6709\u200b\u5149\u7ebf\u200b\u7684\u200b\u8d77\u70b9\u200b\u79fb\u52a8\u200b\u5230\u200b\u573a\u666f\u200b\u7684\u200b\u8fd1\u200b\u5e73\u9762\u200b(near plane)\uff0c\u200b\u5c06\u200b\u76f8\u673a\u200b\u7684\u200b\u900f\u89c6\u200b\u5149\u200b\u6620\u5c04\u200b\u4e3a\u200b\u53d8\u6362\u200b\u540e\u200b\u4f53\u79ef\u200b\u4e2d\u200b\u7684\u200b\u5e73\u884c\u200b\u5149\u7ebf\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u89c6\u5dee\u200b\u800c\u200b\u4e0d\u662f\u200b\u4f7f\u7528\u200b\u5ea6\u91cf\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6240\u6709\u200b\u5750\u6807\u200b\u90fd\u200b\u662f\u200b\u6709\u200b\u754c\u9650\u200b\u7684\u200b</p> <p>\u200b\u8bad\u7ec3\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u771f\u5b9e\u200b\u573a\u666f\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u5728\u200b\u4f18\u5316\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5bf9\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b \\(\\sigma\\) \u200b\u6dfb\u52a0\u200b\u4e86\u200b\u968f\u673a\u200b\u9ad8\u65af\u200b\u566a\u58f0\u200b (\u200b\u5728\u200b\u901a\u8fc7\u200b ReLU \u200b\u4e4b\u524d\u200b)</p> <p>\u200b\u6e32\u67d3\u200b</p> <p>\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5728\u200b\u6bcf\u6761\u200b\u5c04\u7ebf\u200b\u4e0a\u200b\u91c7\u6837\u200b 64 \u200b\u4e2a\u70b9\u200b\u8f93\u5165\u200b\u5230\u200b\u7c97\u200b\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u91c7\u6837\u200b 64+128=192 \u200b\u4e2a\u70b9\u200b\u5230\u200b\u7ec6\u200b\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u6761\u200b\u5149\u7ebf\u200b\u4e00\u5171\u200b\u91c7\u6837\u200b 256 \u200b\u4e2a\u70b9\u200b \u200b\u5bf9\u4e8e\u200b\u5408\u6210\u200b\u7684\u200b\u56fe\u7247\u200b\uff0c\u200b\u6bcf\u5f20\u200b\u56fe\u7247\u200b\u9700\u8981\u200b 640k \u200b\u6761\u200b\u5149\u7ebf\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u771f\u5b9e\u200b\u573a\u666f\u200b\uff0c\u200b\u6bcf\u5f20\u200b\u56fe\u7247\u200b\u9700\u8981\u200b 762k \u200b\u6761\u200b\u5149\u7ebf\u200b</p>"},{"location":"research/paper_reading/nerf/note/#nerf_3","title":"NeRF \u200b\u505a\u200b\u7684\u200b\u7ed3\u679c\u200b\u600e\u4e48\u6837","text":""},{"location":"research/paper_reading/nerf/note/#_5","title":"\u76f8\u5173\u200b\u6307\u6807","text":"<ul> <li>PSNR: \u200b\u5cf0\u503c\u200b\u4fe1\u566a\u6bd4\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u8bc4\u4ef7\u200b\u56fe\u50cf\u200b\u8d28\u91cf\u200b\u7684\u200b\u6307\u6807\u200b (\u200b\u8d8a\u9ad8\u8d8a\u200b\u597d\u200b)</li> <li>SSIM: \u200b\u7ed3\u6784\u200b\u76f8\u4f3c\u6027\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u8861\u91cf\u200b\u4e24\u5e45\u200b\u56fe\u50cf\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u7684\u200b\u6307\u6807\u200b (\u200b\u8d8a\u9ad8\u8d8a\u200b\u597d\u200b)</li> <li>LPIPS: \u200b\u5b66\u4e60\u200b\u611f\u77e5\u200b\u56fe\u50cf\u200b\u5757\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u5ea6\u91cf\u200b\u4e24\u5e45\u200b\u56fe\u50cf\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u522b\u200b\u7684\u200b\u6307\u6807\u200b (\u200b\u8d8a\u4f4e\u200b\u8d8a\u200b\u597d\u200b)</li> </ul>"},{"location":"research/paper_reading/nerf/note/#_6","title":"\u4f18\u52bf","text":"<ul> <li>\u200b\u7ee7\u627f\u200b\u4e86\u200b\u4f53\u79ef\u200b\u8868\u793a\u200b\u7684\u200b\u4f18\u70b9\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u590d\u6742\u200b\u7684\u200b\u51e0\u4f55\u200b\u5f62\u72b6\u200b\u548c\u200b\u5916\u89c2\u200b</li> <li>\u200b\u9002\u5408\u200b\u4f7f\u7528\u200b\u6295\u5f71\u56fe\u200b\u50cf\u200b\u8fdb\u884c\u200b\u57fa\u4e8e\u200b\u68af\u5ea6\u200b\uff08\u200b\u53ef\u5fae\u200b\uff09\u200b\u7684\u200b\u4f18\u5316\u200b</li> <li>\u200b\u514b\u670d\u200b\u4e86\u200b\u5728\u200b\u9ad8\u5206\u8fa8\u7387\u200b\u5efa\u6a21\u200b\u590d\u6742\u200b\u573a\u666f\u200b\u65f6\u200b\uff0c\u200b\u79bb\u6563\u200b\u5316\u4f53\u7d20\u200b\u7f51\u683c\u200b\u6240\u200b\u5e26\u6765\u200b\u7684\u200b\u5b58\u50a8\u200b\u6210\u672c\u200b\u8fc7\u9ad8\u200b\u7684\u200b\u95ee\u9898\u200b</li> </ul>"},{"location":"research/paper_reading/nerf/note/#_7","title":"\u4e0d\u8db3","text":"<ul> <li>\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u592a\u6162\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u50cf\u7d20\u200b\u90fd\u200b\u9700\u8981\u200b\u8fd1\u200b 200 \u200b\u6b21\u200b MLP \u200b\u6a21\u578b\u200b\u7684\u200b\u524d\u200b\u5411\u200b\u9884\u6d4b\u200b</li> <li>\u200b\u6a21\u578b\u200b\u6cdb\u5316\u200b\u6027\u592a\u5dee\u200b\uff1aNeRF \u200b\u8981\u200b\u9488\u5bf9\u200b\u6bcf\u4e2a\u200b\u573a\u666f\u200b\u5355\u72ec\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u6269\u5c55\u200b\u5230\u200b\u65b0\u200b\u51fa\u73b0\u200b\u7684\u200b\u573a\u666f\u200b</li> </ul>"}]}